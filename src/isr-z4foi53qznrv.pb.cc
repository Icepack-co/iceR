// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: isr-z4foi53qznrv.proto

#include "isr-z4foi53qznrv.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_isr_2dz4foi53qznrv_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_isr_2dz4foi53qznrv_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CollectionSequence;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_isr_2dz4foi53qznrv_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Configuration;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_isr_2dz4foi53qznrv_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Geocode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_isr_2dz4foi53qznrv_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SolutionResponse_Infeasibility_Info;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_isr_2dz4foi53qznrv_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SolutionResponse_InterStopAttribute;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_isr_2dz4foi53qznrv_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SolutionResponse_StopAttribute;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_isr_2dz4foi53qznrv_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Collection;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_isr_2dz4foi53qznrv_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_OffloadSite;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_isr_2dz4foi53qznrv_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SolutionResponse_Infeasibility;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_isr_2dz4foi53qznrv_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SolutionResponse_Matching;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_isr_2dz4foi53qznrv_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SolutionResponse_Segment;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_isr_2dz4foi53qznrv_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Vehicle;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_isr_2dz4foi53qznrv_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_SolutionResponse_InterStop;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_isr_2dz4foi53qznrv_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_SolutionResponse_Route;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_isr_2dz4foi53qznrv_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_SolutionResponse_Stop;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_isr_2dz4foi53qznrv_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_Model;
}  // namespace protobuf_isr_2dz4foi53qznrv_2eproto
namespace ISR {
class ConfigurationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Configuration>
      _instance;
} _Configuration_default_instance_;
class GeocodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Geocode>
      _instance;
} _Geocode_default_instance_;
class OffloadSiteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OffloadSite>
      _instance;
} _OffloadSite_default_instance_;
class CollectionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Collection>
      _instance;
} _Collection_default_instance_;
class VehicleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vehicle>
      _instance;
} _Vehicle_default_instance_;
class CollectionSequenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CollectionSequence>
      _instance;
} _CollectionSequence_default_instance_;
class ModelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Model>
      _instance;
} _Model_default_instance_;
class SolveRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SolveRequest>
      _instance;
} _SolveRequest_default_instance_;
class SolutionResponse_StopAttributeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SolutionResponse_StopAttribute>
      _instance;
} _SolutionResponse_StopAttribute_default_instance_;
class SolutionResponse_InterStopAttributeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SolutionResponse_InterStopAttribute>
      _instance;
} _SolutionResponse_InterStopAttribute_default_instance_;
class SolutionResponse_StopDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SolutionResponse_Stop>
      _instance;
} _SolutionResponse_Stop_default_instance_;
class SolutionResponse_InterStopDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SolutionResponse_InterStop>
      _instance;
} _SolutionResponse_InterStop_default_instance_;
class SolutionResponse_RouteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SolutionResponse_Route>
      _instance;
} _SolutionResponse_Route_default_instance_;
class SolutionResponse_Infeasibility_InfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SolutionResponse_Infeasibility_Info>
      _instance;
} _SolutionResponse_Infeasibility_Info_default_instance_;
class SolutionResponse_InfeasibilityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SolutionResponse_Infeasibility>
      _instance;
} _SolutionResponse_Infeasibility_default_instance_;
class SolutionResponse_MatchingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SolutionResponse_Matching>
      _instance;
} _SolutionResponse_Matching_default_instance_;
class SolutionResponse_SegmentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SolutionResponse_Segment>
      _instance;
} _SolutionResponse_Segment_default_instance_;
class SolutionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SolutionResponse>
      _instance;
} _SolutionResponse_default_instance_;
}  // namespace ISR
namespace protobuf_isr_2dz4foi53qznrv_2eproto {
static void InitDefaultsConfiguration() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ISR::_Configuration_default_instance_;
    new (ptr) ::ISR::Configuration();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ISR::Configuration::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Configuration =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConfiguration}, {}};

static void InitDefaultsGeocode() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ISR::_Geocode_default_instance_;
    new (ptr) ::ISR::Geocode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ISR::Geocode::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Geocode =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGeocode}, {}};

static void InitDefaultsOffloadSite() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ISR::_OffloadSite_default_instance_;
    new (ptr) ::ISR::OffloadSite();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ISR::OffloadSite::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_OffloadSite =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOffloadSite}, {
      &protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_Geocode.base,}};

static void InitDefaultsCollection() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ISR::_Collection_default_instance_;
    new (ptr) ::ISR::Collection();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ISR::Collection::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Collection =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCollection}, {
      &protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_Geocode.base,}};

static void InitDefaultsVehicle() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ISR::_Vehicle_default_instance_;
    new (ptr) ::ISR::Vehicle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ISR::Vehicle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Vehicle =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVehicle}, {
      &protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_Geocode.base,}};

static void InitDefaultsCollectionSequence() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ISR::_CollectionSequence_default_instance_;
    new (ptr) ::ISR::CollectionSequence();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ISR::CollectionSequence::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CollectionSequence =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCollectionSequence}, {}};

static void InitDefaultsModel() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ISR::_Model_default_instance_;
    new (ptr) ::ISR::Model();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ISR::Model::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_Model =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsModel}, {
      &protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_Configuration.base,
      &protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_Collection.base,
      &protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_OffloadSite.base,
      &protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_Vehicle.base,
      &protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_CollectionSequence.base,}};

static void InitDefaultsSolveRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ISR::_SolveRequest_default_instance_;
    new (ptr) ::ISR::SolveRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ISR::SolveRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_SolveRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSolveRequest}, {
      &protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_Model.base,
      &protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_CollectionSequence.base,}};

static void InitDefaultsSolutionResponse_StopAttribute() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ISR::_SolutionResponse_StopAttribute_default_instance_;
    new (ptr) ::ISR::SolutionResponse_StopAttribute();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ISR::SolutionResponse_StopAttribute::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SolutionResponse_StopAttribute =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSolutionResponse_StopAttribute}, {}};

static void InitDefaultsSolutionResponse_InterStopAttribute() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ISR::_SolutionResponse_InterStopAttribute_default_instance_;
    new (ptr) ::ISR::SolutionResponse_InterStopAttribute();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ISR::SolutionResponse_InterStopAttribute::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SolutionResponse_InterStopAttribute =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSolutionResponse_InterStopAttribute}, {}};

static void InitDefaultsSolutionResponse_Stop() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ISR::_SolutionResponse_Stop_default_instance_;
    new (ptr) ::ISR::SolutionResponse_Stop();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ISR::SolutionResponse_Stop::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_SolutionResponse_Stop =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSolutionResponse_Stop}, {
      &protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_SolutionResponse_StopAttribute.base,
      &protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_Geocode.base,}};

static void InitDefaultsSolutionResponse_InterStop() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ISR::_SolutionResponse_InterStop_default_instance_;
    new (ptr) ::ISR::SolutionResponse_InterStop();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ISR::SolutionResponse_InterStop::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_SolutionResponse_InterStop =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSolutionResponse_InterStop}, {
      &protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_SolutionResponse_InterStopAttribute.base,
      &protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_Geocode.base,}};

static void InitDefaultsSolutionResponse_Route() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ISR::_SolutionResponse_Route_default_instance_;
    new (ptr) ::ISR::SolutionResponse_Route();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ISR::SolutionResponse_Route::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_SolutionResponse_Route =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSolutionResponse_Route}, {
      &protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_SolutionResponse_Stop.base,
      &protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_SolutionResponse_InterStop.base,}};

static void InitDefaultsSolutionResponse_Infeasibility_Info() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ISR::_SolutionResponse_Infeasibility_Info_default_instance_;
    new (ptr) ::ISR::SolutionResponse_Infeasibility_Info();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ISR::SolutionResponse_Infeasibility_Info::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SolutionResponse_Infeasibility_Info =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSolutionResponse_Infeasibility_Info}, {}};

static void InitDefaultsSolutionResponse_Infeasibility() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ISR::_SolutionResponse_Infeasibility_default_instance_;
    new (ptr) ::ISR::SolutionResponse_Infeasibility();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ISR::SolutionResponse_Infeasibility::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SolutionResponse_Infeasibility =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSolutionResponse_Infeasibility}, {
      &protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_SolutionResponse_Infeasibility_Info.base,}};

static void InitDefaultsSolutionResponse_Matching() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ISR::_SolutionResponse_Matching_default_instance_;
    new (ptr) ::ISR::SolutionResponse_Matching();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ISR::SolutionResponse_Matching::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SolutionResponse_Matching =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSolutionResponse_Matching}, {
      &protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_Geocode.base,}};

static void InitDefaultsSolutionResponse_Segment() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ISR::_SolutionResponse_Segment_default_instance_;
    new (ptr) ::ISR::SolutionResponse_Segment();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ISR::SolutionResponse_Segment::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SolutionResponse_Segment =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSolutionResponse_Segment}, {
      &protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_Geocode.base,}};

static void InitDefaultsSolutionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ISR::_SolutionResponse_default_instance_;
    new (ptr) ::ISR::SolutionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ISR::SolutionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_SolutionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsSolutionResponse}, {
      &protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_SolutionResponse_Route.base,
      &protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_SolutionResponse_Infeasibility.base,
      &protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_SolutionResponse_Matching.base,
      &protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_SolutionResponse_Segment.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Configuration.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Geocode.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OffloadSite.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Collection.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Vehicle.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CollectionSequence.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Model.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SolveRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SolutionResponse_StopAttribute.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SolutionResponse_InterStopAttribute.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SolutionResponse_Stop.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SolutionResponse_InterStop.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SolutionResponse_Route.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SolutionResponse_Infeasibility_Info.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SolutionResponse_Infeasibility.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SolutionResponse_Matching.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SolutionResponse_Segment.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SolutionResponse.base);
}

::google::protobuf::Metadata file_level_metadata[18];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::Configuration, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::Configuration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::Configuration, timeunit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::Configuration, timecoef_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::Configuration, timecostcoef_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::Configuration, distanceunit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::Configuration, distancecostcoef_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::Configuration, drivingside_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::Configuration, collectionside_),
  3,
  4,
  5,
  6,
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::Geocode, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::Geocode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::Geocode, longitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::Geocode, latitude_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::OffloadSite, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::OffloadSite, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::OffloadSite, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::OffloadSite, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::OffloadSite, fixedoffloadtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::OffloadSite, offloadtimeperquantity_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::Collection, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::Collection, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::Collection, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::Collection, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::Collection, stoptime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::Collection, quantity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::Collection, offloadsiteid_),
  0,
  2,
  3,
  4,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::Vehicle, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::Vehicle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::Vehicle, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::Vehicle, startlocation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::Vehicle, endlocation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::Vehicle, starttime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::Vehicle, endtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::Vehicle, capacity_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::CollectionSequence, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::CollectionSequence, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::CollectionSequence, vehicleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::CollectionSequence, collectionid_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::Model, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::Model, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::Model, configuration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::Model, collections_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::Model, offloadsites_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::Model, vehicles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::Model, collectionsequence_),
  0,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolveRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolveRequest, model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolveRequest, modelid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolveRequest, routes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolveRequest, solvetype_),
  1,
  0,
  ~0u,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_StopAttribute, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_StopAttribute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_StopAttribute, dimid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_StopAttribute, startvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_StopAttribute, endvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_StopAttribute, cost_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_InterStopAttribute, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_InterStopAttribute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_InterStopAttribute, dimid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_InterStopAttribute, startvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_InterStopAttribute, endvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_InterStopAttribute, cost_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_Stop, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_Stop, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_Stop, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_Stop, sequence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_Stop, collectionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_Stop, offloadsiteid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_Stop, attributes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_Stop, segmentid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_Stop, location_),
  3,
  4,
  0,
  1,
  ~0u,
  5,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_InterStop, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_InterStop, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_InterStop, fromstopid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_InterStop, tostopid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_InterStop, attributes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_InterStop, geometry_),
  0,
  1,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_Route, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_Route, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_Route, vehicleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_Route, stops_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_Route, interstops_),
  0,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_Infeasibility_Info, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_Infeasibility_Info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_Infeasibility_Info, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_Infeasibility_Info, dimid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_Infeasibility_Info, limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_Infeasibility_Info, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_Infeasibility_Info, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_Infeasibility_Info, constrainingcollectionids_),
  0,
  1,
  2,
  3,
  4,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_Infeasibility, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_Infeasibility, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_Infeasibility, collectionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_Infeasibility, infeasibilityinfo_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_Matching, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_Matching, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_Matching, collectionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_Matching, collectionpoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_Matching, segmentid_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_Segment, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_Segment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_Segment, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_Segment, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_Segment, weight_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_Segment, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse_Segment, geometry_),
  1,
  0,
  2,
  3,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse, objective_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse, routes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse, infeasibilities_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse, matchings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ISR::SolutionResponse, segments_),
  0,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 12, sizeof(::ISR::Configuration)},
  { 19, 26, sizeof(::ISR::Geocode)},
  { 28, 37, sizeof(::ISR::OffloadSite)},
  { 41, 51, sizeof(::ISR::Collection)},
  { 56, 67, sizeof(::ISR::Vehicle)},
  { 73, 80, sizeof(::ISR::CollectionSequence)},
  { 82, 92, sizeof(::ISR::Model)},
  { 97, 106, sizeof(::ISR::SolveRequest)},
  { 110, 119, sizeof(::ISR::SolutionResponse_StopAttribute)},
  { 123, 132, sizeof(::ISR::SolutionResponse_InterStopAttribute)},
  { 136, 148, sizeof(::ISR::SolutionResponse_Stop)},
  { 155, 164, sizeof(::ISR::SolutionResponse_InterStop)},
  { 168, 176, sizeof(::ISR::SolutionResponse_Route)},
  { 179, 190, sizeof(::ISR::SolutionResponse_Infeasibility_Info)},
  { 196, 203, sizeof(::ISR::SolutionResponse_Infeasibility)},
  { 205, 213, sizeof(::ISR::SolutionResponse_Matching)},
  { 216, 226, sizeof(::ISR::SolutionResponse_Segment)},
  { 231, 241, sizeof(::ISR::SolutionResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ISR::_Configuration_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ISR::_Geocode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ISR::_OffloadSite_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ISR::_Collection_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ISR::_Vehicle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ISR::_CollectionSequence_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ISR::_Model_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ISR::_SolveRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ISR::_SolutionResponse_StopAttribute_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ISR::_SolutionResponse_InterStopAttribute_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ISR::_SolutionResponse_Stop_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ISR::_SolutionResponse_InterStop_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ISR::_SolutionResponse_Route_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ISR::_SolutionResponse_Infeasibility_Info_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ISR::_SolutionResponse_Infeasibility_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ISR::_SolutionResponse_Matching_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ISR::_SolutionResponse_Segment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ISR::_SolutionResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "isr-z4foi53qznrv.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 18);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\026isr-z4foi53qznrv.proto\022\003ISR\"\211\004\n\rConfig"
      "uration\022>\n\010timeUnit\030\001 \002(\0162#.ISR.Configur"
      "ation.eMeasurementUnit:\007MINUTES\022\023\n\010timeC"
      "oef\030\002 \002(\002:\0011\022\027\n\014timeCostCoef\030\003 \002(\002:\0011\022E\n"
      "\014distanceUnit\030\004 \002(\0162#.ISR.Configuration."
      "eMeasurementUnit:\nKILOMETRES\022\033\n\020distance"
      "CostCoef\030\005 \002(\002:\0011\0224\n\013drivingSide\030\006 \002(\0162\037"
      ".ISR.Configuration.eDrivingSide\022:\n\016colle"
      "ctionSide\030\007 \002(\0162\".ISR.Configuration.eCol"
      "lectionSide\"\\\n\020eMeasurementUnit\022\013\n\007SECON"
      "DS\020\000\022\013\n\007MINUTES\020\001\022\t\n\005HOURS\020\002\022\010\n\004DAYS\020\003\022\016"
      "\n\nKILOMETRES\020\004\022\t\n\005MILES\020\005\"#\n\014eDrivingSid"
      "e\022\010\n\004LEFT\020\000\022\t\n\005RIGHT\020\001\"1\n\017eCollectionSid"
      "e\022\024\n\020DRIVINGSIDE_ONLY\020\000\022\010\n\004BOTH\020\001\".\n\007Geo"
      "code\022\021\n\tlongitude\030\001 \002(\002\022\020\n\010latitude\030\002 \002("
      "\002\"y\n\013OffloadSite\022\n\n\002id\030\001 \002(\t\022\036\n\010location"
      "\030\002 \002(\0132\014.ISR.Geocode\022\033\n\020fixedOffloadTime"
      "\030\003 \002(\002:\0010\022!\n\026offloadTimePerQuantity\030\004 \002("
      "\002:\0010\"y\n\nCollection\022\n\n\002id\030\001 \002(\t\022\036\n\010locati"
      "on\030\002 \002(\0132\014.ISR.Geocode\022\023\n\010stopTime\030\003 \002(\002"
      ":\0010\022\023\n\010quantity\030\004 \002(\002:\0010\022\025\n\roffloadSiteI"
      "d\030\005 \002(\t\"\223\001\n\007Vehicle\022\n\n\002id\030\001 \002(\t\022#\n\rstart"
      "Location\030\002 \002(\0132\014.ISR.Geocode\022!\n\013endLocat"
      "ion\030\003 \002(\0132\014.ISR.Geocode\022\021\n\tstartTime\030\004 \002"
      "(\002\022\017\n\007endTime\030\005 \002(\002\022\020\n\010capacity\030\006 \002(\002\"=\n"
      "\022CollectionSequence\022\021\n\tvehicleId\030\001 \002(\t\022\024"
      "\n\014collectionId\030\002 \003(\t\"\325\001\n\005Model\022)\n\rconfig"
      "uration\030\001 \002(\0132\022.ISR.Configuration\022$\n\013col"
      "lections\030\002 \003(\0132\017.ISR.Collection\022&\n\014offlo"
      "adSites\030\003 \003(\0132\020.ISR.OffloadSite\022\036\n\010vehic"
      "les\030\004 \003(\0132\014.ISR.Vehicle\0223\n\022collectionSeq"
      "uence\030\005 \003(\0132\027.ISR.CollectionSequence\"\354\001\n"
      "\014SolveRequest\022\031\n\005model\030\001 \001(\0132\n.ISR.Model"
      "\022\017\n\007modelID\030\002 \001(\t\022\'\n\006routes\030\003 \003(\0132\027.ISR."
      "CollectionSequence\0228\n\tsolveType\030\004 \001(\0162\033."
      "ISR.SolveRequest.SolveType:\010Optimise\"M\n\t"
      "SolveType\022\014\n\010Optimise\020\000\022\014\n\010Evaluate\020\001\022\016\n"
      "\nReOptimise\020\002\022\024\n\020NetworkMatchings\020\003\"\227\n\n\020"
      "SolutionResponse\022\021\n\tobjective\030\001 \002(\002\022+\n\006r"
      "outes\030\002 \003(\0132\033.ISR.SolutionResponse.Route"
      "\022<\n\017infeasibilities\030\003 \003(\0132#.ISR.Solution"
      "Response.Infeasibility\0221\n\tmatchings\030\004 \003("
      "\0132\036.ISR.SolutionResponse.Matching\022/\n\010seg"
      "ments\030\005 \003(\0132\035.ISR.SolutionResponse.Segme"
      "nt\032R\n\rStopAttribute\022\r\n\005dimId\030\001 \002(\t\022\022\n\nst"
      "artValue\030\002 \002(\002\022\020\n\010endValue\030\003 \002(\002\022\014\n\004cost"
      "\030\004 \002(\002\032W\n\022InterStopAttribute\022\r\n\005dimId\030\001 "
      "\002(\t\022\022\n\nstartValue\030\002 \002(\002\022\020\n\010endValue\030\003 \002("
      "\002\022\014\n\004cost\030\004 \002(\002\032\275\001\n\004Stop\022\n\n\002id\030\001 \002(\005\022\020\n\010"
      "sequence\030\002 \002(\005\022\024\n\014collectionId\030\003 \001(\t\022\025\n\r"
      "offloadSiteId\030\004 \001(\t\0227\n\nattributes\030\005 \003(\0132"
      "#.ISR.SolutionResponse.StopAttribute\022\021\n\t"
      "segmentId\030\006 \001(\005\022\036\n\010location\030\007 \002(\0132\014.ISR."
      "Geocode\032\217\001\n\tInterStop\022\022\n\nfromStopId\030\001 \002("
      "\005\022\020\n\010toStopId\030\002 \002(\005\022<\n\nattributes\030\003 \003(\0132"
      "(.ISR.SolutionResponse.InterStopAttribut"
      "e\022\036\n\010geometry\030\004 \003(\0132\014.ISR.Geocode\032z\n\005Rou"
      "te\022\021\n\tvehicleId\030\001 \002(\t\022)\n\005stops\030\002 \003(\0132\032.I"
      "SR.SolutionResponse.Stop\0223\n\ninterStops\030\003"
      " \003(\0132\037.ISR.SolutionResponse.InterStop\032\342\001"
      "\n\rInfeasibility\022\024\n\014collectionId\030\001 \002(\t\022C\n"
      "\021infeasibilityInfo\030\002 \003(\0132(.ISR.SolutionR"
      "esponse.Infeasibility.Info\032v\n\004Info\022\017\n\007me"
      "ssage\030\001 \002(\t\022\r\n\005dimId\030\002 \001(\t\022\r\n\005limit\030\003 \001("
      "\002\022\r\n\005value\030\004 \001(\002\022\r\n\005count\030\005 \001(\003\022!\n\031const"
      "rainingCollectionIds\030\006 \003(\t\032Z\n\010Matching\022\024"
      "\n\014collectionId\030\001 \002(\t\022%\n\017collectionPoint\030"
      "\002 \002(\0132\014.ISR.Geocode\022\021\n\tsegmentId\030\003 \002(\005\032e"
      "\n\007Segment\022\n\n\002id\030\001 \002(\005\022\014\n\004name\030\002 \002(\t\022\016\n\006w"
      "eight\030\003 \002(\002\022\020\n\010duration\030\004 \002(\002\022\036\n\010geometr"
      "y\030\005 \003(\0132\014.ISR.GeocodeB\017\n\ricepackai.ISR"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2838);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "isr-z4foi53qznrv.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_isr_2dz4foi53qznrv_2eproto
namespace ISR {
const ::google::protobuf::EnumDescriptor* Configuration_eMeasurementUnit_descriptor() {
  protobuf_isr_2dz4foi53qznrv_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_isr_2dz4foi53qznrv_2eproto::file_level_enum_descriptors[0];
}
bool Configuration_eMeasurementUnit_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Configuration_eMeasurementUnit Configuration::SECONDS;
const Configuration_eMeasurementUnit Configuration::MINUTES;
const Configuration_eMeasurementUnit Configuration::HOURS;
const Configuration_eMeasurementUnit Configuration::DAYS;
const Configuration_eMeasurementUnit Configuration::KILOMETRES;
const Configuration_eMeasurementUnit Configuration::MILES;
const Configuration_eMeasurementUnit Configuration::eMeasurementUnit_MIN;
const Configuration_eMeasurementUnit Configuration::eMeasurementUnit_MAX;
const int Configuration::eMeasurementUnit_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Configuration_eDrivingSide_descriptor() {
  protobuf_isr_2dz4foi53qznrv_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_isr_2dz4foi53qznrv_2eproto::file_level_enum_descriptors[1];
}
bool Configuration_eDrivingSide_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Configuration_eDrivingSide Configuration::LEFT;
const Configuration_eDrivingSide Configuration::RIGHT;
const Configuration_eDrivingSide Configuration::eDrivingSide_MIN;
const Configuration_eDrivingSide Configuration::eDrivingSide_MAX;
const int Configuration::eDrivingSide_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Configuration_eCollectionSide_descriptor() {
  protobuf_isr_2dz4foi53qznrv_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_isr_2dz4foi53qznrv_2eproto::file_level_enum_descriptors[2];
}
bool Configuration_eCollectionSide_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Configuration_eCollectionSide Configuration::DRIVINGSIDE_ONLY;
const Configuration_eCollectionSide Configuration::BOTH;
const Configuration_eCollectionSide Configuration::eCollectionSide_MIN;
const Configuration_eCollectionSide Configuration::eCollectionSide_MAX;
const int Configuration::eCollectionSide_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SolveRequest_SolveType_descriptor() {
  protobuf_isr_2dz4foi53qznrv_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_isr_2dz4foi53qznrv_2eproto::file_level_enum_descriptors[3];
}
bool SolveRequest_SolveType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SolveRequest_SolveType SolveRequest::Optimise;
const SolveRequest_SolveType SolveRequest::Evaluate;
const SolveRequest_SolveType SolveRequest::ReOptimise;
const SolveRequest_SolveType SolveRequest::NetworkMatchings;
const SolveRequest_SolveType SolveRequest::SolveType_MIN;
const SolveRequest_SolveType SolveRequest::SolveType_MAX;
const int SolveRequest::SolveType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Configuration::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Configuration::kTimeUnitFieldNumber;
const int Configuration::kTimeCoefFieldNumber;
const int Configuration::kTimeCostCoefFieldNumber;
const int Configuration::kDistanceUnitFieldNumber;
const int Configuration::kDistanceCostCoefFieldNumber;
const int Configuration::kDrivingSideFieldNumber;
const int Configuration::kCollectionSideFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Configuration::Configuration()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_Configuration.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ISR.Configuration)
}
Configuration::Configuration(const Configuration& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&drivingside_, &from.drivingside_,
    static_cast<size_t>(reinterpret_cast<char*>(&distanceunit_) -
    reinterpret_cast<char*>(&drivingside_)) + sizeof(distanceunit_));
  // @@protoc_insertion_point(copy_constructor:ISR.Configuration)
}

void Configuration::SharedCtor() {
  ::memset(&drivingside_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&collectionside_) -
      reinterpret_cast<char*>(&drivingside_)) + sizeof(collectionside_));
  distancecostcoef_ = 1;
  timeunit_ = 1;
  timecoef_ = 1;
  timecostcoef_ = 1;
  distanceunit_ = 4;
}

Configuration::~Configuration() {
  // @@protoc_insertion_point(destructor:ISR.Configuration)
  SharedDtor();
}

void Configuration::SharedDtor() {
}

void Configuration::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Configuration::descriptor() {
  ::protobuf_isr_2dz4foi53qznrv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_isr_2dz4foi53qznrv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Configuration& Configuration::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_Configuration.base);
  return *internal_default_instance();
}


void Configuration::Clear() {
// @@protoc_insertion_point(message_clear_start:ISR.Configuration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    ::memset(&drivingside_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&collectionside_) -
        reinterpret_cast<char*>(&drivingside_)) + sizeof(collectionside_));
    distancecostcoef_ = 1;
    timeunit_ = 1;
    timecoef_ = 1;
    timecostcoef_ = 1;
    distanceunit_ = 4;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Configuration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ISR.Configuration)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ISR.Configuration.eMeasurementUnit timeUnit = 1 [default = MINUTES];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ISR::Configuration_eMeasurementUnit_IsValid(value)) {
            set_timeunit(static_cast< ::ISR::Configuration_eMeasurementUnit >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float timeCoef = 2 [default = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_timecoef();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &timecoef_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float timeCostCoef = 3 [default = 1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_timecostcoef();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &timecostcoef_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .ISR.Configuration.eMeasurementUnit distanceUnit = 4 [default = KILOMETRES];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ISR::Configuration_eMeasurementUnit_IsValid(value)) {
            set_distanceunit(static_cast< ::ISR::Configuration_eMeasurementUnit >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float distanceCostCoef = 5 [default = 1];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_distancecostcoef();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &distancecostcoef_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .ISR.Configuration.eDrivingSide drivingSide = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ISR::Configuration_eDrivingSide_IsValid(value)) {
            set_drivingside(static_cast< ::ISR::Configuration_eDrivingSide >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                6, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .ISR.Configuration.eCollectionSide collectionSide = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ISR::Configuration_eCollectionSide_IsValid(value)) {
            set_collectionside(static_cast< ::ISR::Configuration_eCollectionSide >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                7, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ISR.Configuration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ISR.Configuration)
  return false;
#undef DO_
}

void Configuration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ISR.Configuration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ISR.Configuration.eMeasurementUnit timeUnit = 1 [default = MINUTES];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->timeunit(), output);
  }

  // required float timeCoef = 2 [default = 1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->timecoef(), output);
  }

  // required float timeCostCoef = 3 [default = 1];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->timecostcoef(), output);
  }

  // required .ISR.Configuration.eMeasurementUnit distanceUnit = 4 [default = KILOMETRES];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->distanceunit(), output);
  }

  // required float distanceCostCoef = 5 [default = 1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->distancecostcoef(), output);
  }

  // required .ISR.Configuration.eDrivingSide drivingSide = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->drivingside(), output);
  }

  // required .ISR.Configuration.eCollectionSide collectionSide = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->collectionside(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ISR.Configuration)
}

::google::protobuf::uint8* Configuration::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ISR.Configuration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ISR.Configuration.eMeasurementUnit timeUnit = 1 [default = MINUTES];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->timeunit(), target);
  }

  // required float timeCoef = 2 [default = 1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->timecoef(), target);
  }

  // required float timeCostCoef = 3 [default = 1];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->timecostcoef(), target);
  }

  // required .ISR.Configuration.eMeasurementUnit distanceUnit = 4 [default = KILOMETRES];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->distanceunit(), target);
  }

  // required float distanceCostCoef = 5 [default = 1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->distancecostcoef(), target);
  }

  // required .ISR.Configuration.eDrivingSide drivingSide = 6;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->drivingside(), target);
  }

  // required .ISR.Configuration.eCollectionSide collectionSide = 7;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->collectionside(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ISR.Configuration)
  return target;
}

size_t Configuration::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ISR.Configuration)
  size_t total_size = 0;

  if (has_drivingside()) {
    // required .ISR.Configuration.eDrivingSide drivingSide = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->drivingside());
  }

  if (has_collectionside()) {
    // required .ISR.Configuration.eCollectionSide collectionSide = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->collectionside());
  }

  if (has_distancecostcoef()) {
    // required float distanceCostCoef = 5 [default = 1];
    total_size += 1 + 4;
  }

  if (has_timeunit()) {
    // required .ISR.Configuration.eMeasurementUnit timeUnit = 1 [default = MINUTES];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->timeunit());
  }

  if (has_timecoef()) {
    // required float timeCoef = 2 [default = 1];
    total_size += 1 + 4;
  }

  if (has_timecostcoef()) {
    // required float timeCostCoef = 3 [default = 1];
    total_size += 1 + 4;
  }

  if (has_distanceunit()) {
    // required .ISR.Configuration.eMeasurementUnit distanceUnit = 4 [default = KILOMETRES];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->distanceunit());
  }

  return total_size;
}
size_t Configuration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ISR.Configuration)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000007f) ^ 0x0000007f) == 0) {  // All required fields are present.
    // required .ISR.Configuration.eDrivingSide drivingSide = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->drivingside());

    // required .ISR.Configuration.eCollectionSide collectionSide = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->collectionside());

    // required float distanceCostCoef = 5 [default = 1];
    total_size += 1 + 4;

    // required .ISR.Configuration.eMeasurementUnit timeUnit = 1 [default = MINUTES];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->timeunit());

    // required float timeCoef = 2 [default = 1];
    total_size += 1 + 4;

    // required float timeCostCoef = 3 [default = 1];
    total_size += 1 + 4;

    // required .ISR.Configuration.eMeasurementUnit distanceUnit = 4 [default = KILOMETRES];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->distanceunit());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Configuration::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ISR.Configuration)
  GOOGLE_DCHECK_NE(&from, this);
  const Configuration* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Configuration>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ISR.Configuration)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ISR.Configuration)
    MergeFrom(*source);
  }
}

void Configuration::MergeFrom(const Configuration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ISR.Configuration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      drivingside_ = from.drivingside_;
    }
    if (cached_has_bits & 0x00000002u) {
      collectionside_ = from.collectionside_;
    }
    if (cached_has_bits & 0x00000004u) {
      distancecostcoef_ = from.distancecostcoef_;
    }
    if (cached_has_bits & 0x00000008u) {
      timeunit_ = from.timeunit_;
    }
    if (cached_has_bits & 0x00000010u) {
      timecoef_ = from.timecoef_;
    }
    if (cached_has_bits & 0x00000020u) {
      timecostcoef_ = from.timecostcoef_;
    }
    if (cached_has_bits & 0x00000040u) {
      distanceunit_ = from.distanceunit_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Configuration::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ISR.Configuration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Configuration::CopyFrom(const Configuration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ISR.Configuration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Configuration::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;
  return true;
}

void Configuration::Swap(Configuration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Configuration::InternalSwap(Configuration* other) {
  using std::swap;
  swap(drivingside_, other->drivingside_);
  swap(collectionside_, other->collectionside_);
  swap(distancecostcoef_, other->distancecostcoef_);
  swap(timeunit_, other->timeunit_);
  swap(timecoef_, other->timecoef_);
  swap(timecostcoef_, other->timecostcoef_);
  swap(distanceunit_, other->distanceunit_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Configuration::GetMetadata() const {
  protobuf_isr_2dz4foi53qznrv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_isr_2dz4foi53qznrv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Geocode::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Geocode::kLongitudeFieldNumber;
const int Geocode::kLatitudeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Geocode::Geocode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_Geocode.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ISR.Geocode)
}
Geocode::Geocode(const Geocode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&longitude_, &from.longitude_,
    static_cast<size_t>(reinterpret_cast<char*>(&latitude_) -
    reinterpret_cast<char*>(&longitude_)) + sizeof(latitude_));
  // @@protoc_insertion_point(copy_constructor:ISR.Geocode)
}

void Geocode::SharedCtor() {
  ::memset(&longitude_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&latitude_) -
      reinterpret_cast<char*>(&longitude_)) + sizeof(latitude_));
}

Geocode::~Geocode() {
  // @@protoc_insertion_point(destructor:ISR.Geocode)
  SharedDtor();
}

void Geocode::SharedDtor() {
}

void Geocode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Geocode::descriptor() {
  ::protobuf_isr_2dz4foi53qznrv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_isr_2dz4foi53qznrv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Geocode& Geocode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_Geocode.base);
  return *internal_default_instance();
}


void Geocode::Clear() {
// @@protoc_insertion_point(message_clear_start:ISR.Geocode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&longitude_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&latitude_) -
        reinterpret_cast<char*>(&longitude_)) + sizeof(latitude_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Geocode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ISR.Geocode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float longitude = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_longitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float latitude = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_latitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ISR.Geocode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ISR.Geocode)
  return false;
#undef DO_
}

void Geocode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ISR.Geocode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float longitude = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->longitude(), output);
  }

  // required float latitude = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->latitude(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ISR.Geocode)
}

::google::protobuf::uint8* Geocode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ISR.Geocode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float longitude = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->longitude(), target);
  }

  // required float latitude = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->latitude(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ISR.Geocode)
  return target;
}

size_t Geocode::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ISR.Geocode)
  size_t total_size = 0;

  if (has_longitude()) {
    // required float longitude = 1;
    total_size += 1 + 4;
  }

  if (has_latitude()) {
    // required float latitude = 2;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t Geocode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ISR.Geocode)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required float longitude = 1;
    total_size += 1 + 4;

    // required float latitude = 2;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Geocode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ISR.Geocode)
  GOOGLE_DCHECK_NE(&from, this);
  const Geocode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Geocode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ISR.Geocode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ISR.Geocode)
    MergeFrom(*source);
  }
}

void Geocode::MergeFrom(const Geocode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ISR.Geocode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      longitude_ = from.longitude_;
    }
    if (cached_has_bits & 0x00000002u) {
      latitude_ = from.latitude_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Geocode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ISR.Geocode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Geocode::CopyFrom(const Geocode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ISR.Geocode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Geocode::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Geocode::Swap(Geocode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Geocode::InternalSwap(Geocode* other) {
  using std::swap;
  swap(longitude_, other->longitude_);
  swap(latitude_, other->latitude_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Geocode::GetMetadata() const {
  protobuf_isr_2dz4foi53qznrv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_isr_2dz4foi53qznrv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OffloadSite::InitAsDefaultInstance() {
  ::ISR::_OffloadSite_default_instance_._instance.get_mutable()->location_ = const_cast< ::ISR::Geocode*>(
      ::ISR::Geocode::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OffloadSite::kIdFieldNumber;
const int OffloadSite::kLocationFieldNumber;
const int OffloadSite::kFixedOffloadTimeFieldNumber;
const int OffloadSite::kOffloadTimePerQuantityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OffloadSite::OffloadSite()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_OffloadSite.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ISR.OffloadSite)
}
OffloadSite::OffloadSite(const OffloadSite& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_location()) {
    location_ = new ::ISR::Geocode(*from.location_);
  } else {
    location_ = NULL;
  }
  ::memcpy(&fixedoffloadtime_, &from.fixedoffloadtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&offloadtimeperquantity_) -
    reinterpret_cast<char*>(&fixedoffloadtime_)) + sizeof(offloadtimeperquantity_));
  // @@protoc_insertion_point(copy_constructor:ISR.OffloadSite)
}

void OffloadSite::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&location_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&offloadtimeperquantity_) -
      reinterpret_cast<char*>(&location_)) + sizeof(offloadtimeperquantity_));
}

OffloadSite::~OffloadSite() {
  // @@protoc_insertion_point(destructor:ISR.OffloadSite)
  SharedDtor();
}

void OffloadSite::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete location_;
}

void OffloadSite::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OffloadSite::descriptor() {
  ::protobuf_isr_2dz4foi53qznrv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_isr_2dz4foi53qznrv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OffloadSite& OffloadSite::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_OffloadSite.base);
  return *internal_default_instance();
}


void OffloadSite::Clear() {
// @@protoc_insertion_point(message_clear_start:ISR.OffloadSite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(location_ != NULL);
      location_->Clear();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&fixedoffloadtime_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&offloadtimeperquantity_) -
        reinterpret_cast<char*>(&fixedoffloadtime_)) + sizeof(offloadtimeperquantity_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OffloadSite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ISR.OffloadSite)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ISR.OffloadSite.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .ISR.Geocode location = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float fixedOffloadTime = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_fixedoffloadtime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fixedoffloadtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float offloadTimePerQuantity = 4 [default = 0];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_offloadtimeperquantity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &offloadtimeperquantity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ISR.OffloadSite)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ISR.OffloadSite)
  return false;
#undef DO_
}

void OffloadSite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ISR.OffloadSite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ISR.OffloadSite.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required .ISR.Geocode location = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_location(), output);
  }

  // required float fixedOffloadTime = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->fixedoffloadtime(), output);
  }

  // required float offloadTimePerQuantity = 4 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->offloadtimeperquantity(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ISR.OffloadSite)
}

::google::protobuf::uint8* OffloadSite::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ISR.OffloadSite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ISR.OffloadSite.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required .ISR.Geocode location = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_location(), deterministic, target);
  }

  // required float fixedOffloadTime = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->fixedoffloadtime(), target);
  }

  // required float offloadTimePerQuantity = 4 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->offloadtimeperquantity(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ISR.OffloadSite)
  return target;
}

size_t OffloadSite::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ISR.OffloadSite)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_location()) {
    // required .ISR.Geocode location = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *location_);
  }

  if (has_fixedoffloadtime()) {
    // required float fixedOffloadTime = 3 [default = 0];
    total_size += 1 + 4;
  }

  if (has_offloadtimeperquantity()) {
    // required float offloadTimePerQuantity = 4 [default = 0];
    total_size += 1 + 4;
  }

  return total_size;
}
size_t OffloadSite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ISR.OffloadSite)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required .ISR.Geocode location = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *location_);

    // required float fixedOffloadTime = 3 [default = 0];
    total_size += 1 + 4;

    // required float offloadTimePerQuantity = 4 [default = 0];
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OffloadSite::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ISR.OffloadSite)
  GOOGLE_DCHECK_NE(&from, this);
  const OffloadSite* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OffloadSite>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ISR.OffloadSite)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ISR.OffloadSite)
    MergeFrom(*source);
  }
}

void OffloadSite::MergeFrom(const OffloadSite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ISR.OffloadSite)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_location()->::ISR::Geocode::MergeFrom(from.location());
    }
    if (cached_has_bits & 0x00000004u) {
      fixedoffloadtime_ = from.fixedoffloadtime_;
    }
    if (cached_has_bits & 0x00000008u) {
      offloadtimeperquantity_ = from.offloadtimeperquantity_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void OffloadSite::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ISR.OffloadSite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OffloadSite::CopyFrom(const OffloadSite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ISR.OffloadSite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OffloadSite::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  if (has_location()) {
    if (!this->location_->IsInitialized()) return false;
  }
  return true;
}

void OffloadSite::Swap(OffloadSite* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OffloadSite::InternalSwap(OffloadSite* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(location_, other->location_);
  swap(fixedoffloadtime_, other->fixedoffloadtime_);
  swap(offloadtimeperquantity_, other->offloadtimeperquantity_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OffloadSite::GetMetadata() const {
  protobuf_isr_2dz4foi53qznrv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_isr_2dz4foi53qznrv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Collection::InitAsDefaultInstance() {
  ::ISR::_Collection_default_instance_._instance.get_mutable()->location_ = const_cast< ::ISR::Geocode*>(
      ::ISR::Geocode::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Collection::kIdFieldNumber;
const int Collection::kLocationFieldNumber;
const int Collection::kStopTimeFieldNumber;
const int Collection::kQuantityFieldNumber;
const int Collection::kOffloadSiteIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Collection::Collection()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_Collection.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ISR.Collection)
}
Collection::Collection(const Collection& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  offloadsiteid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_offloadsiteid()) {
    offloadsiteid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.offloadsiteid_);
  }
  if (from.has_location()) {
    location_ = new ::ISR::Geocode(*from.location_);
  } else {
    location_ = NULL;
  }
  ::memcpy(&stoptime_, &from.stoptime_,
    static_cast<size_t>(reinterpret_cast<char*>(&quantity_) -
    reinterpret_cast<char*>(&stoptime_)) + sizeof(quantity_));
  // @@protoc_insertion_point(copy_constructor:ISR.Collection)
}

void Collection::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offloadsiteid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&location_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&quantity_) -
      reinterpret_cast<char*>(&location_)) + sizeof(quantity_));
}

Collection::~Collection() {
  // @@protoc_insertion_point(destructor:ISR.Collection)
  SharedDtor();
}

void Collection::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offloadsiteid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete location_;
}

void Collection::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Collection::descriptor() {
  ::protobuf_isr_2dz4foi53qznrv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_isr_2dz4foi53qznrv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Collection& Collection::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_Collection.base);
  return *internal_default_instance();
}


void Collection::Clear() {
// @@protoc_insertion_point(message_clear_start:ISR.Collection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      offloadsiteid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(location_ != NULL);
      location_->Clear();
    }
  }
  if (cached_has_bits & 24u) {
    ::memset(&stoptime_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&quantity_) -
        reinterpret_cast<char*>(&stoptime_)) + sizeof(quantity_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Collection::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ISR.Collection)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ISR.Collection.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .ISR.Geocode location = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float stopTime = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_stoptime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &stoptime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float quantity = 4 [default = 0];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_quantity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &quantity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string offloadSiteId = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_offloadsiteid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->offloadsiteid().data(), static_cast<int>(this->offloadsiteid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ISR.Collection.offloadSiteId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ISR.Collection)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ISR.Collection)
  return false;
#undef DO_
}

void Collection::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ISR.Collection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ISR.Collection.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required .ISR.Geocode location = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_location(), output);
  }

  // required float stopTime = 3 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->stoptime(), output);
  }

  // required float quantity = 4 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->quantity(), output);
  }

  // required string offloadSiteId = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->offloadsiteid().data(), static_cast<int>(this->offloadsiteid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ISR.Collection.offloadSiteId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->offloadsiteid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ISR.Collection)
}

::google::protobuf::uint8* Collection::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ISR.Collection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ISR.Collection.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required .ISR.Geocode location = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_location(), deterministic, target);
  }

  // required float stopTime = 3 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->stoptime(), target);
  }

  // required float quantity = 4 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->quantity(), target);
  }

  // required string offloadSiteId = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->offloadsiteid().data(), static_cast<int>(this->offloadsiteid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ISR.Collection.offloadSiteId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->offloadsiteid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ISR.Collection)
  return target;
}

size_t Collection::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ISR.Collection)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_offloadsiteid()) {
    // required string offloadSiteId = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->offloadsiteid());
  }

  if (has_location()) {
    // required .ISR.Geocode location = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *location_);
  }

  if (has_stoptime()) {
    // required float stopTime = 3 [default = 0];
    total_size += 1 + 4;
  }

  if (has_quantity()) {
    // required float quantity = 4 [default = 0];
    total_size += 1 + 4;
  }

  return total_size;
}
size_t Collection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ISR.Collection)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required string offloadSiteId = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->offloadsiteid());

    // required .ISR.Geocode location = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *location_);

    // required float stopTime = 3 [default = 0];
    total_size += 1 + 4;

    // required float quantity = 4 [default = 0];
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Collection::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ISR.Collection)
  GOOGLE_DCHECK_NE(&from, this);
  const Collection* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Collection>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ISR.Collection)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ISR.Collection)
    MergeFrom(*source);
  }
}

void Collection::MergeFrom(const Collection& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ISR.Collection)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_offloadsiteid();
      offloadsiteid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.offloadsiteid_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_location()->::ISR::Geocode::MergeFrom(from.location());
    }
    if (cached_has_bits & 0x00000008u) {
      stoptime_ = from.stoptime_;
    }
    if (cached_has_bits & 0x00000010u) {
      quantity_ = from.quantity_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Collection::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ISR.Collection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Collection::CopyFrom(const Collection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ISR.Collection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Collection::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  if (has_location()) {
    if (!this->location_->IsInitialized()) return false;
  }
  return true;
}

void Collection::Swap(Collection* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Collection::InternalSwap(Collection* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  offloadsiteid_.Swap(&other->offloadsiteid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(location_, other->location_);
  swap(stoptime_, other->stoptime_);
  swap(quantity_, other->quantity_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Collection::GetMetadata() const {
  protobuf_isr_2dz4foi53qznrv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_isr_2dz4foi53qznrv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Vehicle::InitAsDefaultInstance() {
  ::ISR::_Vehicle_default_instance_._instance.get_mutable()->startlocation_ = const_cast< ::ISR::Geocode*>(
      ::ISR::Geocode::internal_default_instance());
  ::ISR::_Vehicle_default_instance_._instance.get_mutable()->endlocation_ = const_cast< ::ISR::Geocode*>(
      ::ISR::Geocode::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vehicle::kIdFieldNumber;
const int Vehicle::kStartLocationFieldNumber;
const int Vehicle::kEndLocationFieldNumber;
const int Vehicle::kStartTimeFieldNumber;
const int Vehicle::kEndTimeFieldNumber;
const int Vehicle::kCapacityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vehicle::Vehicle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_Vehicle.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ISR.Vehicle)
}
Vehicle::Vehicle(const Vehicle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_startlocation()) {
    startlocation_ = new ::ISR::Geocode(*from.startlocation_);
  } else {
    startlocation_ = NULL;
  }
  if (from.has_endlocation()) {
    endlocation_ = new ::ISR::Geocode(*from.endlocation_);
  } else {
    endlocation_ = NULL;
  }
  ::memcpy(&starttime_, &from.starttime_,
    static_cast<size_t>(reinterpret_cast<char*>(&capacity_) -
    reinterpret_cast<char*>(&starttime_)) + sizeof(capacity_));
  // @@protoc_insertion_point(copy_constructor:ISR.Vehicle)
}

void Vehicle::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&startlocation_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&capacity_) -
      reinterpret_cast<char*>(&startlocation_)) + sizeof(capacity_));
}

Vehicle::~Vehicle() {
  // @@protoc_insertion_point(destructor:ISR.Vehicle)
  SharedDtor();
}

void Vehicle::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete startlocation_;
  if (this != internal_default_instance()) delete endlocation_;
}

void Vehicle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Vehicle::descriptor() {
  ::protobuf_isr_2dz4foi53qznrv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_isr_2dz4foi53qznrv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vehicle& Vehicle::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_Vehicle.base);
  return *internal_default_instance();
}


void Vehicle::Clear() {
// @@protoc_insertion_point(message_clear_start:ISR.Vehicle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(startlocation_ != NULL);
      startlocation_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(endlocation_ != NULL);
      endlocation_->Clear();
    }
  }
  if (cached_has_bits & 56u) {
    ::memset(&starttime_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&capacity_) -
        reinterpret_cast<char*>(&starttime_)) + sizeof(capacity_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Vehicle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ISR.Vehicle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ISR.Vehicle.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .ISR.Geocode startLocation = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_startlocation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .ISR.Geocode endLocation = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_endlocation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float startTime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_starttime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &starttime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float endTime = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_endtime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &endtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float capacity = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {
          set_has_capacity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &capacity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ISR.Vehicle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ISR.Vehicle)
  return false;
#undef DO_
}

void Vehicle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ISR.Vehicle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ISR.Vehicle.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required .ISR.Geocode startLocation = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_startlocation(), output);
  }

  // required .ISR.Geocode endLocation = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_endlocation(), output);
  }

  // required float startTime = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->starttime(), output);
  }

  // required float endTime = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->endtime(), output);
  }

  // required float capacity = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->capacity(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ISR.Vehicle)
}

::google::protobuf::uint8* Vehicle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ISR.Vehicle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ISR.Vehicle.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required .ISR.Geocode startLocation = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_startlocation(), deterministic, target);
  }

  // required .ISR.Geocode endLocation = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_endlocation(), deterministic, target);
  }

  // required float startTime = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->starttime(), target);
  }

  // required float endTime = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->endtime(), target);
  }

  // required float capacity = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->capacity(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ISR.Vehicle)
  return target;
}

size_t Vehicle::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ISR.Vehicle)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_startlocation()) {
    // required .ISR.Geocode startLocation = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *startlocation_);
  }

  if (has_endlocation()) {
    // required .ISR.Geocode endLocation = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *endlocation_);
  }

  if (has_starttime()) {
    // required float startTime = 4;
    total_size += 1 + 4;
  }

  if (has_endtime()) {
    // required float endTime = 5;
    total_size += 1 + 4;
  }

  if (has_capacity()) {
    // required float capacity = 6;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t Vehicle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ISR.Vehicle)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required .ISR.Geocode startLocation = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *startlocation_);

    // required .ISR.Geocode endLocation = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *endlocation_);

    // required float startTime = 4;
    total_size += 1 + 4;

    // required float endTime = 5;
    total_size += 1 + 4;

    // required float capacity = 6;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vehicle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ISR.Vehicle)
  GOOGLE_DCHECK_NE(&from, this);
  const Vehicle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vehicle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ISR.Vehicle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ISR.Vehicle)
    MergeFrom(*source);
  }
}

void Vehicle::MergeFrom(const Vehicle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ISR.Vehicle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_startlocation()->::ISR::Geocode::MergeFrom(from.startlocation());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_endlocation()->::ISR::Geocode::MergeFrom(from.endlocation());
    }
    if (cached_has_bits & 0x00000008u) {
      starttime_ = from.starttime_;
    }
    if (cached_has_bits & 0x00000010u) {
      endtime_ = from.endtime_;
    }
    if (cached_has_bits & 0x00000020u) {
      capacity_ = from.capacity_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Vehicle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ISR.Vehicle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vehicle::CopyFrom(const Vehicle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ISR.Vehicle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vehicle::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;
  if (has_startlocation()) {
    if (!this->startlocation_->IsInitialized()) return false;
  }
  if (has_endlocation()) {
    if (!this->endlocation_->IsInitialized()) return false;
  }
  return true;
}

void Vehicle::Swap(Vehicle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vehicle::InternalSwap(Vehicle* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(startlocation_, other->startlocation_);
  swap(endlocation_, other->endlocation_);
  swap(starttime_, other->starttime_);
  swap(endtime_, other->endtime_);
  swap(capacity_, other->capacity_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Vehicle::GetMetadata() const {
  protobuf_isr_2dz4foi53qznrv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_isr_2dz4foi53qznrv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CollectionSequence::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CollectionSequence::kVehicleIdFieldNumber;
const int CollectionSequence::kCollectionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CollectionSequence::CollectionSequence()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_CollectionSequence.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ISR.CollectionSequence)
}
CollectionSequence::CollectionSequence(const CollectionSequence& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      collectionid_(from.collectionid_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vehicleid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_vehicleid()) {
    vehicleid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vehicleid_);
  }
  // @@protoc_insertion_point(copy_constructor:ISR.CollectionSequence)
}

void CollectionSequence::SharedCtor() {
  vehicleid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CollectionSequence::~CollectionSequence() {
  // @@protoc_insertion_point(destructor:ISR.CollectionSequence)
  SharedDtor();
}

void CollectionSequence::SharedDtor() {
  vehicleid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CollectionSequence::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CollectionSequence::descriptor() {
  ::protobuf_isr_2dz4foi53qznrv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_isr_2dz4foi53qznrv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CollectionSequence& CollectionSequence::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_CollectionSequence.base);
  return *internal_default_instance();
}


void CollectionSequence::Clear() {
// @@protoc_insertion_point(message_clear_start:ISR.CollectionSequence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  collectionid_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    vehicleid_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CollectionSequence::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ISR.CollectionSequence)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string vehicleId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vehicleid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->vehicleid().data(), static_cast<int>(this->vehicleid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ISR.CollectionSequence.vehicleId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string collectionId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_collectionid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->collectionid(this->collectionid_size() - 1).data(),
            static_cast<int>(this->collectionid(this->collectionid_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ISR.CollectionSequence.collectionId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ISR.CollectionSequence)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ISR.CollectionSequence)
  return false;
#undef DO_
}

void CollectionSequence::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ISR.CollectionSequence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string vehicleId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vehicleid().data(), static_cast<int>(this->vehicleid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ISR.CollectionSequence.vehicleId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->vehicleid(), output);
  }

  // repeated string collectionId = 2;
  for (int i = 0, n = this->collectionid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->collectionid(i).data(), static_cast<int>(this->collectionid(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ISR.CollectionSequence.collectionId");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->collectionid(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ISR.CollectionSequence)
}

::google::protobuf::uint8* CollectionSequence::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ISR.CollectionSequence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string vehicleId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vehicleid().data(), static_cast<int>(this->vehicleid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ISR.CollectionSequence.vehicleId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->vehicleid(), target);
  }

  // repeated string collectionId = 2;
  for (int i = 0, n = this->collectionid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->collectionid(i).data(), static_cast<int>(this->collectionid(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ISR.CollectionSequence.collectionId");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->collectionid(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ISR.CollectionSequence)
  return target;
}

size_t CollectionSequence::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ISR.CollectionSequence)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string vehicleId = 1;
  if (has_vehicleid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vehicleid());
  }
  // repeated string collectionId = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->collectionid_size());
  for (int i = 0, n = this->collectionid_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->collectionid(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CollectionSequence::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ISR.CollectionSequence)
  GOOGLE_DCHECK_NE(&from, this);
  const CollectionSequence* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CollectionSequence>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ISR.CollectionSequence)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ISR.CollectionSequence)
    MergeFrom(*source);
  }
}

void CollectionSequence::MergeFrom(const CollectionSequence& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ISR.CollectionSequence)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  collectionid_.MergeFrom(from.collectionid_);
  if (from.has_vehicleid()) {
    set_has_vehicleid();
    vehicleid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vehicleid_);
  }
}

void CollectionSequence::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ISR.CollectionSequence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CollectionSequence::CopyFrom(const CollectionSequence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ISR.CollectionSequence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CollectionSequence::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CollectionSequence::Swap(CollectionSequence* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CollectionSequence::InternalSwap(CollectionSequence* other) {
  using std::swap;
  collectionid_.InternalSwap(CastToBase(&other->collectionid_));
  vehicleid_.Swap(&other->vehicleid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CollectionSequence::GetMetadata() const {
  protobuf_isr_2dz4foi53qznrv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_isr_2dz4foi53qznrv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Model::InitAsDefaultInstance() {
  ::ISR::_Model_default_instance_._instance.get_mutable()->configuration_ = const_cast< ::ISR::Configuration*>(
      ::ISR::Configuration::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Model::kConfigurationFieldNumber;
const int Model::kCollectionsFieldNumber;
const int Model::kOffloadSitesFieldNumber;
const int Model::kVehiclesFieldNumber;
const int Model::kCollectionSequenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Model::Model()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_Model.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ISR.Model)
}
Model::Model(const Model& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      collections_(from.collections_),
      offloadsites_(from.offloadsites_),
      vehicles_(from.vehicles_),
      collectionsequence_(from.collectionsequence_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_configuration()) {
    configuration_ = new ::ISR::Configuration(*from.configuration_);
  } else {
    configuration_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ISR.Model)
}

void Model::SharedCtor() {
  configuration_ = NULL;
}

Model::~Model() {
  // @@protoc_insertion_point(destructor:ISR.Model)
  SharedDtor();
}

void Model::SharedDtor() {
  if (this != internal_default_instance()) delete configuration_;
}

void Model::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Model::descriptor() {
  ::protobuf_isr_2dz4foi53qznrv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_isr_2dz4foi53qznrv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Model& Model::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_Model.base);
  return *internal_default_instance();
}


void Model::Clear() {
// @@protoc_insertion_point(message_clear_start:ISR.Model)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  collections_.Clear();
  offloadsites_.Clear();
  vehicles_.Clear();
  collectionsequence_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(configuration_ != NULL);
    configuration_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Model::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ISR.Model)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ISR.Configuration configuration = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_configuration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ISR.Collection collections = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_collections()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ISR.OffloadSite offloadSites = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_offloadsites()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ISR.Vehicle vehicles = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_vehicles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ISR.CollectionSequence collectionSequence = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_collectionsequence()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ISR.Model)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ISR.Model)
  return false;
#undef DO_
}

void Model::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ISR.Model)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ISR.Configuration configuration = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_configuration(), output);
  }

  // repeated .ISR.Collection collections = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->collections_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->collections(static_cast<int>(i)),
      output);
  }

  // repeated .ISR.OffloadSite offloadSites = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->offloadsites_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->offloadsites(static_cast<int>(i)),
      output);
  }

  // repeated .ISR.Vehicle vehicles = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vehicles_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->vehicles(static_cast<int>(i)),
      output);
  }

  // repeated .ISR.CollectionSequence collectionSequence = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->collectionsequence_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->collectionsequence(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ISR.Model)
}

::google::protobuf::uint8* Model::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ISR.Model)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ISR.Configuration configuration = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_configuration(), deterministic, target);
  }

  // repeated .ISR.Collection collections = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->collections_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->collections(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ISR.OffloadSite offloadSites = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->offloadsites_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->offloadsites(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ISR.Vehicle vehicles = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vehicles_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->vehicles(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ISR.CollectionSequence collectionSequence = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->collectionsequence_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->collectionsequence(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ISR.Model)
  return target;
}

size_t Model::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ISR.Model)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .ISR.Configuration configuration = 1;
  if (has_configuration()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *configuration_);
  }
  // repeated .ISR.Collection collections = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->collections_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->collections(static_cast<int>(i)));
    }
  }

  // repeated .ISR.OffloadSite offloadSites = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->offloadsites_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->offloadsites(static_cast<int>(i)));
    }
  }

  // repeated .ISR.Vehicle vehicles = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->vehicles_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->vehicles(static_cast<int>(i)));
    }
  }

  // repeated .ISR.CollectionSequence collectionSequence = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->collectionsequence_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->collectionsequence(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Model::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ISR.Model)
  GOOGLE_DCHECK_NE(&from, this);
  const Model* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Model>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ISR.Model)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ISR.Model)
    MergeFrom(*source);
  }
}

void Model::MergeFrom(const Model& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ISR.Model)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  collections_.MergeFrom(from.collections_);
  offloadsites_.MergeFrom(from.offloadsites_);
  vehicles_.MergeFrom(from.vehicles_);
  collectionsequence_.MergeFrom(from.collectionsequence_);
  if (from.has_configuration()) {
    mutable_configuration()->::ISR::Configuration::MergeFrom(from.configuration());
  }
}

void Model::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ISR.Model)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Model::CopyFrom(const Model& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ISR.Model)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Model::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->collections())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->offloadsites())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->vehicles())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->collectionsequence())) return false;
  if (has_configuration()) {
    if (!this->configuration_->IsInitialized()) return false;
  }
  return true;
}

void Model::Swap(Model* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Model::InternalSwap(Model* other) {
  using std::swap;
  CastToBase(&collections_)->InternalSwap(CastToBase(&other->collections_));
  CastToBase(&offloadsites_)->InternalSwap(CastToBase(&other->offloadsites_));
  CastToBase(&vehicles_)->InternalSwap(CastToBase(&other->vehicles_));
  CastToBase(&collectionsequence_)->InternalSwap(CastToBase(&other->collectionsequence_));
  swap(configuration_, other->configuration_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Model::GetMetadata() const {
  protobuf_isr_2dz4foi53qznrv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_isr_2dz4foi53qznrv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SolveRequest::InitAsDefaultInstance() {
  ::ISR::_SolveRequest_default_instance_._instance.get_mutable()->model_ = const_cast< ::ISR::Model*>(
      ::ISR::Model::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SolveRequest::kModelFieldNumber;
const int SolveRequest::kModelIDFieldNumber;
const int SolveRequest::kRoutesFieldNumber;
const int SolveRequest::kSolveTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SolveRequest::SolveRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_SolveRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ISR.SolveRequest)
}
SolveRequest::SolveRequest(const SolveRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      routes_(from.routes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  modelid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_modelid()) {
    modelid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modelid_);
  }
  if (from.has_model()) {
    model_ = new ::ISR::Model(*from.model_);
  } else {
    model_ = NULL;
  }
  solvetype_ = from.solvetype_;
  // @@protoc_insertion_point(copy_constructor:ISR.SolveRequest)
}

void SolveRequest::SharedCtor() {
  modelid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&model_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&solvetype_) -
      reinterpret_cast<char*>(&model_)) + sizeof(solvetype_));
}

SolveRequest::~SolveRequest() {
  // @@protoc_insertion_point(destructor:ISR.SolveRequest)
  SharedDtor();
}

void SolveRequest::SharedDtor() {
  modelid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete model_;
}

void SolveRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SolveRequest::descriptor() {
  ::protobuf_isr_2dz4foi53qznrv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_isr_2dz4foi53qznrv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SolveRequest& SolveRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_SolveRequest.base);
  return *internal_default_instance();
}


void SolveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ISR.SolveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  routes_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      modelid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(model_ != NULL);
      model_->Clear();
    }
  }
  solvetype_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SolveRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ISR.SolveRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ISR.Model model = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_model()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string modelID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_modelid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->modelid().data(), static_cast<int>(this->modelid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ISR.SolveRequest.modelID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ISR.CollectionSequence routes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_routes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ISR.SolveRequest.SolveType solveType = 4 [default = Optimise];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ISR::SolveRequest_SolveType_IsValid(value)) {
            set_solvetype(static_cast< ::ISR::SolveRequest_SolveType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ISR.SolveRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ISR.SolveRequest)
  return false;
#undef DO_
}

void SolveRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ISR.SolveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ISR.Model model = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_model(), output);
  }

  // optional string modelID = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->modelid().data(), static_cast<int>(this->modelid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ISR.SolveRequest.modelID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->modelid(), output);
  }

  // repeated .ISR.CollectionSequence routes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->routes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->routes(static_cast<int>(i)),
      output);
  }

  // optional .ISR.SolveRequest.SolveType solveType = 4 [default = Optimise];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->solvetype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ISR.SolveRequest)
}

::google::protobuf::uint8* SolveRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ISR.SolveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ISR.Model model = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_model(), deterministic, target);
  }

  // optional string modelID = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->modelid().data(), static_cast<int>(this->modelid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ISR.SolveRequest.modelID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->modelid(), target);
  }

  // repeated .ISR.CollectionSequence routes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->routes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->routes(static_cast<int>(i)), deterministic, target);
  }

  // optional .ISR.SolveRequest.SolveType solveType = 4 [default = Optimise];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->solvetype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ISR.SolveRequest)
  return target;
}

size_t SolveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ISR.SolveRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .ISR.CollectionSequence routes = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->routes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->routes(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional string modelID = 2;
    if (has_modelid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->modelid());
    }

    // optional .ISR.Model model = 1;
    if (has_model()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *model_);
    }

    // optional .ISR.SolveRequest.SolveType solveType = 4 [default = Optimise];
    if (has_solvetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->solvetype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SolveRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ISR.SolveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SolveRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SolveRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ISR.SolveRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ISR.SolveRequest)
    MergeFrom(*source);
  }
}

void SolveRequest::MergeFrom(const SolveRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ISR.SolveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  routes_.MergeFrom(from.routes_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_modelid();
      modelid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modelid_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_model()->::ISR::Model::MergeFrom(from.model());
    }
    if (cached_has_bits & 0x00000004u) {
      solvetype_ = from.solvetype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SolveRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ISR.SolveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SolveRequest::CopyFrom(const SolveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ISR.SolveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SolveRequest::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->routes())) return false;
  if (has_model()) {
    if (!this->model_->IsInitialized()) return false;
  }
  return true;
}

void SolveRequest::Swap(SolveRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SolveRequest::InternalSwap(SolveRequest* other) {
  using std::swap;
  CastToBase(&routes_)->InternalSwap(CastToBase(&other->routes_));
  modelid_.Swap(&other->modelid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(model_, other->model_);
  swap(solvetype_, other->solvetype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SolveRequest::GetMetadata() const {
  protobuf_isr_2dz4foi53qznrv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_isr_2dz4foi53qznrv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SolutionResponse_StopAttribute::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SolutionResponse_StopAttribute::kDimIdFieldNumber;
const int SolutionResponse_StopAttribute::kStartValueFieldNumber;
const int SolutionResponse_StopAttribute::kEndValueFieldNumber;
const int SolutionResponse_StopAttribute::kCostFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SolutionResponse_StopAttribute::SolutionResponse_StopAttribute()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_SolutionResponse_StopAttribute.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ISR.SolutionResponse.StopAttribute)
}
SolutionResponse_StopAttribute::SolutionResponse_StopAttribute(const SolutionResponse_StopAttribute& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dimid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_dimid()) {
    dimid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dimid_);
  }
  ::memcpy(&startvalue_, &from.startvalue_,
    static_cast<size_t>(reinterpret_cast<char*>(&cost_) -
    reinterpret_cast<char*>(&startvalue_)) + sizeof(cost_));
  // @@protoc_insertion_point(copy_constructor:ISR.SolutionResponse.StopAttribute)
}

void SolutionResponse_StopAttribute::SharedCtor() {
  dimid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&startvalue_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cost_) -
      reinterpret_cast<char*>(&startvalue_)) + sizeof(cost_));
}

SolutionResponse_StopAttribute::~SolutionResponse_StopAttribute() {
  // @@protoc_insertion_point(destructor:ISR.SolutionResponse.StopAttribute)
  SharedDtor();
}

void SolutionResponse_StopAttribute::SharedDtor() {
  dimid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SolutionResponse_StopAttribute::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SolutionResponse_StopAttribute::descriptor() {
  ::protobuf_isr_2dz4foi53qznrv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_isr_2dz4foi53qznrv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SolutionResponse_StopAttribute& SolutionResponse_StopAttribute::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_SolutionResponse_StopAttribute.base);
  return *internal_default_instance();
}


void SolutionResponse_StopAttribute::Clear() {
// @@protoc_insertion_point(message_clear_start:ISR.SolutionResponse.StopAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    dimid_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&startvalue_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&cost_) -
        reinterpret_cast<char*>(&startvalue_)) + sizeof(cost_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SolutionResponse_StopAttribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ISR.SolutionResponse.StopAttribute)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string dimId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dimid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dimid().data(), static_cast<int>(this->dimid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ISR.SolutionResponse.StopAttribute.dimId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float startValue = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_startvalue();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &startvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float endValue = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_endvalue();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &endvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float cost = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_cost();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cost_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ISR.SolutionResponse.StopAttribute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ISR.SolutionResponse.StopAttribute)
  return false;
#undef DO_
}

void SolutionResponse_StopAttribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ISR.SolutionResponse.StopAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string dimId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dimid().data(), static_cast<int>(this->dimid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ISR.SolutionResponse.StopAttribute.dimId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->dimid(), output);
  }

  // required float startValue = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->startvalue(), output);
  }

  // required float endValue = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->endvalue(), output);
  }

  // required float cost = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->cost(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ISR.SolutionResponse.StopAttribute)
}

::google::protobuf::uint8* SolutionResponse_StopAttribute::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ISR.SolutionResponse.StopAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string dimId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dimid().data(), static_cast<int>(this->dimid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ISR.SolutionResponse.StopAttribute.dimId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->dimid(), target);
  }

  // required float startValue = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->startvalue(), target);
  }

  // required float endValue = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->endvalue(), target);
  }

  // required float cost = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->cost(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ISR.SolutionResponse.StopAttribute)
  return target;
}

size_t SolutionResponse_StopAttribute::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ISR.SolutionResponse.StopAttribute)
  size_t total_size = 0;

  if (has_dimid()) {
    // required string dimId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dimid());
  }

  if (has_startvalue()) {
    // required float startValue = 2;
    total_size += 1 + 4;
  }

  if (has_endvalue()) {
    // required float endValue = 3;
    total_size += 1 + 4;
  }

  if (has_cost()) {
    // required float cost = 4;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t SolutionResponse_StopAttribute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ISR.SolutionResponse.StopAttribute)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string dimId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dimid());

    // required float startValue = 2;
    total_size += 1 + 4;

    // required float endValue = 3;
    total_size += 1 + 4;

    // required float cost = 4;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SolutionResponse_StopAttribute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ISR.SolutionResponse.StopAttribute)
  GOOGLE_DCHECK_NE(&from, this);
  const SolutionResponse_StopAttribute* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SolutionResponse_StopAttribute>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ISR.SolutionResponse.StopAttribute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ISR.SolutionResponse.StopAttribute)
    MergeFrom(*source);
  }
}

void SolutionResponse_StopAttribute::MergeFrom(const SolutionResponse_StopAttribute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ISR.SolutionResponse.StopAttribute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_dimid();
      dimid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dimid_);
    }
    if (cached_has_bits & 0x00000002u) {
      startvalue_ = from.startvalue_;
    }
    if (cached_has_bits & 0x00000004u) {
      endvalue_ = from.endvalue_;
    }
    if (cached_has_bits & 0x00000008u) {
      cost_ = from.cost_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SolutionResponse_StopAttribute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ISR.SolutionResponse.StopAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SolutionResponse_StopAttribute::CopyFrom(const SolutionResponse_StopAttribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ISR.SolutionResponse.StopAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SolutionResponse_StopAttribute::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void SolutionResponse_StopAttribute::Swap(SolutionResponse_StopAttribute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SolutionResponse_StopAttribute::InternalSwap(SolutionResponse_StopAttribute* other) {
  using std::swap;
  dimid_.Swap(&other->dimid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(startvalue_, other->startvalue_);
  swap(endvalue_, other->endvalue_);
  swap(cost_, other->cost_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SolutionResponse_StopAttribute::GetMetadata() const {
  protobuf_isr_2dz4foi53qznrv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_isr_2dz4foi53qznrv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SolutionResponse_InterStopAttribute::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SolutionResponse_InterStopAttribute::kDimIdFieldNumber;
const int SolutionResponse_InterStopAttribute::kStartValueFieldNumber;
const int SolutionResponse_InterStopAttribute::kEndValueFieldNumber;
const int SolutionResponse_InterStopAttribute::kCostFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SolutionResponse_InterStopAttribute::SolutionResponse_InterStopAttribute()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_SolutionResponse_InterStopAttribute.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ISR.SolutionResponse.InterStopAttribute)
}
SolutionResponse_InterStopAttribute::SolutionResponse_InterStopAttribute(const SolutionResponse_InterStopAttribute& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dimid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_dimid()) {
    dimid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dimid_);
  }
  ::memcpy(&startvalue_, &from.startvalue_,
    static_cast<size_t>(reinterpret_cast<char*>(&cost_) -
    reinterpret_cast<char*>(&startvalue_)) + sizeof(cost_));
  // @@protoc_insertion_point(copy_constructor:ISR.SolutionResponse.InterStopAttribute)
}

void SolutionResponse_InterStopAttribute::SharedCtor() {
  dimid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&startvalue_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cost_) -
      reinterpret_cast<char*>(&startvalue_)) + sizeof(cost_));
}

SolutionResponse_InterStopAttribute::~SolutionResponse_InterStopAttribute() {
  // @@protoc_insertion_point(destructor:ISR.SolutionResponse.InterStopAttribute)
  SharedDtor();
}

void SolutionResponse_InterStopAttribute::SharedDtor() {
  dimid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SolutionResponse_InterStopAttribute::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SolutionResponse_InterStopAttribute::descriptor() {
  ::protobuf_isr_2dz4foi53qznrv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_isr_2dz4foi53qznrv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SolutionResponse_InterStopAttribute& SolutionResponse_InterStopAttribute::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_SolutionResponse_InterStopAttribute.base);
  return *internal_default_instance();
}


void SolutionResponse_InterStopAttribute::Clear() {
// @@protoc_insertion_point(message_clear_start:ISR.SolutionResponse.InterStopAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    dimid_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&startvalue_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&cost_) -
        reinterpret_cast<char*>(&startvalue_)) + sizeof(cost_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SolutionResponse_InterStopAttribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ISR.SolutionResponse.InterStopAttribute)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string dimId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dimid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dimid().data(), static_cast<int>(this->dimid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ISR.SolutionResponse.InterStopAttribute.dimId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float startValue = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_startvalue();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &startvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float endValue = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_endvalue();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &endvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float cost = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_cost();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cost_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ISR.SolutionResponse.InterStopAttribute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ISR.SolutionResponse.InterStopAttribute)
  return false;
#undef DO_
}

void SolutionResponse_InterStopAttribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ISR.SolutionResponse.InterStopAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string dimId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dimid().data(), static_cast<int>(this->dimid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ISR.SolutionResponse.InterStopAttribute.dimId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->dimid(), output);
  }

  // required float startValue = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->startvalue(), output);
  }

  // required float endValue = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->endvalue(), output);
  }

  // required float cost = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->cost(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ISR.SolutionResponse.InterStopAttribute)
}

::google::protobuf::uint8* SolutionResponse_InterStopAttribute::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ISR.SolutionResponse.InterStopAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string dimId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dimid().data(), static_cast<int>(this->dimid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ISR.SolutionResponse.InterStopAttribute.dimId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->dimid(), target);
  }

  // required float startValue = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->startvalue(), target);
  }

  // required float endValue = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->endvalue(), target);
  }

  // required float cost = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->cost(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ISR.SolutionResponse.InterStopAttribute)
  return target;
}

size_t SolutionResponse_InterStopAttribute::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ISR.SolutionResponse.InterStopAttribute)
  size_t total_size = 0;

  if (has_dimid()) {
    // required string dimId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dimid());
  }

  if (has_startvalue()) {
    // required float startValue = 2;
    total_size += 1 + 4;
  }

  if (has_endvalue()) {
    // required float endValue = 3;
    total_size += 1 + 4;
  }

  if (has_cost()) {
    // required float cost = 4;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t SolutionResponse_InterStopAttribute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ISR.SolutionResponse.InterStopAttribute)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string dimId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dimid());

    // required float startValue = 2;
    total_size += 1 + 4;

    // required float endValue = 3;
    total_size += 1 + 4;

    // required float cost = 4;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SolutionResponse_InterStopAttribute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ISR.SolutionResponse.InterStopAttribute)
  GOOGLE_DCHECK_NE(&from, this);
  const SolutionResponse_InterStopAttribute* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SolutionResponse_InterStopAttribute>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ISR.SolutionResponse.InterStopAttribute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ISR.SolutionResponse.InterStopAttribute)
    MergeFrom(*source);
  }
}

void SolutionResponse_InterStopAttribute::MergeFrom(const SolutionResponse_InterStopAttribute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ISR.SolutionResponse.InterStopAttribute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_dimid();
      dimid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dimid_);
    }
    if (cached_has_bits & 0x00000002u) {
      startvalue_ = from.startvalue_;
    }
    if (cached_has_bits & 0x00000004u) {
      endvalue_ = from.endvalue_;
    }
    if (cached_has_bits & 0x00000008u) {
      cost_ = from.cost_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SolutionResponse_InterStopAttribute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ISR.SolutionResponse.InterStopAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SolutionResponse_InterStopAttribute::CopyFrom(const SolutionResponse_InterStopAttribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ISR.SolutionResponse.InterStopAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SolutionResponse_InterStopAttribute::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void SolutionResponse_InterStopAttribute::Swap(SolutionResponse_InterStopAttribute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SolutionResponse_InterStopAttribute::InternalSwap(SolutionResponse_InterStopAttribute* other) {
  using std::swap;
  dimid_.Swap(&other->dimid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(startvalue_, other->startvalue_);
  swap(endvalue_, other->endvalue_);
  swap(cost_, other->cost_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SolutionResponse_InterStopAttribute::GetMetadata() const {
  protobuf_isr_2dz4foi53qznrv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_isr_2dz4foi53qznrv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SolutionResponse_Stop::InitAsDefaultInstance() {
  ::ISR::_SolutionResponse_Stop_default_instance_._instance.get_mutable()->location_ = const_cast< ::ISR::Geocode*>(
      ::ISR::Geocode::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SolutionResponse_Stop::kIdFieldNumber;
const int SolutionResponse_Stop::kSequenceFieldNumber;
const int SolutionResponse_Stop::kCollectionIdFieldNumber;
const int SolutionResponse_Stop::kOffloadSiteIdFieldNumber;
const int SolutionResponse_Stop::kAttributesFieldNumber;
const int SolutionResponse_Stop::kSegmentIdFieldNumber;
const int SolutionResponse_Stop::kLocationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SolutionResponse_Stop::SolutionResponse_Stop()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_SolutionResponse_Stop.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ISR.SolutionResponse.Stop)
}
SolutionResponse_Stop::SolutionResponse_Stop(const SolutionResponse_Stop& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      attributes_(from.attributes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  collectionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_collectionid()) {
    collectionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collectionid_);
  }
  offloadsiteid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_offloadsiteid()) {
    offloadsiteid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.offloadsiteid_);
  }
  if (from.has_location()) {
    location_ = new ::ISR::Geocode(*from.location_);
  } else {
    location_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&segmentid_) -
    reinterpret_cast<char*>(&id_)) + sizeof(segmentid_));
  // @@protoc_insertion_point(copy_constructor:ISR.SolutionResponse.Stop)
}

void SolutionResponse_Stop::SharedCtor() {
  collectionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offloadsiteid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&location_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&segmentid_) -
      reinterpret_cast<char*>(&location_)) + sizeof(segmentid_));
}

SolutionResponse_Stop::~SolutionResponse_Stop() {
  // @@protoc_insertion_point(destructor:ISR.SolutionResponse.Stop)
  SharedDtor();
}

void SolutionResponse_Stop::SharedDtor() {
  collectionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offloadsiteid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete location_;
}

void SolutionResponse_Stop::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SolutionResponse_Stop::descriptor() {
  ::protobuf_isr_2dz4foi53qznrv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_isr_2dz4foi53qznrv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SolutionResponse_Stop& SolutionResponse_Stop::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_SolutionResponse_Stop.base);
  return *internal_default_instance();
}


void SolutionResponse_Stop::Clear() {
// @@protoc_insertion_point(message_clear_start:ISR.SolutionResponse.Stop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attributes_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      collectionid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      offloadsiteid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(location_ != NULL);
      location_->Clear();
    }
  }
  if (cached_has_bits & 56u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&segmentid_) -
        reinterpret_cast<char*>(&id_)) + sizeof(segmentid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SolutionResponse_Stop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ISR.SolutionResponse.Stop)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 sequence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_sequence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sequence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string collectionId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_collectionid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->collectionid().data(), static_cast<int>(this->collectionid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ISR.SolutionResponse.Stop.collectionId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string offloadSiteId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_offloadsiteid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->offloadsiteid().data(), static_cast<int>(this->offloadsiteid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ISR.SolutionResponse.Stop.offloadSiteId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ISR.SolutionResponse.StopAttribute attributes = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_attributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 segmentId = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_segmentid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &segmentid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .ISR.Geocode location = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ISR.SolutionResponse.Stop)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ISR.SolutionResponse.Stop)
  return false;
#undef DO_
}

void SolutionResponse_Stop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ISR.SolutionResponse.Stop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int32 sequence = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sequence(), output);
  }

  // optional string collectionId = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->collectionid().data(), static_cast<int>(this->collectionid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ISR.SolutionResponse.Stop.collectionId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->collectionid(), output);
  }

  // optional string offloadSiteId = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->offloadsiteid().data(), static_cast<int>(this->offloadsiteid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ISR.SolutionResponse.Stop.offloadSiteId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->offloadsiteid(), output);
  }

  // repeated .ISR.SolutionResponse.StopAttribute attributes = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attributes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->attributes(static_cast<int>(i)),
      output);
  }

  // optional int32 segmentId = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->segmentid(), output);
  }

  // required .ISR.Geocode location = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_location(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ISR.SolutionResponse.Stop)
}

::google::protobuf::uint8* SolutionResponse_Stop::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ISR.SolutionResponse.Stop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int32 sequence = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sequence(), target);
  }

  // optional string collectionId = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->collectionid().data(), static_cast<int>(this->collectionid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ISR.SolutionResponse.Stop.collectionId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->collectionid(), target);
  }

  // optional string offloadSiteId = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->offloadsiteid().data(), static_cast<int>(this->offloadsiteid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ISR.SolutionResponse.Stop.offloadSiteId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->offloadsiteid(), target);
  }

  // repeated .ISR.SolutionResponse.StopAttribute attributes = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attributes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->attributes(static_cast<int>(i)), deterministic, target);
  }

  // optional int32 segmentId = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->segmentid(), target);
  }

  // required .ISR.Geocode location = 7;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_location(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ISR.SolutionResponse.Stop)
  return target;
}

size_t SolutionResponse_Stop::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ISR.SolutionResponse.Stop)
  size_t total_size = 0;

  if (has_location()) {
    // required .ISR.Geocode location = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *location_);
  }

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_sequence()) {
    // required int32 sequence = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sequence());
  }

  return total_size;
}
size_t SolutionResponse_Stop::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ISR.SolutionResponse.Stop)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001c) ^ 0x0000001c) == 0) {  // All required fields are present.
    // required .ISR.Geocode location = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *location_);

    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 sequence = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sequence());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .ISR.SolutionResponse.StopAttribute attributes = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->attributes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->attributes(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string collectionId = 3;
    if (has_collectionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->collectionid());
    }

    // optional string offloadSiteId = 4;
    if (has_offloadsiteid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->offloadsiteid());
    }

  }
  // optional int32 segmentId = 6;
  if (has_segmentid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->segmentid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SolutionResponse_Stop::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ISR.SolutionResponse.Stop)
  GOOGLE_DCHECK_NE(&from, this);
  const SolutionResponse_Stop* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SolutionResponse_Stop>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ISR.SolutionResponse.Stop)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ISR.SolutionResponse.Stop)
    MergeFrom(*source);
  }
}

void SolutionResponse_Stop::MergeFrom(const SolutionResponse_Stop& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ISR.SolutionResponse.Stop)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attributes_.MergeFrom(from.attributes_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_collectionid();
      collectionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collectionid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_offloadsiteid();
      offloadsiteid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.offloadsiteid_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_location()->::ISR::Geocode::MergeFrom(from.location());
    }
    if (cached_has_bits & 0x00000008u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000010u) {
      sequence_ = from.sequence_;
    }
    if (cached_has_bits & 0x00000020u) {
      segmentid_ = from.segmentid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SolutionResponse_Stop::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ISR.SolutionResponse.Stop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SolutionResponse_Stop::CopyFrom(const SolutionResponse_Stop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ISR.SolutionResponse.Stop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SolutionResponse_Stop::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001c) != 0x0000001c) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->attributes())) return false;
  if (has_location()) {
    if (!this->location_->IsInitialized()) return false;
  }
  return true;
}

void SolutionResponse_Stop::Swap(SolutionResponse_Stop* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SolutionResponse_Stop::InternalSwap(SolutionResponse_Stop* other) {
  using std::swap;
  CastToBase(&attributes_)->InternalSwap(CastToBase(&other->attributes_));
  collectionid_.Swap(&other->collectionid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  offloadsiteid_.Swap(&other->offloadsiteid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(location_, other->location_);
  swap(id_, other->id_);
  swap(sequence_, other->sequence_);
  swap(segmentid_, other->segmentid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SolutionResponse_Stop::GetMetadata() const {
  protobuf_isr_2dz4foi53qznrv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_isr_2dz4foi53qznrv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SolutionResponse_InterStop::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SolutionResponse_InterStop::kFromStopIdFieldNumber;
const int SolutionResponse_InterStop::kToStopIdFieldNumber;
const int SolutionResponse_InterStop::kAttributesFieldNumber;
const int SolutionResponse_InterStop::kGeometryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SolutionResponse_InterStop::SolutionResponse_InterStop()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_SolutionResponse_InterStop.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ISR.SolutionResponse.InterStop)
}
SolutionResponse_InterStop::SolutionResponse_InterStop(const SolutionResponse_InterStop& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      attributes_(from.attributes_),
      geometry_(from.geometry_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&fromstopid_, &from.fromstopid_,
    static_cast<size_t>(reinterpret_cast<char*>(&tostopid_) -
    reinterpret_cast<char*>(&fromstopid_)) + sizeof(tostopid_));
  // @@protoc_insertion_point(copy_constructor:ISR.SolutionResponse.InterStop)
}

void SolutionResponse_InterStop::SharedCtor() {
  ::memset(&fromstopid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tostopid_) -
      reinterpret_cast<char*>(&fromstopid_)) + sizeof(tostopid_));
}

SolutionResponse_InterStop::~SolutionResponse_InterStop() {
  // @@protoc_insertion_point(destructor:ISR.SolutionResponse.InterStop)
  SharedDtor();
}

void SolutionResponse_InterStop::SharedDtor() {
}

void SolutionResponse_InterStop::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SolutionResponse_InterStop::descriptor() {
  ::protobuf_isr_2dz4foi53qznrv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_isr_2dz4foi53qznrv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SolutionResponse_InterStop& SolutionResponse_InterStop::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_SolutionResponse_InterStop.base);
  return *internal_default_instance();
}


void SolutionResponse_InterStop::Clear() {
// @@protoc_insertion_point(message_clear_start:ISR.SolutionResponse.InterStop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attributes_.Clear();
  geometry_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&fromstopid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&tostopid_) -
        reinterpret_cast<char*>(&fromstopid_)) + sizeof(tostopid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SolutionResponse_InterStop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ISR.SolutionResponse.InterStop)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 fromStopId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_fromstopid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fromstopid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 toStopId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_tostopid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tostopid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ISR.SolutionResponse.InterStopAttribute attributes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_attributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ISR.Geocode geometry = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_geometry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ISR.SolutionResponse.InterStop)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ISR.SolutionResponse.InterStop)
  return false;
#undef DO_
}

void SolutionResponse_InterStop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ISR.SolutionResponse.InterStop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 fromStopId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fromstopid(), output);
  }

  // required int32 toStopId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->tostopid(), output);
  }

  // repeated .ISR.SolutionResponse.InterStopAttribute attributes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attributes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->attributes(static_cast<int>(i)),
      output);
  }

  // repeated .ISR.Geocode geometry = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->geometry_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->geometry(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ISR.SolutionResponse.InterStop)
}

::google::protobuf::uint8* SolutionResponse_InterStop::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ISR.SolutionResponse.InterStop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 fromStopId = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fromstopid(), target);
  }

  // required int32 toStopId = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->tostopid(), target);
  }

  // repeated .ISR.SolutionResponse.InterStopAttribute attributes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attributes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->attributes(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ISR.Geocode geometry = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->geometry_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->geometry(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ISR.SolutionResponse.InterStop)
  return target;
}

size_t SolutionResponse_InterStop::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ISR.SolutionResponse.InterStop)
  size_t total_size = 0;

  if (has_fromstopid()) {
    // required int32 fromStopId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fromstopid());
  }

  if (has_tostopid()) {
    // required int32 toStopId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tostopid());
  }

  return total_size;
}
size_t SolutionResponse_InterStop::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ISR.SolutionResponse.InterStop)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 fromStopId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fromstopid());

    // required int32 toStopId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tostopid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .ISR.SolutionResponse.InterStopAttribute attributes = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->attributes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->attributes(static_cast<int>(i)));
    }
  }

  // repeated .ISR.Geocode geometry = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->geometry_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->geometry(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SolutionResponse_InterStop::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ISR.SolutionResponse.InterStop)
  GOOGLE_DCHECK_NE(&from, this);
  const SolutionResponse_InterStop* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SolutionResponse_InterStop>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ISR.SolutionResponse.InterStop)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ISR.SolutionResponse.InterStop)
    MergeFrom(*source);
  }
}

void SolutionResponse_InterStop::MergeFrom(const SolutionResponse_InterStop& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ISR.SolutionResponse.InterStop)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attributes_.MergeFrom(from.attributes_);
  geometry_.MergeFrom(from.geometry_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      fromstopid_ = from.fromstopid_;
    }
    if (cached_has_bits & 0x00000002u) {
      tostopid_ = from.tostopid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SolutionResponse_InterStop::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ISR.SolutionResponse.InterStop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SolutionResponse_InterStop::CopyFrom(const SolutionResponse_InterStop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ISR.SolutionResponse.InterStop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SolutionResponse_InterStop::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->attributes())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->geometry())) return false;
  return true;
}

void SolutionResponse_InterStop::Swap(SolutionResponse_InterStop* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SolutionResponse_InterStop::InternalSwap(SolutionResponse_InterStop* other) {
  using std::swap;
  CastToBase(&attributes_)->InternalSwap(CastToBase(&other->attributes_));
  CastToBase(&geometry_)->InternalSwap(CastToBase(&other->geometry_));
  swap(fromstopid_, other->fromstopid_);
  swap(tostopid_, other->tostopid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SolutionResponse_InterStop::GetMetadata() const {
  protobuf_isr_2dz4foi53qznrv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_isr_2dz4foi53qznrv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SolutionResponse_Route::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SolutionResponse_Route::kVehicleIdFieldNumber;
const int SolutionResponse_Route::kStopsFieldNumber;
const int SolutionResponse_Route::kInterStopsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SolutionResponse_Route::SolutionResponse_Route()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_SolutionResponse_Route.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ISR.SolutionResponse.Route)
}
SolutionResponse_Route::SolutionResponse_Route(const SolutionResponse_Route& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      stops_(from.stops_),
      interstops_(from.interstops_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vehicleid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_vehicleid()) {
    vehicleid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vehicleid_);
  }
  // @@protoc_insertion_point(copy_constructor:ISR.SolutionResponse.Route)
}

void SolutionResponse_Route::SharedCtor() {
  vehicleid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SolutionResponse_Route::~SolutionResponse_Route() {
  // @@protoc_insertion_point(destructor:ISR.SolutionResponse.Route)
  SharedDtor();
}

void SolutionResponse_Route::SharedDtor() {
  vehicleid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SolutionResponse_Route::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SolutionResponse_Route::descriptor() {
  ::protobuf_isr_2dz4foi53qznrv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_isr_2dz4foi53qznrv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SolutionResponse_Route& SolutionResponse_Route::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_SolutionResponse_Route.base);
  return *internal_default_instance();
}


void SolutionResponse_Route::Clear() {
// @@protoc_insertion_point(message_clear_start:ISR.SolutionResponse.Route)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stops_.Clear();
  interstops_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    vehicleid_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SolutionResponse_Route::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ISR.SolutionResponse.Route)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string vehicleId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vehicleid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->vehicleid().data(), static_cast<int>(this->vehicleid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ISR.SolutionResponse.Route.vehicleId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ISR.SolutionResponse.Stop stops = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_stops()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ISR.SolutionResponse.InterStop interStops = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_interstops()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ISR.SolutionResponse.Route)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ISR.SolutionResponse.Route)
  return false;
#undef DO_
}

void SolutionResponse_Route::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ISR.SolutionResponse.Route)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string vehicleId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vehicleid().data(), static_cast<int>(this->vehicleid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ISR.SolutionResponse.Route.vehicleId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->vehicleid(), output);
  }

  // repeated .ISR.SolutionResponse.Stop stops = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stops_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->stops(static_cast<int>(i)),
      output);
  }

  // repeated .ISR.SolutionResponse.InterStop interStops = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->interstops_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->interstops(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ISR.SolutionResponse.Route)
}

::google::protobuf::uint8* SolutionResponse_Route::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ISR.SolutionResponse.Route)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string vehicleId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vehicleid().data(), static_cast<int>(this->vehicleid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ISR.SolutionResponse.Route.vehicleId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->vehicleid(), target);
  }

  // repeated .ISR.SolutionResponse.Stop stops = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stops_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->stops(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ISR.SolutionResponse.InterStop interStops = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->interstops_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->interstops(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ISR.SolutionResponse.Route)
  return target;
}

size_t SolutionResponse_Route::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ISR.SolutionResponse.Route)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string vehicleId = 1;
  if (has_vehicleid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vehicleid());
  }
  // repeated .ISR.SolutionResponse.Stop stops = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->stops_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stops(static_cast<int>(i)));
    }
  }

  // repeated .ISR.SolutionResponse.InterStop interStops = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->interstops_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->interstops(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SolutionResponse_Route::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ISR.SolutionResponse.Route)
  GOOGLE_DCHECK_NE(&from, this);
  const SolutionResponse_Route* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SolutionResponse_Route>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ISR.SolutionResponse.Route)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ISR.SolutionResponse.Route)
    MergeFrom(*source);
  }
}

void SolutionResponse_Route::MergeFrom(const SolutionResponse_Route& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ISR.SolutionResponse.Route)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stops_.MergeFrom(from.stops_);
  interstops_.MergeFrom(from.interstops_);
  if (from.has_vehicleid()) {
    set_has_vehicleid();
    vehicleid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vehicleid_);
  }
}

void SolutionResponse_Route::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ISR.SolutionResponse.Route)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SolutionResponse_Route::CopyFrom(const SolutionResponse_Route& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ISR.SolutionResponse.Route)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SolutionResponse_Route::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->stops())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->interstops())) return false;
  return true;
}

void SolutionResponse_Route::Swap(SolutionResponse_Route* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SolutionResponse_Route::InternalSwap(SolutionResponse_Route* other) {
  using std::swap;
  CastToBase(&stops_)->InternalSwap(CastToBase(&other->stops_));
  CastToBase(&interstops_)->InternalSwap(CastToBase(&other->interstops_));
  vehicleid_.Swap(&other->vehicleid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SolutionResponse_Route::GetMetadata() const {
  protobuf_isr_2dz4foi53qznrv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_isr_2dz4foi53qznrv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SolutionResponse_Infeasibility_Info::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SolutionResponse_Infeasibility_Info::kMessageFieldNumber;
const int SolutionResponse_Infeasibility_Info::kDimIdFieldNumber;
const int SolutionResponse_Infeasibility_Info::kLimitFieldNumber;
const int SolutionResponse_Infeasibility_Info::kValueFieldNumber;
const int SolutionResponse_Infeasibility_Info::kCountFieldNumber;
const int SolutionResponse_Infeasibility_Info::kConstrainingCollectionIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SolutionResponse_Infeasibility_Info::SolutionResponse_Infeasibility_Info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_SolutionResponse_Infeasibility_Info.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ISR.SolutionResponse.Infeasibility.Info)
}
SolutionResponse_Infeasibility_Info::SolutionResponse_Infeasibility_Info(const SolutionResponse_Infeasibility_Info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      constrainingcollectionids_(from.constrainingcollectionids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  dimid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_dimid()) {
    dimid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dimid_);
  }
  ::memcpy(&limit_, &from.limit_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&limit_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:ISR.SolutionResponse.Infeasibility.Info)
}

void SolutionResponse_Infeasibility_Info::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dimid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&limit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&limit_)) + sizeof(count_));
}

SolutionResponse_Infeasibility_Info::~SolutionResponse_Infeasibility_Info() {
  // @@protoc_insertion_point(destructor:ISR.SolutionResponse.Infeasibility.Info)
  SharedDtor();
}

void SolutionResponse_Infeasibility_Info::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dimid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SolutionResponse_Infeasibility_Info::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SolutionResponse_Infeasibility_Info::descriptor() {
  ::protobuf_isr_2dz4foi53qznrv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_isr_2dz4foi53qznrv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SolutionResponse_Infeasibility_Info& SolutionResponse_Infeasibility_Info::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_SolutionResponse_Infeasibility_Info.base);
  return *internal_default_instance();
}


void SolutionResponse_Infeasibility_Info::Clear() {
// @@protoc_insertion_point(message_clear_start:ISR.SolutionResponse.Infeasibility.Info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  constrainingcollectionids_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      message_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      dimid_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 28u) {
    ::memset(&limit_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&count_) -
        reinterpret_cast<char*>(&limit_)) + sizeof(count_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SolutionResponse_Infeasibility_Info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ISR.SolutionResponse.Infeasibility.Info)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ISR.SolutionResponse.Infeasibility.Info.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string dimId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dimid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dimid().data(), static_cast<int>(this->dimid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ISR.SolutionResponse.Infeasibility.Info.dimId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float limit = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_limit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 count = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string constrainingCollectionIds = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_constrainingcollectionids()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->constrainingcollectionids(this->constrainingcollectionids_size() - 1).data(),
            static_cast<int>(this->constrainingcollectionids(this->constrainingcollectionids_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ISR.SolutionResponse.Infeasibility.Info.constrainingCollectionIds");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ISR.SolutionResponse.Infeasibility.Info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ISR.SolutionResponse.Infeasibility.Info)
  return false;
#undef DO_
}

void SolutionResponse_Infeasibility_Info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ISR.SolutionResponse.Infeasibility.Info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ISR.SolutionResponse.Infeasibility.Info.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  // optional string dimId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dimid().data(), static_cast<int>(this->dimid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ISR.SolutionResponse.Infeasibility.Info.dimId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->dimid(), output);
  }

  // optional float limit = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->limit(), output);
  }

  // optional float value = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->value(), output);
  }

  // optional int64 count = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->count(), output);
  }

  // repeated string constrainingCollectionIds = 6;
  for (int i = 0, n = this->constrainingcollectionids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->constrainingcollectionids(i).data(), static_cast<int>(this->constrainingcollectionids(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ISR.SolutionResponse.Infeasibility.Info.constrainingCollectionIds");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->constrainingcollectionids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ISR.SolutionResponse.Infeasibility.Info)
}

::google::protobuf::uint8* SolutionResponse_Infeasibility_Info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ISR.SolutionResponse.Infeasibility.Info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ISR.SolutionResponse.Infeasibility.Info.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  // optional string dimId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dimid().data(), static_cast<int>(this->dimid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ISR.SolutionResponse.Infeasibility.Info.dimId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->dimid(), target);
  }

  // optional float limit = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->limit(), target);
  }

  // optional float value = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->value(), target);
  }

  // optional int64 count = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->count(), target);
  }

  // repeated string constrainingCollectionIds = 6;
  for (int i = 0, n = this->constrainingcollectionids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->constrainingcollectionids(i).data(), static_cast<int>(this->constrainingcollectionids(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ISR.SolutionResponse.Infeasibility.Info.constrainingCollectionIds");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->constrainingcollectionids(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ISR.SolutionResponse.Infeasibility.Info)
  return target;
}

size_t SolutionResponse_Infeasibility_Info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ISR.SolutionResponse.Infeasibility.Info)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string message = 1;
  if (has_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }
  // repeated string constrainingCollectionIds = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->constrainingcollectionids_size());
  for (int i = 0, n = this->constrainingcollectionids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->constrainingcollectionids(i));
  }

  if (_has_bits_[0 / 32] & 30u) {
    // optional string dimId = 2;
    if (has_dimid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->dimid());
    }

    // optional float limit = 3;
    if (has_limit()) {
      total_size += 1 + 4;
    }

    // optional float value = 4;
    if (has_value()) {
      total_size += 1 + 4;
    }

    // optional int64 count = 5;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->count());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SolutionResponse_Infeasibility_Info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ISR.SolutionResponse.Infeasibility.Info)
  GOOGLE_DCHECK_NE(&from, this);
  const SolutionResponse_Infeasibility_Info* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SolutionResponse_Infeasibility_Info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ISR.SolutionResponse.Infeasibility.Info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ISR.SolutionResponse.Infeasibility.Info)
    MergeFrom(*source);
  }
}

void SolutionResponse_Infeasibility_Info::MergeFrom(const SolutionResponse_Infeasibility_Info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ISR.SolutionResponse.Infeasibility.Info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  constrainingcollectionids_.MergeFrom(from.constrainingcollectionids_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_message();
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_dimid();
      dimid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dimid_);
    }
    if (cached_has_bits & 0x00000004u) {
      limit_ = from.limit_;
    }
    if (cached_has_bits & 0x00000008u) {
      value_ = from.value_;
    }
    if (cached_has_bits & 0x00000010u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SolutionResponse_Infeasibility_Info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ISR.SolutionResponse.Infeasibility.Info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SolutionResponse_Infeasibility_Info::CopyFrom(const SolutionResponse_Infeasibility_Info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ISR.SolutionResponse.Infeasibility.Info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SolutionResponse_Infeasibility_Info::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void SolutionResponse_Infeasibility_Info::Swap(SolutionResponse_Infeasibility_Info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SolutionResponse_Infeasibility_Info::InternalSwap(SolutionResponse_Infeasibility_Info* other) {
  using std::swap;
  constrainingcollectionids_.InternalSwap(CastToBase(&other->constrainingcollectionids_));
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  dimid_.Swap(&other->dimid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(limit_, other->limit_);
  swap(value_, other->value_);
  swap(count_, other->count_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SolutionResponse_Infeasibility_Info::GetMetadata() const {
  protobuf_isr_2dz4foi53qznrv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_isr_2dz4foi53qznrv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SolutionResponse_Infeasibility::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SolutionResponse_Infeasibility::kCollectionIdFieldNumber;
const int SolutionResponse_Infeasibility::kInfeasibilityInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SolutionResponse_Infeasibility::SolutionResponse_Infeasibility()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_SolutionResponse_Infeasibility.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ISR.SolutionResponse.Infeasibility)
}
SolutionResponse_Infeasibility::SolutionResponse_Infeasibility(const SolutionResponse_Infeasibility& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      infeasibilityinfo_(from.infeasibilityinfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  collectionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_collectionid()) {
    collectionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collectionid_);
  }
  // @@protoc_insertion_point(copy_constructor:ISR.SolutionResponse.Infeasibility)
}

void SolutionResponse_Infeasibility::SharedCtor() {
  collectionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SolutionResponse_Infeasibility::~SolutionResponse_Infeasibility() {
  // @@protoc_insertion_point(destructor:ISR.SolutionResponse.Infeasibility)
  SharedDtor();
}

void SolutionResponse_Infeasibility::SharedDtor() {
  collectionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SolutionResponse_Infeasibility::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SolutionResponse_Infeasibility::descriptor() {
  ::protobuf_isr_2dz4foi53qznrv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_isr_2dz4foi53qznrv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SolutionResponse_Infeasibility& SolutionResponse_Infeasibility::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_SolutionResponse_Infeasibility.base);
  return *internal_default_instance();
}


void SolutionResponse_Infeasibility::Clear() {
// @@protoc_insertion_point(message_clear_start:ISR.SolutionResponse.Infeasibility)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  infeasibilityinfo_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    collectionid_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SolutionResponse_Infeasibility::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ISR.SolutionResponse.Infeasibility)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string collectionId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_collectionid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->collectionid().data(), static_cast<int>(this->collectionid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ISR.SolutionResponse.Infeasibility.collectionId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ISR.SolutionResponse.Infeasibility.Info infeasibilityInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_infeasibilityinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ISR.SolutionResponse.Infeasibility)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ISR.SolutionResponse.Infeasibility)
  return false;
#undef DO_
}

void SolutionResponse_Infeasibility::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ISR.SolutionResponse.Infeasibility)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string collectionId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->collectionid().data(), static_cast<int>(this->collectionid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ISR.SolutionResponse.Infeasibility.collectionId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->collectionid(), output);
  }

  // repeated .ISR.SolutionResponse.Infeasibility.Info infeasibilityInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->infeasibilityinfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->infeasibilityinfo(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ISR.SolutionResponse.Infeasibility)
}

::google::protobuf::uint8* SolutionResponse_Infeasibility::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ISR.SolutionResponse.Infeasibility)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string collectionId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->collectionid().data(), static_cast<int>(this->collectionid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ISR.SolutionResponse.Infeasibility.collectionId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->collectionid(), target);
  }

  // repeated .ISR.SolutionResponse.Infeasibility.Info infeasibilityInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->infeasibilityinfo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->infeasibilityinfo(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ISR.SolutionResponse.Infeasibility)
  return target;
}

size_t SolutionResponse_Infeasibility::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ISR.SolutionResponse.Infeasibility)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string collectionId = 1;
  if (has_collectionid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collectionid());
  }
  // repeated .ISR.SolutionResponse.Infeasibility.Info infeasibilityInfo = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->infeasibilityinfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->infeasibilityinfo(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SolutionResponse_Infeasibility::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ISR.SolutionResponse.Infeasibility)
  GOOGLE_DCHECK_NE(&from, this);
  const SolutionResponse_Infeasibility* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SolutionResponse_Infeasibility>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ISR.SolutionResponse.Infeasibility)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ISR.SolutionResponse.Infeasibility)
    MergeFrom(*source);
  }
}

void SolutionResponse_Infeasibility::MergeFrom(const SolutionResponse_Infeasibility& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ISR.SolutionResponse.Infeasibility)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  infeasibilityinfo_.MergeFrom(from.infeasibilityinfo_);
  if (from.has_collectionid()) {
    set_has_collectionid();
    collectionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collectionid_);
  }
}

void SolutionResponse_Infeasibility::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ISR.SolutionResponse.Infeasibility)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SolutionResponse_Infeasibility::CopyFrom(const SolutionResponse_Infeasibility& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ISR.SolutionResponse.Infeasibility)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SolutionResponse_Infeasibility::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->infeasibilityinfo())) return false;
  return true;
}

void SolutionResponse_Infeasibility::Swap(SolutionResponse_Infeasibility* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SolutionResponse_Infeasibility::InternalSwap(SolutionResponse_Infeasibility* other) {
  using std::swap;
  CastToBase(&infeasibilityinfo_)->InternalSwap(CastToBase(&other->infeasibilityinfo_));
  collectionid_.Swap(&other->collectionid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SolutionResponse_Infeasibility::GetMetadata() const {
  protobuf_isr_2dz4foi53qznrv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_isr_2dz4foi53qznrv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SolutionResponse_Matching::InitAsDefaultInstance() {
  ::ISR::_SolutionResponse_Matching_default_instance_._instance.get_mutable()->collectionpoint_ = const_cast< ::ISR::Geocode*>(
      ::ISR::Geocode::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SolutionResponse_Matching::kCollectionIdFieldNumber;
const int SolutionResponse_Matching::kCollectionPointFieldNumber;
const int SolutionResponse_Matching::kSegmentIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SolutionResponse_Matching::SolutionResponse_Matching()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_SolutionResponse_Matching.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ISR.SolutionResponse.Matching)
}
SolutionResponse_Matching::SolutionResponse_Matching(const SolutionResponse_Matching& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  collectionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_collectionid()) {
    collectionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collectionid_);
  }
  if (from.has_collectionpoint()) {
    collectionpoint_ = new ::ISR::Geocode(*from.collectionpoint_);
  } else {
    collectionpoint_ = NULL;
  }
  segmentid_ = from.segmentid_;
  // @@protoc_insertion_point(copy_constructor:ISR.SolutionResponse.Matching)
}

void SolutionResponse_Matching::SharedCtor() {
  collectionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&collectionpoint_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&segmentid_) -
      reinterpret_cast<char*>(&collectionpoint_)) + sizeof(segmentid_));
}

SolutionResponse_Matching::~SolutionResponse_Matching() {
  // @@protoc_insertion_point(destructor:ISR.SolutionResponse.Matching)
  SharedDtor();
}

void SolutionResponse_Matching::SharedDtor() {
  collectionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete collectionpoint_;
}

void SolutionResponse_Matching::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SolutionResponse_Matching::descriptor() {
  ::protobuf_isr_2dz4foi53qznrv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_isr_2dz4foi53qznrv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SolutionResponse_Matching& SolutionResponse_Matching::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_SolutionResponse_Matching.base);
  return *internal_default_instance();
}


void SolutionResponse_Matching::Clear() {
// @@protoc_insertion_point(message_clear_start:ISR.SolutionResponse.Matching)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      collectionid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(collectionpoint_ != NULL);
      collectionpoint_->Clear();
    }
  }
  segmentid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SolutionResponse_Matching::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ISR.SolutionResponse.Matching)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string collectionId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_collectionid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->collectionid().data(), static_cast<int>(this->collectionid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ISR.SolutionResponse.Matching.collectionId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .ISR.Geocode collectionPoint = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_collectionpoint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 segmentId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_segmentid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &segmentid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ISR.SolutionResponse.Matching)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ISR.SolutionResponse.Matching)
  return false;
#undef DO_
}

void SolutionResponse_Matching::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ISR.SolutionResponse.Matching)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string collectionId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->collectionid().data(), static_cast<int>(this->collectionid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ISR.SolutionResponse.Matching.collectionId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->collectionid(), output);
  }

  // required .ISR.Geocode collectionPoint = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_collectionpoint(), output);
  }

  // required int32 segmentId = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->segmentid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ISR.SolutionResponse.Matching)
}

::google::protobuf::uint8* SolutionResponse_Matching::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ISR.SolutionResponse.Matching)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string collectionId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->collectionid().data(), static_cast<int>(this->collectionid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ISR.SolutionResponse.Matching.collectionId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->collectionid(), target);
  }

  // required .ISR.Geocode collectionPoint = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_collectionpoint(), deterministic, target);
  }

  // required int32 segmentId = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->segmentid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ISR.SolutionResponse.Matching)
  return target;
}

size_t SolutionResponse_Matching::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ISR.SolutionResponse.Matching)
  size_t total_size = 0;

  if (has_collectionid()) {
    // required string collectionId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collectionid());
  }

  if (has_collectionpoint()) {
    // required .ISR.Geocode collectionPoint = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *collectionpoint_);
  }

  if (has_segmentid()) {
    // required int32 segmentId = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->segmentid());
  }

  return total_size;
}
size_t SolutionResponse_Matching::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ISR.SolutionResponse.Matching)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string collectionId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collectionid());

    // required .ISR.Geocode collectionPoint = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *collectionpoint_);

    // required int32 segmentId = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->segmentid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SolutionResponse_Matching::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ISR.SolutionResponse.Matching)
  GOOGLE_DCHECK_NE(&from, this);
  const SolutionResponse_Matching* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SolutionResponse_Matching>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ISR.SolutionResponse.Matching)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ISR.SolutionResponse.Matching)
    MergeFrom(*source);
  }
}

void SolutionResponse_Matching::MergeFrom(const SolutionResponse_Matching& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ISR.SolutionResponse.Matching)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_collectionid();
      collectionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collectionid_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_collectionpoint()->::ISR::Geocode::MergeFrom(from.collectionpoint());
    }
    if (cached_has_bits & 0x00000004u) {
      segmentid_ = from.segmentid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SolutionResponse_Matching::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ISR.SolutionResponse.Matching)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SolutionResponse_Matching::CopyFrom(const SolutionResponse_Matching& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ISR.SolutionResponse.Matching)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SolutionResponse_Matching::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (has_collectionpoint()) {
    if (!this->collectionpoint_->IsInitialized()) return false;
  }
  return true;
}

void SolutionResponse_Matching::Swap(SolutionResponse_Matching* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SolutionResponse_Matching::InternalSwap(SolutionResponse_Matching* other) {
  using std::swap;
  collectionid_.Swap(&other->collectionid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(collectionpoint_, other->collectionpoint_);
  swap(segmentid_, other->segmentid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SolutionResponse_Matching::GetMetadata() const {
  protobuf_isr_2dz4foi53qznrv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_isr_2dz4foi53qznrv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SolutionResponse_Segment::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SolutionResponse_Segment::kIdFieldNumber;
const int SolutionResponse_Segment::kNameFieldNumber;
const int SolutionResponse_Segment::kWeightFieldNumber;
const int SolutionResponse_Segment::kDurationFieldNumber;
const int SolutionResponse_Segment::kGeometryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SolutionResponse_Segment::SolutionResponse_Segment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_SolutionResponse_Segment.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ISR.SolutionResponse.Segment)
}
SolutionResponse_Segment::SolutionResponse_Segment(const SolutionResponse_Segment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      geometry_(from.geometry_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&duration_) -
    reinterpret_cast<char*>(&id_)) + sizeof(duration_));
  // @@protoc_insertion_point(copy_constructor:ISR.SolutionResponse.Segment)
}

void SolutionResponse_Segment::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&duration_) -
      reinterpret_cast<char*>(&id_)) + sizeof(duration_));
}

SolutionResponse_Segment::~SolutionResponse_Segment() {
  // @@protoc_insertion_point(destructor:ISR.SolutionResponse.Segment)
  SharedDtor();
}

void SolutionResponse_Segment::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SolutionResponse_Segment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SolutionResponse_Segment::descriptor() {
  ::protobuf_isr_2dz4foi53qznrv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_isr_2dz4foi53qznrv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SolutionResponse_Segment& SolutionResponse_Segment::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_SolutionResponse_Segment.base);
  return *internal_default_instance();
}


void SolutionResponse_Segment::Clear() {
// @@protoc_insertion_point(message_clear_start:ISR.SolutionResponse.Segment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  geometry_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&duration_) -
        reinterpret_cast<char*>(&id_)) + sizeof(duration_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SolutionResponse_Segment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ISR.SolutionResponse.Segment)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ISR.SolutionResponse.Segment.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float weight = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_weight();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &weight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float duration = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ISR.Geocode geometry = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_geometry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ISR.SolutionResponse.Segment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ISR.SolutionResponse.Segment)
  return false;
#undef DO_
}

void SolutionResponse_Segment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ISR.SolutionResponse.Segment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ISR.SolutionResponse.Segment.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // required float weight = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->weight(), output);
  }

  // required float duration = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->duration(), output);
  }

  // repeated .ISR.Geocode geometry = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->geometry_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->geometry(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ISR.SolutionResponse.Segment)
}

::google::protobuf::uint8* SolutionResponse_Segment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ISR.SolutionResponse.Segment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ISR.SolutionResponse.Segment.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // required float weight = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->weight(), target);
  }

  // required float duration = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->duration(), target);
  }

  // repeated .ISR.Geocode geometry = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->geometry_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->geometry(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ISR.SolutionResponse.Segment)
  return target;
}

size_t SolutionResponse_Segment::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ISR.SolutionResponse.Segment)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_weight()) {
    // required float weight = 3;
    total_size += 1 + 4;
  }

  if (has_duration()) {
    // required float duration = 4;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t SolutionResponse_Segment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ISR.SolutionResponse.Segment)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required float weight = 3;
    total_size += 1 + 4;

    // required float duration = 4;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .ISR.Geocode geometry = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->geometry_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->geometry(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SolutionResponse_Segment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ISR.SolutionResponse.Segment)
  GOOGLE_DCHECK_NE(&from, this);
  const SolutionResponse_Segment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SolutionResponse_Segment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ISR.SolutionResponse.Segment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ISR.SolutionResponse.Segment)
    MergeFrom(*source);
  }
}

void SolutionResponse_Segment::MergeFrom(const SolutionResponse_Segment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ISR.SolutionResponse.Segment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  geometry_.MergeFrom(from.geometry_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000004u) {
      weight_ = from.weight_;
    }
    if (cached_has_bits & 0x00000008u) {
      duration_ = from.duration_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SolutionResponse_Segment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ISR.SolutionResponse.Segment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SolutionResponse_Segment::CopyFrom(const SolutionResponse_Segment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ISR.SolutionResponse.Segment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SolutionResponse_Segment::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->geometry())) return false;
  return true;
}

void SolutionResponse_Segment::Swap(SolutionResponse_Segment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SolutionResponse_Segment::InternalSwap(SolutionResponse_Segment* other) {
  using std::swap;
  CastToBase(&geometry_)->InternalSwap(CastToBase(&other->geometry_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(weight_, other->weight_);
  swap(duration_, other->duration_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SolutionResponse_Segment::GetMetadata() const {
  protobuf_isr_2dz4foi53qznrv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_isr_2dz4foi53qznrv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SolutionResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SolutionResponse::kObjectiveFieldNumber;
const int SolutionResponse::kRoutesFieldNumber;
const int SolutionResponse::kInfeasibilitiesFieldNumber;
const int SolutionResponse::kMatchingsFieldNumber;
const int SolutionResponse::kSegmentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SolutionResponse::SolutionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_SolutionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ISR.SolutionResponse)
}
SolutionResponse::SolutionResponse(const SolutionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      routes_(from.routes_),
      infeasibilities_(from.infeasibilities_),
      matchings_(from.matchings_),
      segments_(from.segments_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  objective_ = from.objective_;
  // @@protoc_insertion_point(copy_constructor:ISR.SolutionResponse)
}

void SolutionResponse::SharedCtor() {
  objective_ = 0;
}

SolutionResponse::~SolutionResponse() {
  // @@protoc_insertion_point(destructor:ISR.SolutionResponse)
  SharedDtor();
}

void SolutionResponse::SharedDtor() {
}

void SolutionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SolutionResponse::descriptor() {
  ::protobuf_isr_2dz4foi53qznrv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_isr_2dz4foi53qznrv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SolutionResponse& SolutionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_isr_2dz4foi53qznrv_2eproto::scc_info_SolutionResponse.base);
  return *internal_default_instance();
}


void SolutionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ISR.SolutionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  routes_.Clear();
  infeasibilities_.Clear();
  matchings_.Clear();
  segments_.Clear();
  objective_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SolutionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ISR.SolutionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float objective = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_objective();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &objective_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ISR.SolutionResponse.Route routes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_routes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ISR.SolutionResponse.Infeasibility infeasibilities = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_infeasibilities()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ISR.SolutionResponse.Matching matchings = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_matchings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ISR.SolutionResponse.Segment segments = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_segments()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ISR.SolutionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ISR.SolutionResponse)
  return false;
#undef DO_
}

void SolutionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ISR.SolutionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float objective = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->objective(), output);
  }

  // repeated .ISR.SolutionResponse.Route routes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->routes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->routes(static_cast<int>(i)),
      output);
  }

  // repeated .ISR.SolutionResponse.Infeasibility infeasibilities = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->infeasibilities_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->infeasibilities(static_cast<int>(i)),
      output);
  }

  // repeated .ISR.SolutionResponse.Matching matchings = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->matchings_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->matchings(static_cast<int>(i)),
      output);
  }

  // repeated .ISR.SolutionResponse.Segment segments = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->segments_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->segments(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ISR.SolutionResponse)
}

::google::protobuf::uint8* SolutionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ISR.SolutionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float objective = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->objective(), target);
  }

  // repeated .ISR.SolutionResponse.Route routes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->routes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->routes(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ISR.SolutionResponse.Infeasibility infeasibilities = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->infeasibilities_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->infeasibilities(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ISR.SolutionResponse.Matching matchings = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->matchings_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->matchings(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ISR.SolutionResponse.Segment segments = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->segments_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->segments(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ISR.SolutionResponse)
  return target;
}

size_t SolutionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ISR.SolutionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required float objective = 1;
  if (has_objective()) {
    total_size += 1 + 4;
  }
  // repeated .ISR.SolutionResponse.Route routes = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->routes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->routes(static_cast<int>(i)));
    }
  }

  // repeated .ISR.SolutionResponse.Infeasibility infeasibilities = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->infeasibilities_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->infeasibilities(static_cast<int>(i)));
    }
  }

  // repeated .ISR.SolutionResponse.Matching matchings = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->matchings_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->matchings(static_cast<int>(i)));
    }
  }

  // repeated .ISR.SolutionResponse.Segment segments = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->segments_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->segments(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SolutionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ISR.SolutionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SolutionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SolutionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ISR.SolutionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ISR.SolutionResponse)
    MergeFrom(*source);
  }
}

void SolutionResponse::MergeFrom(const SolutionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ISR.SolutionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  routes_.MergeFrom(from.routes_);
  infeasibilities_.MergeFrom(from.infeasibilities_);
  matchings_.MergeFrom(from.matchings_);
  segments_.MergeFrom(from.segments_);
  if (from.has_objective()) {
    set_objective(from.objective());
  }
}

void SolutionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ISR.SolutionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SolutionResponse::CopyFrom(const SolutionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ISR.SolutionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SolutionResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->routes())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->infeasibilities())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->matchings())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->segments())) return false;
  return true;
}

void SolutionResponse::Swap(SolutionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SolutionResponse::InternalSwap(SolutionResponse* other) {
  using std::swap;
  CastToBase(&routes_)->InternalSwap(CastToBase(&other->routes_));
  CastToBase(&infeasibilities_)->InternalSwap(CastToBase(&other->infeasibilities_));
  CastToBase(&matchings_)->InternalSwap(CastToBase(&other->matchings_));
  CastToBase(&segments_)->InternalSwap(CastToBase(&other->segments_));
  swap(objective_, other->objective_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SolutionResponse::GetMetadata() const {
  protobuf_isr_2dz4foi53qznrv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_isr_2dz4foi53qznrv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ISR
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ISR::Configuration* Arena::CreateMaybeMessage< ::ISR::Configuration >(Arena* arena) {
  return Arena::CreateInternal< ::ISR::Configuration >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ISR::Geocode* Arena::CreateMaybeMessage< ::ISR::Geocode >(Arena* arena) {
  return Arena::CreateInternal< ::ISR::Geocode >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ISR::OffloadSite* Arena::CreateMaybeMessage< ::ISR::OffloadSite >(Arena* arena) {
  return Arena::CreateInternal< ::ISR::OffloadSite >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ISR::Collection* Arena::CreateMaybeMessage< ::ISR::Collection >(Arena* arena) {
  return Arena::CreateInternal< ::ISR::Collection >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ISR::Vehicle* Arena::CreateMaybeMessage< ::ISR::Vehicle >(Arena* arena) {
  return Arena::CreateInternal< ::ISR::Vehicle >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ISR::CollectionSequence* Arena::CreateMaybeMessage< ::ISR::CollectionSequence >(Arena* arena) {
  return Arena::CreateInternal< ::ISR::CollectionSequence >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ISR::Model* Arena::CreateMaybeMessage< ::ISR::Model >(Arena* arena) {
  return Arena::CreateInternal< ::ISR::Model >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ISR::SolveRequest* Arena::CreateMaybeMessage< ::ISR::SolveRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ISR::SolveRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ISR::SolutionResponse_StopAttribute* Arena::CreateMaybeMessage< ::ISR::SolutionResponse_StopAttribute >(Arena* arena) {
  return Arena::CreateInternal< ::ISR::SolutionResponse_StopAttribute >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ISR::SolutionResponse_InterStopAttribute* Arena::CreateMaybeMessage< ::ISR::SolutionResponse_InterStopAttribute >(Arena* arena) {
  return Arena::CreateInternal< ::ISR::SolutionResponse_InterStopAttribute >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ISR::SolutionResponse_Stop* Arena::CreateMaybeMessage< ::ISR::SolutionResponse_Stop >(Arena* arena) {
  return Arena::CreateInternal< ::ISR::SolutionResponse_Stop >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ISR::SolutionResponse_InterStop* Arena::CreateMaybeMessage< ::ISR::SolutionResponse_InterStop >(Arena* arena) {
  return Arena::CreateInternal< ::ISR::SolutionResponse_InterStop >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ISR::SolutionResponse_Route* Arena::CreateMaybeMessage< ::ISR::SolutionResponse_Route >(Arena* arena) {
  return Arena::CreateInternal< ::ISR::SolutionResponse_Route >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ISR::SolutionResponse_Infeasibility_Info* Arena::CreateMaybeMessage< ::ISR::SolutionResponse_Infeasibility_Info >(Arena* arena) {
  return Arena::CreateInternal< ::ISR::SolutionResponse_Infeasibility_Info >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ISR::SolutionResponse_Infeasibility* Arena::CreateMaybeMessage< ::ISR::SolutionResponse_Infeasibility >(Arena* arena) {
  return Arena::CreateInternal< ::ISR::SolutionResponse_Infeasibility >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ISR::SolutionResponse_Matching* Arena::CreateMaybeMessage< ::ISR::SolutionResponse_Matching >(Arena* arena) {
  return Arena::CreateInternal< ::ISR::SolutionResponse_Matching >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ISR::SolutionResponse_Segment* Arena::CreateMaybeMessage< ::ISR::SolutionResponse_Segment >(Arena* arena) {
  return Arena::CreateInternal< ::ISR::SolutionResponse_Segment >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ISR::SolutionResponse* Arena::CreateMaybeMessage< ::ISR::SolutionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ISR::SolutionResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
