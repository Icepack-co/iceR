// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: matrix-vyv95n7wchpl.proto

#ifndef PROTOBUF_INCLUDED_matrix_2dvyv95n7wchpl_2eproto
#define PROTOBUF_INCLUDED_matrix_2dvyv95n7wchpl_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_matrix_2dvyv95n7wchpl_2eproto 

namespace protobuf_matrix_2dvyv95n7wchpl_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[5];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_matrix_2dvyv95n7wchpl_2eproto
namespace Matrix {
class Geocode;
class GeocodeDefaultTypeInternal;
extern GeocodeDefaultTypeInternal _Geocode_default_instance_;
class Location;
class LocationDefaultTypeInternal;
extern LocationDefaultTypeInternal _Location_default_instance_;
class MatrixRequest;
class MatrixRequestDefaultTypeInternal;
extern MatrixRequestDefaultTypeInternal _MatrixRequest_default_instance_;
class MatrixResponse;
class MatrixResponseDefaultTypeInternal;
extern MatrixResponseDefaultTypeInternal _MatrixResponse_default_instance_;
class MatrixResponse_Element;
class MatrixResponse_ElementDefaultTypeInternal;
extern MatrixResponse_ElementDefaultTypeInternal _MatrixResponse_Element_default_instance_;
}  // namespace Matrix
namespace google {
namespace protobuf {
template<> ::Matrix::Geocode* Arena::CreateMaybeMessage<::Matrix::Geocode>(Arena*);
template<> ::Matrix::Location* Arena::CreateMaybeMessage<::Matrix::Location>(Arena*);
template<> ::Matrix::MatrixRequest* Arena::CreateMaybeMessage<::Matrix::MatrixRequest>(Arena*);
template<> ::Matrix::MatrixResponse* Arena::CreateMaybeMessage<::Matrix::MatrixResponse>(Arena*);
template<> ::Matrix::MatrixResponse_Element* Arena::CreateMaybeMessage<::Matrix::MatrixResponse_Element>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace Matrix {

enum MatrixRequest_eDurationUnit {
  MatrixRequest_eDurationUnit_SECONDS = 0,
  MatrixRequest_eDurationUnit_MINUTES = 1,
  MatrixRequest_eDurationUnit_HOURS = 2,
  MatrixRequest_eDurationUnit_DAYS = 3
};
bool MatrixRequest_eDurationUnit_IsValid(int value);
const MatrixRequest_eDurationUnit MatrixRequest_eDurationUnit_eDurationUnit_MIN = MatrixRequest_eDurationUnit_SECONDS;
const MatrixRequest_eDurationUnit MatrixRequest_eDurationUnit_eDurationUnit_MAX = MatrixRequest_eDurationUnit_DAYS;
const int MatrixRequest_eDurationUnit_eDurationUnit_ARRAYSIZE = MatrixRequest_eDurationUnit_eDurationUnit_MAX + 1;

const ::google::protobuf::EnumDescriptor* MatrixRequest_eDurationUnit_descriptor();
inline const ::std::string& MatrixRequest_eDurationUnit_Name(MatrixRequest_eDurationUnit value) {
  return ::google::protobuf::internal::NameOfEnum(
    MatrixRequest_eDurationUnit_descriptor(), value);
}
inline bool MatrixRequest_eDurationUnit_Parse(
    const ::std::string& name, MatrixRequest_eDurationUnit* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MatrixRequest_eDurationUnit>(
    MatrixRequest_eDurationUnit_descriptor(), name, value);
}
enum MatrixRequest_eDistanceUnit {
  MatrixRequest_eDistanceUnit_KILOMETRES = 0,
  MatrixRequest_eDistanceUnit_MILES = 1
};
bool MatrixRequest_eDistanceUnit_IsValid(int value);
const MatrixRequest_eDistanceUnit MatrixRequest_eDistanceUnit_eDistanceUnit_MIN = MatrixRequest_eDistanceUnit_KILOMETRES;
const MatrixRequest_eDistanceUnit MatrixRequest_eDistanceUnit_eDistanceUnit_MAX = MatrixRequest_eDistanceUnit_MILES;
const int MatrixRequest_eDistanceUnit_eDistanceUnit_ARRAYSIZE = MatrixRequest_eDistanceUnit_eDistanceUnit_MAX + 1;

const ::google::protobuf::EnumDescriptor* MatrixRequest_eDistanceUnit_descriptor();
inline const ::std::string& MatrixRequest_eDistanceUnit_Name(MatrixRequest_eDistanceUnit value) {
  return ::google::protobuf::internal::NameOfEnum(
    MatrixRequest_eDistanceUnit_descriptor(), value);
}
inline bool MatrixRequest_eDistanceUnit_Parse(
    const ::std::string& name, MatrixRequest_eDistanceUnit* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MatrixRequest_eDistanceUnit>(
    MatrixRequest_eDistanceUnit_descriptor(), name, value);
}
// ===================================================================

class Geocode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Matrix.Geocode) */ {
 public:
  Geocode();
  virtual ~Geocode();

  Geocode(const Geocode& from);

  inline Geocode& operator=(const Geocode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Geocode(Geocode&& from) noexcept
    : Geocode() {
    *this = ::std::move(from);
  }

  inline Geocode& operator=(Geocode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Geocode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Geocode* internal_default_instance() {
    return reinterpret_cast<const Geocode*>(
               &_Geocode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Geocode* other);
  friend void swap(Geocode& a, Geocode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Geocode* New() const final {
    return CreateMaybeMessage<Geocode>(NULL);
  }

  Geocode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Geocode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Geocode& from);
  void MergeFrom(const Geocode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Geocode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float longitude = 1;
  bool has_longitude() const;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 1;
  float longitude() const;
  void set_longitude(float value);

  // required float latitude = 2;
  bool has_latitude() const;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 2;
  float latitude() const;
  void set_latitude(float value);

  // @@protoc_insertion_point(class_scope:Matrix.Geocode)
 private:
  void set_has_longitude();
  void clear_has_longitude();
  void set_has_latitude();
  void clear_has_latitude();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  float longitude_;
  float latitude_;
  friend struct ::protobuf_matrix_2dvyv95n7wchpl_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Location : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Matrix.Location) */ {
 public:
  Location();
  virtual ~Location();

  Location(const Location& from);

  inline Location& operator=(const Location& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Location(Location&& from) noexcept
    : Location() {
    *this = ::std::move(from);
  }

  inline Location& operator=(Location&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Location& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Location* internal_default_instance() {
    return reinterpret_cast<const Location*>(
               &_Location_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Location* other);
  friend void swap(Location& a, Location& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Location* New() const final {
    return CreateMaybeMessage<Location>(NULL);
  }

  Location* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Location>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Location& from);
  void MergeFrom(const Location& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Location* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // required .Matrix.Geocode geocode = 2;
  bool has_geocode() const;
  void clear_geocode();
  static const int kGeocodeFieldNumber = 2;
  private:
  const ::Matrix::Geocode& _internal_geocode() const;
  public:
  const ::Matrix::Geocode& geocode() const;
  ::Matrix::Geocode* release_geocode();
  ::Matrix::Geocode* mutable_geocode();
  void set_allocated_geocode(::Matrix::Geocode* geocode);

  // @@protoc_insertion_point(class_scope:Matrix.Location)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_geocode();
  void clear_has_geocode();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::Matrix::Geocode* geocode_;
  friend struct ::protobuf_matrix_2dvyv95n7wchpl_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MatrixRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Matrix.MatrixRequest) */ {
 public:
  MatrixRequest();
  virtual ~MatrixRequest();

  MatrixRequest(const MatrixRequest& from);

  inline MatrixRequest& operator=(const MatrixRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MatrixRequest(MatrixRequest&& from) noexcept
    : MatrixRequest() {
    *this = ::std::move(from);
  }

  inline MatrixRequest& operator=(MatrixRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MatrixRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MatrixRequest* internal_default_instance() {
    return reinterpret_cast<const MatrixRequest*>(
               &_MatrixRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(MatrixRequest* other);
  friend void swap(MatrixRequest& a, MatrixRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MatrixRequest* New() const final {
    return CreateMaybeMessage<MatrixRequest>(NULL);
  }

  MatrixRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MatrixRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MatrixRequest& from);
  void MergeFrom(const MatrixRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MatrixRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MatrixRequest_eDurationUnit eDurationUnit;
  static const eDurationUnit SECONDS =
    MatrixRequest_eDurationUnit_SECONDS;
  static const eDurationUnit MINUTES =
    MatrixRequest_eDurationUnit_MINUTES;
  static const eDurationUnit HOURS =
    MatrixRequest_eDurationUnit_HOURS;
  static const eDurationUnit DAYS =
    MatrixRequest_eDurationUnit_DAYS;
  static inline bool eDurationUnit_IsValid(int value) {
    return MatrixRequest_eDurationUnit_IsValid(value);
  }
  static const eDurationUnit eDurationUnit_MIN =
    MatrixRequest_eDurationUnit_eDurationUnit_MIN;
  static const eDurationUnit eDurationUnit_MAX =
    MatrixRequest_eDurationUnit_eDurationUnit_MAX;
  static const int eDurationUnit_ARRAYSIZE =
    MatrixRequest_eDurationUnit_eDurationUnit_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  eDurationUnit_descriptor() {
    return MatrixRequest_eDurationUnit_descriptor();
  }
  static inline const ::std::string& eDurationUnit_Name(eDurationUnit value) {
    return MatrixRequest_eDurationUnit_Name(value);
  }
  static inline bool eDurationUnit_Parse(const ::std::string& name,
      eDurationUnit* value) {
    return MatrixRequest_eDurationUnit_Parse(name, value);
  }

  typedef MatrixRequest_eDistanceUnit eDistanceUnit;
  static const eDistanceUnit KILOMETRES =
    MatrixRequest_eDistanceUnit_KILOMETRES;
  static const eDistanceUnit MILES =
    MatrixRequest_eDistanceUnit_MILES;
  static inline bool eDistanceUnit_IsValid(int value) {
    return MatrixRequest_eDistanceUnit_IsValid(value);
  }
  static const eDistanceUnit eDistanceUnit_MIN =
    MatrixRequest_eDistanceUnit_eDistanceUnit_MIN;
  static const eDistanceUnit eDistanceUnit_MAX =
    MatrixRequest_eDistanceUnit_eDistanceUnit_MAX;
  static const int eDistanceUnit_ARRAYSIZE =
    MatrixRequest_eDistanceUnit_eDistanceUnit_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  eDistanceUnit_descriptor() {
    return MatrixRequest_eDistanceUnit_descriptor();
  }
  static inline const ::std::string& eDistanceUnit_Name(eDistanceUnit value) {
    return MatrixRequest_eDistanceUnit_Name(value);
  }
  static inline bool eDistanceUnit_Parse(const ::std::string& name,
      eDistanceUnit* value) {
    return MatrixRequest_eDistanceUnit_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .Matrix.Location locations = 1;
  int locations_size() const;
  void clear_locations();
  static const int kLocationsFieldNumber = 1;
  ::Matrix::Location* mutable_locations(int index);
  ::google::protobuf::RepeatedPtrField< ::Matrix::Location >*
      mutable_locations();
  const ::Matrix::Location& locations(int index) const;
  ::Matrix::Location* add_locations();
  const ::google::protobuf::RepeatedPtrField< ::Matrix::Location >&
      locations() const;

  // repeated string sources = 2;
  int sources_size() const;
  void clear_sources();
  static const int kSourcesFieldNumber = 2;
  const ::std::string& sources(int index) const;
  ::std::string* mutable_sources(int index);
  void set_sources(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_sources(int index, ::std::string&& value);
  #endif
  void set_sources(int index, const char* value);
  void set_sources(int index, const char* value, size_t size);
  ::std::string* add_sources();
  void add_sources(const ::std::string& value);
  #if LANG_CXX11
  void add_sources(::std::string&& value);
  #endif
  void add_sources(const char* value);
  void add_sources(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& sources() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_sources();

  // repeated string destinations = 3;
  int destinations_size() const;
  void clear_destinations();
  static const int kDestinationsFieldNumber = 3;
  const ::std::string& destinations(int index) const;
  ::std::string* mutable_destinations(int index);
  void set_destinations(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_destinations(int index, ::std::string&& value);
  #endif
  void set_destinations(int index, const char* value);
  void set_destinations(int index, const char* value, size_t size);
  ::std::string* add_destinations();
  void add_destinations(const ::std::string& value);
  #if LANG_CXX11
  void add_destinations(::std::string&& value);
  #endif
  void add_destinations(const char* value);
  void add_destinations(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& destinations() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_destinations();

  // required .Matrix.MatrixRequest.eDistanceUnit distanceUnit = 4 [default = KILOMETRES];
  bool has_distanceunit() const;
  void clear_distanceunit();
  static const int kDistanceUnitFieldNumber = 4;
  ::Matrix::MatrixRequest_eDistanceUnit distanceunit() const;
  void set_distanceunit(::Matrix::MatrixRequest_eDistanceUnit value);

  // required .Matrix.MatrixRequest.eDurationUnit durationUnit = 5 [default = MINUTES];
  bool has_durationunit() const;
  void clear_durationunit();
  static const int kDurationUnitFieldNumber = 5;
  ::Matrix::MatrixRequest_eDurationUnit durationunit() const;
  void set_durationunit(::Matrix::MatrixRequest_eDurationUnit value);

  // @@protoc_insertion_point(class_scope:Matrix.MatrixRequest)
 private:
  void set_has_distanceunit();
  void clear_has_distanceunit();
  void set_has_durationunit();
  void clear_has_durationunit();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Matrix::Location > locations_;
  ::google::protobuf::RepeatedPtrField< ::std::string> sources_;
  ::google::protobuf::RepeatedPtrField< ::std::string> destinations_;
  int distanceunit_;
  int durationunit_;
  friend struct ::protobuf_matrix_2dvyv95n7wchpl_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MatrixResponse_Element : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Matrix.MatrixResponse.Element) */ {
 public:
  MatrixResponse_Element();
  virtual ~MatrixResponse_Element();

  MatrixResponse_Element(const MatrixResponse_Element& from);

  inline MatrixResponse_Element& operator=(const MatrixResponse_Element& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MatrixResponse_Element(MatrixResponse_Element&& from) noexcept
    : MatrixResponse_Element() {
    *this = ::std::move(from);
  }

  inline MatrixResponse_Element& operator=(MatrixResponse_Element&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MatrixResponse_Element& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MatrixResponse_Element* internal_default_instance() {
    return reinterpret_cast<const MatrixResponse_Element*>(
               &_MatrixResponse_Element_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(MatrixResponse_Element* other);
  friend void swap(MatrixResponse_Element& a, MatrixResponse_Element& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MatrixResponse_Element* New() const final {
    return CreateMaybeMessage<MatrixResponse_Element>(NULL);
  }

  MatrixResponse_Element* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MatrixResponse_Element>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MatrixResponse_Element& from);
  void MergeFrom(const MatrixResponse_Element& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MatrixResponse_Element* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string fromId = 1;
  bool has_fromid() const;
  void clear_fromid();
  static const int kFromIdFieldNumber = 1;
  const ::std::string& fromid() const;
  void set_fromid(const ::std::string& value);
  #if LANG_CXX11
  void set_fromid(::std::string&& value);
  #endif
  void set_fromid(const char* value);
  void set_fromid(const char* value, size_t size);
  ::std::string* mutable_fromid();
  ::std::string* release_fromid();
  void set_allocated_fromid(::std::string* fromid);

  // required string toId = 2;
  bool has_toid() const;
  void clear_toid();
  static const int kToIdFieldNumber = 2;
  const ::std::string& toid() const;
  void set_toid(const ::std::string& value);
  #if LANG_CXX11
  void set_toid(::std::string&& value);
  #endif
  void set_toid(const char* value);
  void set_toid(const char* value, size_t size);
  ::std::string* mutable_toid();
  ::std::string* release_toid();
  void set_allocated_toid(::std::string* toid);

  // required float distance = 3;
  bool has_distance() const;
  void clear_distance();
  static const int kDistanceFieldNumber = 3;
  float distance() const;
  void set_distance(float value);

  // required float duration = 4;
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 4;
  float duration() const;
  void set_duration(float value);

  // @@protoc_insertion_point(class_scope:Matrix.MatrixResponse.Element)
 private:
  void set_has_fromid();
  void clear_has_fromid();
  void set_has_toid();
  void clear_has_toid();
  void set_has_distance();
  void clear_has_distance();
  void set_has_duration();
  void clear_has_duration();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr fromid_;
  ::google::protobuf::internal::ArenaStringPtr toid_;
  float distance_;
  float duration_;
  friend struct ::protobuf_matrix_2dvyv95n7wchpl_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MatrixResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Matrix.MatrixResponse) */ {
 public:
  MatrixResponse();
  virtual ~MatrixResponse();

  MatrixResponse(const MatrixResponse& from);

  inline MatrixResponse& operator=(const MatrixResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MatrixResponse(MatrixResponse&& from) noexcept
    : MatrixResponse() {
    *this = ::std::move(from);
  }

  inline MatrixResponse& operator=(MatrixResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MatrixResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MatrixResponse* internal_default_instance() {
    return reinterpret_cast<const MatrixResponse*>(
               &_MatrixResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(MatrixResponse* other);
  friend void swap(MatrixResponse& a, MatrixResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MatrixResponse* New() const final {
    return CreateMaybeMessage<MatrixResponse>(NULL);
  }

  MatrixResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MatrixResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MatrixResponse& from);
  void MergeFrom(const MatrixResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MatrixResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MatrixResponse_Element Element;

  // accessors -------------------------------------------------------

  // repeated .Matrix.MatrixResponse.Element elements = 1;
  int elements_size() const;
  void clear_elements();
  static const int kElementsFieldNumber = 1;
  ::Matrix::MatrixResponse_Element* mutable_elements(int index);
  ::google::protobuf::RepeatedPtrField< ::Matrix::MatrixResponse_Element >*
      mutable_elements();
  const ::Matrix::MatrixResponse_Element& elements(int index) const;
  ::Matrix::MatrixResponse_Element* add_elements();
  const ::google::protobuf::RepeatedPtrField< ::Matrix::MatrixResponse_Element >&
      elements() const;

  // @@protoc_insertion_point(class_scope:Matrix.MatrixResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Matrix::MatrixResponse_Element > elements_;
  friend struct ::protobuf_matrix_2dvyv95n7wchpl_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Geocode

// required float longitude = 1;
inline bool Geocode::has_longitude() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Geocode::set_has_longitude() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Geocode::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Geocode::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline float Geocode::longitude() const {
  // @@protoc_insertion_point(field_get:Matrix.Geocode.longitude)
  return longitude_;
}
inline void Geocode::set_longitude(float value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:Matrix.Geocode.longitude)
}

// required float latitude = 2;
inline bool Geocode::has_latitude() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Geocode::set_has_latitude() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Geocode::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Geocode::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline float Geocode::latitude() const {
  // @@protoc_insertion_point(field_get:Matrix.Geocode.latitude)
  return latitude_;
}
inline void Geocode::set_latitude(float value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:Matrix.Geocode.latitude)
}

// -------------------------------------------------------------------

// Location

// required string id = 1;
inline bool Location::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Location::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Location::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Location::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& Location::id() const {
  // @@protoc_insertion_point(field_get:Matrix.Location.id)
  return id_.GetNoArena();
}
inline void Location::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Matrix.Location.id)
}
#if LANG_CXX11
inline void Location::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Matrix.Location.id)
}
#endif
inline void Location::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Matrix.Location.id)
}
inline void Location::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Matrix.Location.id)
}
inline ::std::string* Location::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:Matrix.Location.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Location::release_id() {
  // @@protoc_insertion_point(field_release:Matrix.Location.id)
  if (!has_id()) {
    return NULL;
  }
  clear_has_id();
  return id_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Location::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:Matrix.Location.id)
}

// required .Matrix.Geocode geocode = 2;
inline bool Location::has_geocode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Location::set_has_geocode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Location::clear_has_geocode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Location::clear_geocode() {
  if (geocode_ != NULL) geocode_->Clear();
  clear_has_geocode();
}
inline const ::Matrix::Geocode& Location::_internal_geocode() const {
  return *geocode_;
}
inline const ::Matrix::Geocode& Location::geocode() const {
  const ::Matrix::Geocode* p = geocode_;
  // @@protoc_insertion_point(field_get:Matrix.Location.geocode)
  return p != NULL ? *p : *reinterpret_cast<const ::Matrix::Geocode*>(
      &::Matrix::_Geocode_default_instance_);
}
inline ::Matrix::Geocode* Location::release_geocode() {
  // @@protoc_insertion_point(field_release:Matrix.Location.geocode)
  clear_has_geocode();
  ::Matrix::Geocode* temp = geocode_;
  geocode_ = NULL;
  return temp;
}
inline ::Matrix::Geocode* Location::mutable_geocode() {
  set_has_geocode();
  if (geocode_ == NULL) {
    auto* p = CreateMaybeMessage<::Matrix::Geocode>(GetArenaNoVirtual());
    geocode_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Matrix.Location.geocode)
  return geocode_;
}
inline void Location::set_allocated_geocode(::Matrix::Geocode* geocode) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete geocode_;
  }
  if (geocode) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      geocode = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, geocode, submessage_arena);
    }
    set_has_geocode();
  } else {
    clear_has_geocode();
  }
  geocode_ = geocode;
  // @@protoc_insertion_point(field_set_allocated:Matrix.Location.geocode)
}

// -------------------------------------------------------------------

// MatrixRequest

// repeated .Matrix.Location locations = 1;
inline int MatrixRequest::locations_size() const {
  return locations_.size();
}
inline void MatrixRequest::clear_locations() {
  locations_.Clear();
}
inline ::Matrix::Location* MatrixRequest::mutable_locations(int index) {
  // @@protoc_insertion_point(field_mutable:Matrix.MatrixRequest.locations)
  return locations_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Matrix::Location >*
MatrixRequest::mutable_locations() {
  // @@protoc_insertion_point(field_mutable_list:Matrix.MatrixRequest.locations)
  return &locations_;
}
inline const ::Matrix::Location& MatrixRequest::locations(int index) const {
  // @@protoc_insertion_point(field_get:Matrix.MatrixRequest.locations)
  return locations_.Get(index);
}
inline ::Matrix::Location* MatrixRequest::add_locations() {
  // @@protoc_insertion_point(field_add:Matrix.MatrixRequest.locations)
  return locations_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Matrix::Location >&
MatrixRequest::locations() const {
  // @@protoc_insertion_point(field_list:Matrix.MatrixRequest.locations)
  return locations_;
}

// repeated string sources = 2;
inline int MatrixRequest::sources_size() const {
  return sources_.size();
}
inline void MatrixRequest::clear_sources() {
  sources_.Clear();
}
inline const ::std::string& MatrixRequest::sources(int index) const {
  // @@protoc_insertion_point(field_get:Matrix.MatrixRequest.sources)
  return sources_.Get(index);
}
inline ::std::string* MatrixRequest::mutable_sources(int index) {
  // @@protoc_insertion_point(field_mutable:Matrix.MatrixRequest.sources)
  return sources_.Mutable(index);
}
inline void MatrixRequest::set_sources(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Matrix.MatrixRequest.sources)
  sources_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void MatrixRequest::set_sources(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:Matrix.MatrixRequest.sources)
  sources_.Mutable(index)->assign(std::move(value));
}
#endif
inline void MatrixRequest::set_sources(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  sources_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Matrix.MatrixRequest.sources)
}
inline void MatrixRequest::set_sources(int index, const char* value, size_t size) {
  sources_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Matrix.MatrixRequest.sources)
}
inline ::std::string* MatrixRequest::add_sources() {
  // @@protoc_insertion_point(field_add_mutable:Matrix.MatrixRequest.sources)
  return sources_.Add();
}
inline void MatrixRequest::add_sources(const ::std::string& value) {
  sources_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Matrix.MatrixRequest.sources)
}
#if LANG_CXX11
inline void MatrixRequest::add_sources(::std::string&& value) {
  sources_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:Matrix.MatrixRequest.sources)
}
#endif
inline void MatrixRequest::add_sources(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  sources_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Matrix.MatrixRequest.sources)
}
inline void MatrixRequest::add_sources(const char* value, size_t size) {
  sources_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Matrix.MatrixRequest.sources)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MatrixRequest::sources() const {
  // @@protoc_insertion_point(field_list:Matrix.MatrixRequest.sources)
  return sources_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MatrixRequest::mutable_sources() {
  // @@protoc_insertion_point(field_mutable_list:Matrix.MatrixRequest.sources)
  return &sources_;
}

// repeated string destinations = 3;
inline int MatrixRequest::destinations_size() const {
  return destinations_.size();
}
inline void MatrixRequest::clear_destinations() {
  destinations_.Clear();
}
inline const ::std::string& MatrixRequest::destinations(int index) const {
  // @@protoc_insertion_point(field_get:Matrix.MatrixRequest.destinations)
  return destinations_.Get(index);
}
inline ::std::string* MatrixRequest::mutable_destinations(int index) {
  // @@protoc_insertion_point(field_mutable:Matrix.MatrixRequest.destinations)
  return destinations_.Mutable(index);
}
inline void MatrixRequest::set_destinations(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Matrix.MatrixRequest.destinations)
  destinations_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void MatrixRequest::set_destinations(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:Matrix.MatrixRequest.destinations)
  destinations_.Mutable(index)->assign(std::move(value));
}
#endif
inline void MatrixRequest::set_destinations(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  destinations_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Matrix.MatrixRequest.destinations)
}
inline void MatrixRequest::set_destinations(int index, const char* value, size_t size) {
  destinations_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Matrix.MatrixRequest.destinations)
}
inline ::std::string* MatrixRequest::add_destinations() {
  // @@protoc_insertion_point(field_add_mutable:Matrix.MatrixRequest.destinations)
  return destinations_.Add();
}
inline void MatrixRequest::add_destinations(const ::std::string& value) {
  destinations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Matrix.MatrixRequest.destinations)
}
#if LANG_CXX11
inline void MatrixRequest::add_destinations(::std::string&& value) {
  destinations_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:Matrix.MatrixRequest.destinations)
}
#endif
inline void MatrixRequest::add_destinations(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  destinations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Matrix.MatrixRequest.destinations)
}
inline void MatrixRequest::add_destinations(const char* value, size_t size) {
  destinations_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Matrix.MatrixRequest.destinations)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MatrixRequest::destinations() const {
  // @@protoc_insertion_point(field_list:Matrix.MatrixRequest.destinations)
  return destinations_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MatrixRequest::mutable_destinations() {
  // @@protoc_insertion_point(field_mutable_list:Matrix.MatrixRequest.destinations)
  return &destinations_;
}

// required .Matrix.MatrixRequest.eDistanceUnit distanceUnit = 4 [default = KILOMETRES];
inline bool MatrixRequest::has_distanceunit() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MatrixRequest::set_has_distanceunit() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MatrixRequest::clear_has_distanceunit() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MatrixRequest::clear_distanceunit() {
  distanceunit_ = 0;
  clear_has_distanceunit();
}
inline ::Matrix::MatrixRequest_eDistanceUnit MatrixRequest::distanceunit() const {
  // @@protoc_insertion_point(field_get:Matrix.MatrixRequest.distanceUnit)
  return static_cast< ::Matrix::MatrixRequest_eDistanceUnit >(distanceunit_);
}
inline void MatrixRequest::set_distanceunit(::Matrix::MatrixRequest_eDistanceUnit value) {
  assert(::Matrix::MatrixRequest_eDistanceUnit_IsValid(value));
  set_has_distanceunit();
  distanceunit_ = value;
  // @@protoc_insertion_point(field_set:Matrix.MatrixRequest.distanceUnit)
}

// required .Matrix.MatrixRequest.eDurationUnit durationUnit = 5 [default = MINUTES];
inline bool MatrixRequest::has_durationunit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MatrixRequest::set_has_durationunit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MatrixRequest::clear_has_durationunit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MatrixRequest::clear_durationunit() {
  durationunit_ = 1;
  clear_has_durationunit();
}
inline ::Matrix::MatrixRequest_eDurationUnit MatrixRequest::durationunit() const {
  // @@protoc_insertion_point(field_get:Matrix.MatrixRequest.durationUnit)
  return static_cast< ::Matrix::MatrixRequest_eDurationUnit >(durationunit_);
}
inline void MatrixRequest::set_durationunit(::Matrix::MatrixRequest_eDurationUnit value) {
  assert(::Matrix::MatrixRequest_eDurationUnit_IsValid(value));
  set_has_durationunit();
  durationunit_ = value;
  // @@protoc_insertion_point(field_set:Matrix.MatrixRequest.durationUnit)
}

// -------------------------------------------------------------------

// MatrixResponse_Element

// required string fromId = 1;
inline bool MatrixResponse_Element::has_fromid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MatrixResponse_Element::set_has_fromid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MatrixResponse_Element::clear_has_fromid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MatrixResponse_Element::clear_fromid() {
  fromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fromid();
}
inline const ::std::string& MatrixResponse_Element::fromid() const {
  // @@protoc_insertion_point(field_get:Matrix.MatrixResponse.Element.fromId)
  return fromid_.GetNoArena();
}
inline void MatrixResponse_Element::set_fromid(const ::std::string& value) {
  set_has_fromid();
  fromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Matrix.MatrixResponse.Element.fromId)
}
#if LANG_CXX11
inline void MatrixResponse_Element::set_fromid(::std::string&& value) {
  set_has_fromid();
  fromid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Matrix.MatrixResponse.Element.fromId)
}
#endif
inline void MatrixResponse_Element::set_fromid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_fromid();
  fromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Matrix.MatrixResponse.Element.fromId)
}
inline void MatrixResponse_Element::set_fromid(const char* value, size_t size) {
  set_has_fromid();
  fromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Matrix.MatrixResponse.Element.fromId)
}
inline ::std::string* MatrixResponse_Element::mutable_fromid() {
  set_has_fromid();
  // @@protoc_insertion_point(field_mutable:Matrix.MatrixResponse.Element.fromId)
  return fromid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatrixResponse_Element::release_fromid() {
  // @@protoc_insertion_point(field_release:Matrix.MatrixResponse.Element.fromId)
  if (!has_fromid()) {
    return NULL;
  }
  clear_has_fromid();
  return fromid_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatrixResponse_Element::set_allocated_fromid(::std::string* fromid) {
  if (fromid != NULL) {
    set_has_fromid();
  } else {
    clear_has_fromid();
  }
  fromid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fromid);
  // @@protoc_insertion_point(field_set_allocated:Matrix.MatrixResponse.Element.fromId)
}

// required string toId = 2;
inline bool MatrixResponse_Element::has_toid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MatrixResponse_Element::set_has_toid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MatrixResponse_Element::clear_has_toid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MatrixResponse_Element::clear_toid() {
  toid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_toid();
}
inline const ::std::string& MatrixResponse_Element::toid() const {
  // @@protoc_insertion_point(field_get:Matrix.MatrixResponse.Element.toId)
  return toid_.GetNoArena();
}
inline void MatrixResponse_Element::set_toid(const ::std::string& value) {
  set_has_toid();
  toid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Matrix.MatrixResponse.Element.toId)
}
#if LANG_CXX11
inline void MatrixResponse_Element::set_toid(::std::string&& value) {
  set_has_toid();
  toid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Matrix.MatrixResponse.Element.toId)
}
#endif
inline void MatrixResponse_Element::set_toid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_toid();
  toid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Matrix.MatrixResponse.Element.toId)
}
inline void MatrixResponse_Element::set_toid(const char* value, size_t size) {
  set_has_toid();
  toid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Matrix.MatrixResponse.Element.toId)
}
inline ::std::string* MatrixResponse_Element::mutable_toid() {
  set_has_toid();
  // @@protoc_insertion_point(field_mutable:Matrix.MatrixResponse.Element.toId)
  return toid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatrixResponse_Element::release_toid() {
  // @@protoc_insertion_point(field_release:Matrix.MatrixResponse.Element.toId)
  if (!has_toid()) {
    return NULL;
  }
  clear_has_toid();
  return toid_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatrixResponse_Element::set_allocated_toid(::std::string* toid) {
  if (toid != NULL) {
    set_has_toid();
  } else {
    clear_has_toid();
  }
  toid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), toid);
  // @@protoc_insertion_point(field_set_allocated:Matrix.MatrixResponse.Element.toId)
}

// required float distance = 3;
inline bool MatrixResponse_Element::has_distance() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MatrixResponse_Element::set_has_distance() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MatrixResponse_Element::clear_has_distance() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MatrixResponse_Element::clear_distance() {
  distance_ = 0;
  clear_has_distance();
}
inline float MatrixResponse_Element::distance() const {
  // @@protoc_insertion_point(field_get:Matrix.MatrixResponse.Element.distance)
  return distance_;
}
inline void MatrixResponse_Element::set_distance(float value) {
  set_has_distance();
  distance_ = value;
  // @@protoc_insertion_point(field_set:Matrix.MatrixResponse.Element.distance)
}

// required float duration = 4;
inline bool MatrixResponse_Element::has_duration() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MatrixResponse_Element::set_has_duration() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MatrixResponse_Element::clear_has_duration() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MatrixResponse_Element::clear_duration() {
  duration_ = 0;
  clear_has_duration();
}
inline float MatrixResponse_Element::duration() const {
  // @@protoc_insertion_point(field_get:Matrix.MatrixResponse.Element.duration)
  return duration_;
}
inline void MatrixResponse_Element::set_duration(float value) {
  set_has_duration();
  duration_ = value;
  // @@protoc_insertion_point(field_set:Matrix.MatrixResponse.Element.duration)
}

// -------------------------------------------------------------------

// MatrixResponse

// repeated .Matrix.MatrixResponse.Element elements = 1;
inline int MatrixResponse::elements_size() const {
  return elements_.size();
}
inline void MatrixResponse::clear_elements() {
  elements_.Clear();
}
inline ::Matrix::MatrixResponse_Element* MatrixResponse::mutable_elements(int index) {
  // @@protoc_insertion_point(field_mutable:Matrix.MatrixResponse.elements)
  return elements_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Matrix::MatrixResponse_Element >*
MatrixResponse::mutable_elements() {
  // @@protoc_insertion_point(field_mutable_list:Matrix.MatrixResponse.elements)
  return &elements_;
}
inline const ::Matrix::MatrixResponse_Element& MatrixResponse::elements(int index) const {
  // @@protoc_insertion_point(field_get:Matrix.MatrixResponse.elements)
  return elements_.Get(index);
}
inline ::Matrix::MatrixResponse_Element* MatrixResponse::add_elements() {
  // @@protoc_insertion_point(field_add:Matrix.MatrixResponse.elements)
  return elements_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Matrix::MatrixResponse_Element >&
MatrixResponse::elements() const {
  // @@protoc_insertion_point(field_list:Matrix.MatrixResponse.elements)
  return elements_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Matrix

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Matrix::MatrixRequest_eDurationUnit> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Matrix::MatrixRequest_eDurationUnit>() {
  return ::Matrix::MatrixRequest_eDurationUnit_descriptor();
}
template <> struct is_proto_enum< ::Matrix::MatrixRequest_eDistanceUnit> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Matrix::MatrixRequest_eDistanceUnit>() {
  return ::Matrix::MatrixRequest_eDistanceUnit_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_matrix_2dvyv95n7wchpl_2eproto
