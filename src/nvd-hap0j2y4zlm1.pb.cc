// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nvd-hap0j2y4zlm1.proto

#include "nvd-hap0j2y4zlm1.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace NVD {
        template <typename>
PROTOBUF_CONSTEXPR Configuration::Configuration(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.weeklength_)*/ 0,
      /*decltype(_impl_.periodlength_)*/ 0,
      /*decltype(_impl_.interterritorybalance_)*/ 1,
      /*decltype(_impl_.timeunit_)*/ 1,
      /*decltype(_impl_.timecoef_)*/ 1,
      /*decltype(_impl_.timecostcoef_)*/ 1,
      /*decltype(_impl_.distanceunit_)*/ 4,
      /*decltype(_impl_.distancecostcoef_)*/ 1,
      /*decltype(_impl_.intraterritorybalance_)*/ 1,
    } {}
struct ConfigurationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConfigurationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConfigurationDefaultTypeInternal() {}
  union {
    Configuration _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConfigurationDefaultTypeInternal _Configuration_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Geocode::Geocode(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.longitude_)*/ 0,
      /*decltype(_impl_.latitude_)*/ 0,
    } {}
struct GeocodeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GeocodeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GeocodeDefaultTypeInternal() {}
  union {
    Geocode _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GeocodeDefaultTypeInternal _Geocode_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Profile_customCycle::Profile_customCycle(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.visitprofile_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct Profile_customCycleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Profile_customCycleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Profile_customCycleDefaultTypeInternal() {}
  union {
    Profile_customCycle _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Profile_customCycleDefaultTypeInternal _Profile_customCycle_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Profile::Profile(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.allowablecycles_)*/ {},
      /*decltype(_impl_.frequencytype_)*/ 0,
      /*decltype(_impl_.numvisits_)*/ 0,
    } {}
struct ProfileDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProfileDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProfileDefaultTypeInternal() {}
  union {
    Profile _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProfileDefaultTypeInternal _Profile_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Visit_TerritoryRelation::Visit_TerritoryRelation(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.territoryids_)*/ {},
      /*decltype(_impl_.type_)*/ 0,
    } {}
struct Visit_TerritoryRelationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Visit_TerritoryRelationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Visit_TerritoryRelationDefaultTypeInternal() {}
  union {
    Visit_TerritoryRelation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Visit_TerritoryRelationDefaultTypeInternal _Visit_TerritoryRelation_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Visit::Visit(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.location_)*/ nullptr,
      /*decltype(_impl_.profile_)*/ nullptr,
      /*decltype(_impl_.territoryrelations_)*/ nullptr,
      /*decltype(_impl_.visittime_)*/ 0,
    } {}
struct VisitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VisitDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VisitDefaultTypeInternal() {}
  union {
    Visit _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VisitDefaultTypeInternal _Visit_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Territory::Territory(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.dailystarttime_)*/ {},
      /*decltype(_impl_.dailyendtime_)*/ {},
      /*decltype(_impl_.id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.location_)*/ nullptr,
    } {}
struct TerritoryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TerritoryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TerritoryDefaultTypeInternal() {}
  union {
    Territory _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TerritoryDefaultTypeInternal _Territory_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR VisitSequence::VisitSequence(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.visitid_)*/ {},
      /*decltype(_impl_.territoryid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.dayindex_)*/ 0,
    } {}
struct VisitSequenceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VisitSequenceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VisitSequenceDefaultTypeInternal() {}
  union {
    VisitSequence _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VisitSequenceDefaultTypeInternal _VisitSequence_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Model::Model(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.visits_)*/ {},
      /*decltype(_impl_.territories_)*/ {},
      /*decltype(_impl_.visitsequence_)*/ {},
      /*decltype(_impl_.configuration_)*/ nullptr,
    } {}
struct ModelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelDefaultTypeInternal() {}
  union {
    Model _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelDefaultTypeInternal _Model_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SolveRequest::SolveRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.routes_)*/ {},
      /*decltype(_impl_.modelid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.model_)*/ nullptr,
      /*decltype(_impl_.solvetype_)*/ 0,
    } {}
struct SolveRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SolveRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SolveRequestDefaultTypeInternal() {}
  union {
    SolveRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SolveRequestDefaultTypeInternal _SolveRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SolutionResponse_StopAttribute::SolutionResponse_StopAttribute(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.dimid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.startvalue_)*/ 0,
      /*decltype(_impl_.endvalue_)*/ 0,
      /*decltype(_impl_.cost_)*/ 0,
      /*decltype(_impl_.slackvalue_)*/ 0,
      /*decltype(_impl_.slackcost_)*/ 0,
      /*decltype(_impl_.tardyvalue_)*/ 0,
      /*decltype(_impl_.tardycost_)*/ 0,
    } {}
struct SolutionResponse_StopAttributeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SolutionResponse_StopAttributeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SolutionResponse_StopAttributeDefaultTypeInternal() {}
  union {
    SolutionResponse_StopAttribute _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SolutionResponse_StopAttributeDefaultTypeInternal _SolutionResponse_StopAttribute_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SolutionResponse_InterStopAttribute::SolutionResponse_InterStopAttribute(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.dimid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.startvalue_)*/ 0,
      /*decltype(_impl_.endvalue_)*/ 0,
      /*decltype(_impl_.cost_)*/ 0,
    } {}
struct SolutionResponse_InterStopAttributeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SolutionResponse_InterStopAttributeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SolutionResponse_InterStopAttributeDefaultTypeInternal() {}
  union {
    SolutionResponse_InterStopAttribute _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SolutionResponse_InterStopAttributeDefaultTypeInternal _SolutionResponse_InterStopAttribute_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SolutionResponse_Stop::SolutionResponse_Stop(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.attributes_)*/ {},
      /*decltype(_impl_.locationid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.visitid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.id_)*/ 0,
      /*decltype(_impl_.sequence_)*/ 0,
    } {}
struct SolutionResponse_StopDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SolutionResponse_StopDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SolutionResponse_StopDefaultTypeInternal() {}
  union {
    SolutionResponse_Stop _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SolutionResponse_StopDefaultTypeInternal _SolutionResponse_Stop_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SolutionResponse_InterStop::SolutionResponse_InterStop(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.attributes_)*/ {},
      /*decltype(_impl_.routesegments_)*/ {},
      /*decltype(_impl_.fromstopid_)*/ 0,
      /*decltype(_impl_.tostopid_)*/ 0,
    } {}
struct SolutionResponse_InterStopDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SolutionResponse_InterStopDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SolutionResponse_InterStopDefaultTypeInternal() {}
  union {
    SolutionResponse_InterStop _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SolutionResponse_InterStopDefaultTypeInternal _SolutionResponse_InterStop_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SolutionResponse_TransitRuleAttribute::SolutionResponse_TransitRuleAttribute(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.ruleid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.dimid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.fromstopid_)*/ 0,
      /*decltype(_impl_.tostopid_)*/ 0,
      /*decltype(_impl_.startvalue_)*/ 0,
      /*decltype(_impl_.endvalue_)*/ 0,
      /*decltype(_impl_.cost_)*/ 0,
    } {}
struct SolutionResponse_TransitRuleAttributeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SolutionResponse_TransitRuleAttributeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SolutionResponse_TransitRuleAttributeDefaultTypeInternal() {}
  union {
    SolutionResponse_TransitRuleAttribute _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SolutionResponse_TransitRuleAttributeDefaultTypeInternal _SolutionResponse_TransitRuleAttribute_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SolutionResponse_Route::SolutionResponse_Route(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.stops_)*/ {},
      /*decltype(_impl_.interstops_)*/ {},
      /*decltype(_impl_.fixedcost_)*/ {},
      /*decltype(_impl_.transitruleattributes_)*/ {},
      /*decltype(_impl_.vehicleid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.day_)*/ 0,
    } {}
struct SolutionResponse_RouteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SolutionResponse_RouteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SolutionResponse_RouteDefaultTypeInternal() {}
  union {
    SolutionResponse_Route _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SolutionResponse_RouteDefaultTypeInternal _SolutionResponse_Route_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SolutionResponse_Infeasibility_Info::SolutionResponse_Infeasibility_Info(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.constrainingtaskids_)*/ {},
      /*decltype(_impl_.message_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.dimid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.limit_)*/ 0,
      /*decltype(_impl_.value_)*/ 0,
      /*decltype(_impl_.count_)*/ ::int64_t{0},
    } {}
struct SolutionResponse_Infeasibility_InfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SolutionResponse_Infeasibility_InfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SolutionResponse_Infeasibility_InfoDefaultTypeInternal() {}
  union {
    SolutionResponse_Infeasibility_Info _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SolutionResponse_Infeasibility_InfoDefaultTypeInternal _SolutionResponse_Infeasibility_Info_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SolutionResponse_Infeasibility::SolutionResponse_Infeasibility(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.infeasibilityinfo_)*/ {},
      /*decltype(_impl_.taskid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct SolutionResponse_InfeasibilityDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SolutionResponse_InfeasibilityDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SolutionResponse_InfeasibilityDefaultTypeInternal() {}
  union {
    SolutionResponse_Infeasibility _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SolutionResponse_InfeasibilityDefaultTypeInternal _SolutionResponse_Infeasibility_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SolutionResponse_CompactSolution::SolutionResponse_CompactSolution(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.visitsequence_)*/ {},
      /*decltype(_impl_.objectives_)*/ {},
      /*decltype(_impl_.objectivenames_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct SolutionResponse_CompactSolutionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SolutionResponse_CompactSolutionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SolutionResponse_CompactSolutionDefaultTypeInternal() {}
  union {
    SolutionResponse_CompactSolution _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SolutionResponse_CompactSolutionDefaultTypeInternal _SolutionResponse_CompactSolution_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SolutionResponse_SolutionInstance::SolutionResponse_SolutionInstance(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.routes_)*/ {},
      /*decltype(_impl_.infeasibilities_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct SolutionResponse_SolutionInstanceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SolutionResponse_SolutionInstanceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SolutionResponse_SolutionInstanceDefaultTypeInternal() {}
  union {
    SolutionResponse_SolutionInstance _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SolutionResponse_SolutionInstanceDefaultTypeInternal _SolutionResponse_SolutionInstance_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SolutionResponse::SolutionResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.frontier_)*/ {},
      /*decltype(_impl_.instance_)*/ nullptr,
    } {}
struct SolutionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SolutionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SolutionResponseDefaultTypeInternal() {}
  union {
    SolutionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SolutionResponseDefaultTypeInternal _SolutionResponse_default_instance_;
}  // namespace NVD
static ::_pb::Metadata file_level_metadata_nvd_2dhap0j2y4zlm1_2eproto[21];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_nvd_2dhap0j2y4zlm1_2eproto[4];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_nvd_2dhap0j2y4zlm1_2eproto = nullptr;
const ::uint32_t TableStruct_nvd_2dhap0j2y4zlm1_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::NVD::Configuration, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::NVD::Configuration, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::NVD::Configuration, _impl_.timeunit_),
    PROTOBUF_FIELD_OFFSET(::NVD::Configuration, _impl_.timecoef_),
    PROTOBUF_FIELD_OFFSET(::NVD::Configuration, _impl_.timecostcoef_),
    PROTOBUF_FIELD_OFFSET(::NVD::Configuration, _impl_.distanceunit_),
    PROTOBUF_FIELD_OFFSET(::NVD::Configuration, _impl_.distancecostcoef_),
    PROTOBUF_FIELD_OFFSET(::NVD::Configuration, _impl_.intraterritorybalance_),
    PROTOBUF_FIELD_OFFSET(::NVD::Configuration, _impl_.interterritorybalance_),
    PROTOBUF_FIELD_OFFSET(::NVD::Configuration, _impl_.weeklength_),
    PROTOBUF_FIELD_OFFSET(::NVD::Configuration, _impl_.periodlength_),
    3,
    4,
    5,
    6,
    7,
    8,
    2,
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::NVD::Geocode, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::NVD::Geocode, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::NVD::Geocode, _impl_.longitude_),
    PROTOBUF_FIELD_OFFSET(::NVD::Geocode, _impl_.latitude_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::NVD::Profile_customCycle, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::NVD::Profile_customCycle, _impl_.visitprofile_),
    PROTOBUF_FIELD_OFFSET(::NVD::Profile, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::NVD::Profile, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::NVD::Profile, _impl_.frequencytype_),
    PROTOBUF_FIELD_OFFSET(::NVD::Profile, _impl_.allowablecycles_),
    PROTOBUF_FIELD_OFFSET(::NVD::Profile, _impl_.numvisits_),
    0,
    ~0u,
    1,
    PROTOBUF_FIELD_OFFSET(::NVD::Visit_TerritoryRelation, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::NVD::Visit_TerritoryRelation, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::NVD::Visit_TerritoryRelation, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::NVD::Visit_TerritoryRelation, _impl_.territoryids_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::NVD::Visit, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::NVD::Visit, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::NVD::Visit, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::NVD::Visit, _impl_.location_),
    PROTOBUF_FIELD_OFFSET(::NVD::Visit, _impl_.visittime_),
    PROTOBUF_FIELD_OFFSET(::NVD::Visit, _impl_.profile_),
    PROTOBUF_FIELD_OFFSET(::NVD::Visit, _impl_.territoryrelations_),
    0,
    1,
    4,
    2,
    3,
    PROTOBUF_FIELD_OFFSET(::NVD::Territory, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::NVD::Territory, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::NVD::Territory, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::NVD::Territory, _impl_.dailystarttime_),
    PROTOBUF_FIELD_OFFSET(::NVD::Territory, _impl_.dailyendtime_),
    PROTOBUF_FIELD_OFFSET(::NVD::Territory, _impl_.location_),
    0,
    ~0u,
    ~0u,
    1,
    PROTOBUF_FIELD_OFFSET(::NVD::VisitSequence, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::NVD::VisitSequence, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::NVD::VisitSequence, _impl_.territoryid_),
    PROTOBUF_FIELD_OFFSET(::NVD::VisitSequence, _impl_.dayindex_),
    PROTOBUF_FIELD_OFFSET(::NVD::VisitSequence, _impl_.visitid_),
    0,
    1,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::NVD::Model, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::NVD::Model, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::NVD::Model, _impl_.configuration_),
    PROTOBUF_FIELD_OFFSET(::NVD::Model, _impl_.visits_),
    PROTOBUF_FIELD_OFFSET(::NVD::Model, _impl_.territories_),
    PROTOBUF_FIELD_OFFSET(::NVD::Model, _impl_.visitsequence_),
    0,
    ~0u,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::NVD::SolveRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolveRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::NVD::SolveRequest, _impl_.model_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolveRequest, _impl_.modelid_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolveRequest, _impl_.routes_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolveRequest, _impl_.solvetype_),
    1,
    0,
    ~0u,
    2,
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_StopAttribute, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_StopAttribute, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_StopAttribute, _impl_.dimid_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_StopAttribute, _impl_.startvalue_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_StopAttribute, _impl_.endvalue_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_StopAttribute, _impl_.cost_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_StopAttribute, _impl_.slackvalue_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_StopAttribute, _impl_.slackcost_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_StopAttribute, _impl_.tardyvalue_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_StopAttribute, _impl_.tardycost_),
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_InterStopAttribute, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_InterStopAttribute, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_InterStopAttribute, _impl_.dimid_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_InterStopAttribute, _impl_.startvalue_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_InterStopAttribute, _impl_.endvalue_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_InterStopAttribute, _impl_.cost_),
    0,
    1,
    2,
    3,
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_Stop, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_Stop, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_Stop, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_Stop, _impl_.sequence_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_Stop, _impl_.locationid_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_Stop, _impl_.visitid_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_Stop, _impl_.attributes_),
    2,
    3,
    0,
    1,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_InterStop, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_InterStop, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_InterStop, _impl_.fromstopid_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_InterStop, _impl_.tostopid_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_InterStop, _impl_.attributes_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_InterStop, _impl_.routesegments_),
    0,
    1,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_TransitRuleAttribute, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_TransitRuleAttribute, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_TransitRuleAttribute, _impl_.ruleid_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_TransitRuleAttribute, _impl_.dimid_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_TransitRuleAttribute, _impl_.fromstopid_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_TransitRuleAttribute, _impl_.tostopid_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_TransitRuleAttribute, _impl_.startvalue_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_TransitRuleAttribute, _impl_.endvalue_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_TransitRuleAttribute, _impl_.cost_),
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_Route, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_Route, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_Route, _impl_.vehicleid_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_Route, _impl_.stops_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_Route, _impl_.interstops_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_Route, _impl_.fixedcost_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_Route, _impl_.transitruleattributes_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_Route, _impl_.day_),
    0,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    1,
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_Infeasibility_Info, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_Infeasibility_Info, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_Infeasibility_Info, _impl_.message_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_Infeasibility_Info, _impl_.dimid_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_Infeasibility_Info, _impl_.limit_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_Infeasibility_Info, _impl_.value_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_Infeasibility_Info, _impl_.count_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_Infeasibility_Info, _impl_.constrainingtaskids_),
    0,
    1,
    2,
    3,
    4,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_Infeasibility, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_Infeasibility, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_Infeasibility, _impl_.taskid_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_Infeasibility, _impl_.infeasibilityinfo_),
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_CompactSolution, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_CompactSolution, _impl_.visitsequence_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_CompactSolution, _impl_.objectives_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_CompactSolution, _impl_.objectivenames_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_SolutionInstance, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_SolutionInstance, _impl_.routes_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse_SolutionInstance, _impl_.infeasibilities_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse, _impl_.frontier_),
    PROTOBUF_FIELD_OFFSET(::NVD::SolutionResponse, _impl_.instance_),
    ~0u,
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 17, -1, sizeof(::NVD::Configuration)},
        {26, 36, -1, sizeof(::NVD::Geocode)},
        {38, -1, -1, sizeof(::NVD::Profile_customCycle)},
        {47, 58, -1, sizeof(::NVD::Profile)},
        {61, 71, -1, sizeof(::NVD::Visit_TerritoryRelation)},
        {73, 86, -1, sizeof(::NVD::Visit)},
        {91, 103, -1, sizeof(::NVD::Territory)},
        {107, 118, -1, sizeof(::NVD::VisitSequence)},
        {121, 133, -1, sizeof(::NVD::Model)},
        {137, 149, -1, sizeof(::NVD::SolveRequest)},
        {153, 169, -1, sizeof(::NVD::SolutionResponse_StopAttribute)},
        {177, 189, -1, sizeof(::NVD::SolutionResponse_InterStopAttribute)},
        {193, 206, -1, sizeof(::NVD::SolutionResponse_Stop)},
        {211, 223, -1, sizeof(::NVD::SolutionResponse_InterStop)},
        {227, 242, -1, sizeof(::NVD::SolutionResponse_TransitRuleAttribute)},
        {249, 263, -1, sizeof(::NVD::SolutionResponse_Route)},
        {269, 283, -1, sizeof(::NVD::SolutionResponse_Infeasibility_Info)},
        {289, 299, -1, sizeof(::NVD::SolutionResponse_Infeasibility)},
        {301, -1, -1, sizeof(::NVD::SolutionResponse_CompactSolution)},
        {312, -1, -1, sizeof(::NVD::SolutionResponse_SolutionInstance)},
        {322, 332, -1, sizeof(::NVD::SolutionResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::NVD::_Configuration_default_instance_._instance,
    &::NVD::_Geocode_default_instance_._instance,
    &::NVD::_Profile_customCycle_default_instance_._instance,
    &::NVD::_Profile_default_instance_._instance,
    &::NVD::_Visit_TerritoryRelation_default_instance_._instance,
    &::NVD::_Visit_default_instance_._instance,
    &::NVD::_Territory_default_instance_._instance,
    &::NVD::_VisitSequence_default_instance_._instance,
    &::NVD::_Model_default_instance_._instance,
    &::NVD::_SolveRequest_default_instance_._instance,
    &::NVD::_SolutionResponse_StopAttribute_default_instance_._instance,
    &::NVD::_SolutionResponse_InterStopAttribute_default_instance_._instance,
    &::NVD::_SolutionResponse_Stop_default_instance_._instance,
    &::NVD::_SolutionResponse_InterStop_default_instance_._instance,
    &::NVD::_SolutionResponse_TransitRuleAttribute_default_instance_._instance,
    &::NVD::_SolutionResponse_Route_default_instance_._instance,
    &::NVD::_SolutionResponse_Infeasibility_Info_default_instance_._instance,
    &::NVD::_SolutionResponse_Infeasibility_default_instance_._instance,
    &::NVD::_SolutionResponse_CompactSolution_default_instance_._instance,
    &::NVD::_SolutionResponse_SolutionInstance_default_instance_._instance,
    &::NVD::_SolutionResponse_default_instance_._instance,
};
const char descriptor_table_protodef_nvd_2dhap0j2y4zlm1_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\026nvd-hap0j2y4zlm1.proto\022\003NVD\"\255\003\n\rConfig"
    "uration\022>\n\010timeUnit\030\001 \002(\0162#.NVD.Configur"
    "ation.eMeasurementUnit:\007MINUTES\022\023\n\010timeC"
    "oef\030\002 \002(\002:\0011\022\027\n\014timeCostCoef\030\003 \002(\002:\0011\022E\n"
    "\014distanceUnit\030\004 \002(\0162#.NVD.Configuration."
    "eMeasurementUnit:\nKILOMETRES\022\033\n\020distance"
    "CostCoef\030\005 \002(\002:\0011\022 \n\025intraTerritoryBalan"
    "ce\030\006 \002(\002:\0011\022 \n\025interTerritoryBalance\030\007 \002"
    "(\002:\0011\022\022\n\nweekLength\030\010 \002(\005\022\024\n\014periodLengt"
    "h\030\t \002(\005\"\\\n\020eMeasurementUnit\022\013\n\007SECONDS\020\000"
    "\022\013\n\007MINUTES\020\001\022\t\n\005HOURS\020\002\022\010\n\004DAYS\020\003\022\016\n\nKI"
    "LOMETRES\020\004\022\t\n\005MILES\020\005\".\n\007Geocode\022\021\n\tlong"
    "itude\030\001 \002(\002\022\020\n\010latitude\030\002 \002(\002\"\377\002\n\007Profil"
    "e\022.\n\rfrequencyType\030\001 \002(\0162\027.NVD.Profile.e"
    "Frequency\0221\n\017allowableCycles\030\002 \003(\0132\030.NVD"
    ".Profile.customCycle\022\021\n\tnumVisits\030\003 \001(\005\032"
    "#\n\013customCycle\022\024\n\014visitProfile\030\002 \003(\010\"\330\001\n"
    "\neFrequency\022\n\n\006CUSTOM\020\000\022\026\n\022SEVEN_TIMES_A"
    "_WEEK\020\001\022\024\n\020SIX_TIMES_A_WEEK\020\002\022\025\n\021FIVE_TI"
    "MES_A_WEEK\020\003\022\025\n\021FOUR_TIMES_A_WEEK\020\004\022\026\n\022T"
    "HREE_TIMES_A_WEEK\020\005\022\020\n\014TWICE_A_WEEK\020\006\022\017\n"
    "\013ONCE_A_WEEK\020\007\022\025\n\021EVERY_SECOND_WEEK\020\010\022\020\n"
    "\014ONCE_A_MONTH\020\t\"\245\002\n\005Visit\022\n\n\002id\030\001 \002(\t\022\036\n"
    "\010location\030\002 \002(\0132\014.NVD.Geocode\022\024\n\tvisitTi"
    "me\030\003 \002(\002:\0010\022\035\n\007profile\030\004 \002(\0132\014.NVD.Profi"
    "le\0228\n\022territoryRelations\030\005 \001(\0132\034.NVD.Vis"
    "it.TerritoryRelation\032\200\001\n\021TerritoryRelati"
    "on\022/\n\004type\030\001 \002(\0162!.NVD.Visit.TerritoryRe"
    "lation.Type\022\024\n\014territoryIds\030\002 \003(\t\"$\n\004Typ"
    "e\022\r\n\tINCLUSIVE\020\000\022\r\n\tEXCLUSIVE\020\001\"e\n\tTerri"
    "tory\022\n\n\002id\030\001 \002(\t\022\026\n\016dailyStartTime\030\002 \003(\002"
    "\022\024\n\014dailyEndTime\030\003 \003(\002\022\036\n\010location\030\004 \002(\013"
    "2\014.NVD.Geocode\"G\n\rVisitSequence\022\023\n\013terri"
    "toryId\030\001 \002(\t\022\020\n\010dayIndex\030\002 \002(\005\022\017\n\007visitI"
    "d\030\003 \003(\t\"\236\001\n\005Model\022)\n\rconfiguration\030\001 \002(\013"
    "2\022.NVD.Configuration\022\032\n\006visits\030\002 \003(\0132\n.N"
    "VD.Visit\022#\n\013territories\030\003 \003(\0132\016.NVD.Terr"
    "itory\022)\n\rvisitSequence\030\004 \003(\0132\022.NVD.Visit"
    "Sequence\"\321\001\n\014SolveRequest\022\031\n\005model\030\001 \001(\013"
    "2\n.NVD.Model\022\017\n\007modelID\030\002 \001(\t\022\"\n\006routes\030"
    "\003 \003(\0132\022.NVD.VisitSequence\0228\n\tsolveType\030\004"
    " \001(\0162\033.NVD.SolveRequest.SolveType:\010Optim"
    "ise\"7\n\tSolveType\022\014\n\010Optimise\020\000\022\014\n\010Evalua"
    "te\020\001\022\016\n\nReOptimise\020\002\"\331\013\n\020SolutionRespons"
    "e\0227\n\010frontier\030\001 \003(\0132%.NVD.SolutionRespon"
    "se.CompactSolution\0228\n\010instance\030\002 \001(\0132&.N"
    "VD.SolutionResponse.SolutionInstance\032\240\001\n"
    "\rStopAttribute\022\r\n\005dimId\030\001 \002(\t\022\022\n\nstartVa"
    "lue\030\002 \002(\002\022\020\n\010endValue\030\003 \002(\002\022\014\n\004cost\030\004 \002("
    "\002\022\022\n\nslackValue\030\005 \002(\002\022\021\n\tslackCost\030\006 \002(\002"
    "\022\022\n\ntardyValue\030\007 \002(\002\022\021\n\ttardyCost\030\010 \002(\002\032"
    "W\n\022InterStopAttribute\022\r\n\005dimId\030\001 \002(\t\022\022\n\n"
    "startValue\030\002 \002(\002\022\020\n\010endValue\030\003 \002(\002\022\014\n\004co"
    "st\030\004 \002(\002\032\202\001\n\004Stop\022\n\n\002id\030\001 \002(\005\022\020\n\010sequenc"
    "e\030\002 \002(\005\022\022\n\nlocationId\030\003 \002(\t\022\017\n\007visitId\030\004"
    " \002(\t\0227\n\nattributes\030\005 \003(\0132#.NVD.SolutionR"
    "esponse.StopAttribute\032\224\001\n\tInterStop\022\022\n\nf"
    "romStopId\030\001 \002(\005\022\020\n\010toStopId\030\002 \002(\005\022<\n\natt"
    "ributes\030\003 \003(\0132(.NVD.SolutionResponse.Int"
    "erStopAttribute\022#\n\rrouteSegments\030\004 \003(\0132\014"
    ".NVD.Geocode\032\217\001\n\024TransitRuleAttribute\022\016\n"
    "\006ruleId\030\001 \002(\t\022\r\n\005dimId\030\002 \002(\t\022\022\n\nfromStop"
    "Id\030\003 \002(\005\022\020\n\010toStopId\030\004 \002(\005\022\022\n\nstartValue"
    "\030\005 \002(\002\022\020\n\010endValue\030\006 \002(\002\022\014\n\004cost\030\007 \002(\002\032\345"
    "\001\n\005Route\022\021\n\tvehicleId\030\001 \002(\t\022)\n\005stops\030\002 \003"
    "(\0132\032.NVD.SolutionResponse.Stop\0223\n\ninterS"
    "tops\030\003 \003(\0132\037.NVD.SolutionResponse.InterS"
    "top\022\021\n\tfixedCost\030\004 \003(\002\022I\n\025transitRuleAtt"
    "ributes\030\005 \003(\0132*.NVD.SolutionResponse.Tra"
    "nsitRuleAttribute\022\013\n\003day\030\006 \002(\005\032\326\001\n\rInfea"
    "sibility\022\016\n\006taskId\030\001 \002(\t\022C\n\021infeasibilit"
    "yInfo\030\002 \003(\0132(.NVD.SolutionResponse.Infea"
    "sibility.Info\032p\n\004Info\022\017\n\007message\030\001 \002(\t\022\r"
    "\n\005dimId\030\002 \001(\t\022\r\n\005limit\030\003 \001(\002\022\r\n\005value\030\004 "
    "\001(\002\022\r\n\005count\030\005 \001(\003\022\033\n\023constrainingTaskId"
    "s\030\006 \003(\t\032h\n\017CompactSolution\022)\n\rvisitSeque"
    "nce\030\001 \003(\0132\022.NVD.VisitSequence\022\022\n\nobjecti"
    "ves\030\002 \003(\002\022\026\n\016objectiveNames\030\003 \003(\t\032}\n\020Sol"
    "utionInstance\022+\n\006routes\030\001 \003(\0132\033.NVD.Solu"
    "tionResponse.Route\022<\n\017infeasibilities\030\002 "
    "\003(\0132#.NVD.SolutionResponse.Infeasibility"
};
static ::absl::once_flag descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_nvd_2dhap0j2y4zlm1_2eproto = {
    false,
    false,
    3240,
    descriptor_table_protodef_nvd_2dhap0j2y4zlm1_2eproto,
    "nvd-hap0j2y4zlm1.proto",
    &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_once,
    nullptr,
    0,
    21,
    schemas,
    file_default_instances,
    TableStruct_nvd_2dhap0j2y4zlm1_2eproto::offsets,
    file_level_metadata_nvd_2dhap0j2y4zlm1_2eproto,
    file_level_enum_descriptors_nvd_2dhap0j2y4zlm1_2eproto,
    file_level_service_descriptors_nvd_2dhap0j2y4zlm1_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_getter() {
  return &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_nvd_2dhap0j2y4zlm1_2eproto(&descriptor_table_nvd_2dhap0j2y4zlm1_2eproto);
namespace NVD {
const ::google::protobuf::EnumDescriptor* Configuration_eMeasurementUnit_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_nvd_2dhap0j2y4zlm1_2eproto);
  return file_level_enum_descriptors_nvd_2dhap0j2y4zlm1_2eproto[0];
}
bool Configuration_eMeasurementUnit_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Configuration_eMeasurementUnit Configuration::SECONDS;
constexpr Configuration_eMeasurementUnit Configuration::MINUTES;
constexpr Configuration_eMeasurementUnit Configuration::HOURS;
constexpr Configuration_eMeasurementUnit Configuration::DAYS;
constexpr Configuration_eMeasurementUnit Configuration::KILOMETRES;
constexpr Configuration_eMeasurementUnit Configuration::MILES;
constexpr Configuration_eMeasurementUnit Configuration::eMeasurementUnit_MIN;
constexpr Configuration_eMeasurementUnit Configuration::eMeasurementUnit_MAX;
constexpr int Configuration::eMeasurementUnit_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Profile_eFrequency_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_nvd_2dhap0j2y4zlm1_2eproto);
  return file_level_enum_descriptors_nvd_2dhap0j2y4zlm1_2eproto[1];
}
bool Profile_eFrequency_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Profile_eFrequency Profile::CUSTOM;
constexpr Profile_eFrequency Profile::SEVEN_TIMES_A_WEEK;
constexpr Profile_eFrequency Profile::SIX_TIMES_A_WEEK;
constexpr Profile_eFrequency Profile::FIVE_TIMES_A_WEEK;
constexpr Profile_eFrequency Profile::FOUR_TIMES_A_WEEK;
constexpr Profile_eFrequency Profile::THREE_TIMES_A_WEEK;
constexpr Profile_eFrequency Profile::TWICE_A_WEEK;
constexpr Profile_eFrequency Profile::ONCE_A_WEEK;
constexpr Profile_eFrequency Profile::EVERY_SECOND_WEEK;
constexpr Profile_eFrequency Profile::ONCE_A_MONTH;
constexpr Profile_eFrequency Profile::eFrequency_MIN;
constexpr Profile_eFrequency Profile::eFrequency_MAX;
constexpr int Profile::eFrequency_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Visit_TerritoryRelation_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_nvd_2dhap0j2y4zlm1_2eproto);
  return file_level_enum_descriptors_nvd_2dhap0j2y4zlm1_2eproto[2];
}
bool Visit_TerritoryRelation_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Visit_TerritoryRelation_Type Visit_TerritoryRelation::INCLUSIVE;
constexpr Visit_TerritoryRelation_Type Visit_TerritoryRelation::EXCLUSIVE;
constexpr Visit_TerritoryRelation_Type Visit_TerritoryRelation::Type_MIN;
constexpr Visit_TerritoryRelation_Type Visit_TerritoryRelation::Type_MAX;
constexpr int Visit_TerritoryRelation::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* SolveRequest_SolveType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_nvd_2dhap0j2y4zlm1_2eproto);
  return file_level_enum_descriptors_nvd_2dhap0j2y4zlm1_2eproto[3];
}
bool SolveRequest_SolveType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr SolveRequest_SolveType SolveRequest::Optimise;
constexpr SolveRequest_SolveType SolveRequest::Evaluate;
constexpr SolveRequest_SolveType SolveRequest::ReOptimise;
constexpr SolveRequest_SolveType SolveRequest::SolveType_MIN;
constexpr SolveRequest_SolveType SolveRequest::SolveType_MAX;
constexpr int SolveRequest::SolveType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class Configuration::_Internal {
 public:
  using HasBits = decltype(std::declval<Configuration>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Configuration, _impl_._has_bits_);
  static void set_has_timeunit(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_timecoef(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_timecostcoef(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_distanceunit(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_distancecostcoef(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_intraterritorybalance(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_interterritorybalance(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_weeklength(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_periodlength(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x000001ff) ^ 0x000001ff) != 0;
  }
};

Configuration::Configuration(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NVD.Configuration)
}
Configuration::Configuration(const Configuration& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NVD.Configuration)
}
inline void Configuration::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.weeklength_){0},
      decltype(_impl_.periodlength_){0},
      decltype(_impl_.interterritorybalance_){1},
      decltype(_impl_.timeunit_){1},
      decltype(_impl_.timecoef_){1},
      decltype(_impl_.timecostcoef_){1},
      decltype(_impl_.distanceunit_){4},
      decltype(_impl_.distancecostcoef_){1},
      decltype(_impl_.intraterritorybalance_){1},
  };
}
Configuration::~Configuration() {
  // @@protoc_insertion_point(destructor:NVD.Configuration)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Configuration::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void Configuration::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Configuration::Clear() {
// @@protoc_insertion_point(message_clear_start:NVD.Configuration)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.weeklength_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.periodlength_) -
        reinterpret_cast<char*>(&_impl_.weeklength_)) + sizeof(_impl_.periodlength_));
    _impl_.interterritorybalance_ = 1;
    _impl_.timeunit_ = 1;
    _impl_.timecoef_ = 1;
    _impl_.timecostcoef_ = 1;
    _impl_.distanceunit_ = 4;
    _impl_.distancecostcoef_ = 1;
  }
  _impl_.intraterritorybalance_ = 1;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Configuration::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 2, 0, 2> Configuration::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Configuration, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Configuration_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required .NVD.Configuration.eMeasurementUnit timeUnit = 1 [default = MINUTES];
    {::_pbi::TcParser::FastEr0S1,
     {8, 3, 5, PROTOBUF_FIELD_OFFSET(Configuration, _impl_.timeunit_)}},
    // required float timeCoef = 2 [default = 1];
    {::_pbi::TcParser::FastF32S1,
     {21, 4, 0, PROTOBUF_FIELD_OFFSET(Configuration, _impl_.timecoef_)}},
    // required float timeCostCoef = 3 [default = 1];
    {::_pbi::TcParser::FastF32S1,
     {29, 5, 0, PROTOBUF_FIELD_OFFSET(Configuration, _impl_.timecostcoef_)}},
    // required .NVD.Configuration.eMeasurementUnit distanceUnit = 4 [default = KILOMETRES];
    {::_pbi::TcParser::FastEr0S1,
     {32, 6, 5, PROTOBUF_FIELD_OFFSET(Configuration, _impl_.distanceunit_)}},
    // required float distanceCostCoef = 5 [default = 1];
    {::_pbi::TcParser::FastF32S1,
     {45, 7, 0, PROTOBUF_FIELD_OFFSET(Configuration, _impl_.distancecostcoef_)}},
    // required float intraTerritoryBalance = 6 [default = 1];
    {::_pbi::TcParser::FastF32S1,
     {53, 8, 0, PROTOBUF_FIELD_OFFSET(Configuration, _impl_.intraterritorybalance_)}},
    // required float interTerritoryBalance = 7 [default = 1];
    {::_pbi::TcParser::FastF32S1,
     {61, 2, 0, PROTOBUF_FIELD_OFFSET(Configuration, _impl_.interterritorybalance_)}},
    // required int32 weekLength = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Configuration, _impl_.weeklength_), 0>(),
     {64, 0, 0, PROTOBUF_FIELD_OFFSET(Configuration, _impl_.weeklength_)}},
    // required int32 periodLength = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Configuration, _impl_.periodlength_), 1>(),
     {72, 1, 0, PROTOBUF_FIELD_OFFSET(Configuration, _impl_.periodlength_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required .NVD.Configuration.eMeasurementUnit timeUnit = 1 [default = MINUTES];
    {PROTOBUF_FIELD_OFFSET(Configuration, _impl_.timeunit_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // required float timeCoef = 2 [default = 1];
    {PROTOBUF_FIELD_OFFSET(Configuration, _impl_.timecoef_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float timeCostCoef = 3 [default = 1];
    {PROTOBUF_FIELD_OFFSET(Configuration, _impl_.timecostcoef_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required .NVD.Configuration.eMeasurementUnit distanceUnit = 4 [default = KILOMETRES];
    {PROTOBUF_FIELD_OFFSET(Configuration, _impl_.distanceunit_), _Internal::kHasBitsOffset + 6, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // required float distanceCostCoef = 5 [default = 1];
    {PROTOBUF_FIELD_OFFSET(Configuration, _impl_.distancecostcoef_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float intraTerritoryBalance = 6 [default = 1];
    {PROTOBUF_FIELD_OFFSET(Configuration, _impl_.intraterritorybalance_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float interTerritoryBalance = 7 [default = 1];
    {PROTOBUF_FIELD_OFFSET(Configuration, _impl_.interterritorybalance_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required int32 weekLength = 8;
    {PROTOBUF_FIELD_OFFSET(Configuration, _impl_.weeklength_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required int32 periodLength = 9;
    {PROTOBUF_FIELD_OFFSET(Configuration, _impl_.periodlength_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {0, 6},
    {0, 6},
  }}, {{
  }},
};

::uint8_t* Configuration::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NVD.Configuration)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .NVD.Configuration.eMeasurementUnit timeUnit = 1 [default = MINUTES];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_timeunit(), target);
  }

  // required float timeCoef = 2 [default = 1];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_timecoef(), target);
  }

  // required float timeCostCoef = 3 [default = 1];
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_timecostcoef(), target);
  }

  // required .NVD.Configuration.eMeasurementUnit distanceUnit = 4 [default = KILOMETRES];
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_distanceunit(), target);
  }

  // required float distanceCostCoef = 5 [default = 1];
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this->_internal_distancecostcoef(), target);
  }

  // required float intraTerritoryBalance = 6 [default = 1];
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        6, this->_internal_intraterritorybalance(), target);
  }

  // required float interTerritoryBalance = 7 [default = 1];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        7, this->_internal_interterritorybalance(), target);
  }

  // required int32 weekLength = 8;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<8>(
            stream, this->_internal_weeklength(), target);
  }

  // required int32 periodLength = 9;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<9>(
            stream, this->_internal_periodlength(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NVD.Configuration)
  return target;
}

::size_t Configuration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NVD.Configuration)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // required int32 weekLength = 8;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_weeklength());
    }

    // required int32 periodLength = 9;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_periodlength());
    }

    // required float interTerritoryBalance = 7 [default = 1];
    if (cached_has_bits & 0x00000004u) {
      total_size += 5;
    }

    // required .NVD.Configuration.eMeasurementUnit timeUnit = 1 [default = MINUTES];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_timeunit());
    }

    // required float timeCoef = 2 [default = 1];
    if (cached_has_bits & 0x00000010u) {
      total_size += 5;
    }

    // required float timeCostCoef = 3 [default = 1];
    if (cached_has_bits & 0x00000020u) {
      total_size += 5;
    }

    // required .NVD.Configuration.eMeasurementUnit distanceUnit = 4 [default = KILOMETRES];
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_distanceunit());
    }

    // required float distanceCostCoef = 5 [default = 1];
    if (cached_has_bits & 0x00000080u) {
      total_size += 5;
    }

  }
  // required float intraTerritoryBalance = 6 [default = 1];
  if (cached_has_bits & 0x00000100u) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Configuration::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Configuration::MergeImpl
};
const ::google::protobuf::Message::ClassData*Configuration::GetClassData() const { return &_class_data_; }


void Configuration::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Configuration*>(&to_msg);
  auto& from = static_cast<const Configuration&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NVD.Configuration)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.weeklength_ = from._impl_.weeklength_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.periodlength_ = from._impl_.periodlength_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.interterritorybalance_ = from._impl_.interterritorybalance_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.timeunit_ = from._impl_.timeunit_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.timecoef_ = from._impl_.timecoef_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.timecostcoef_ = from._impl_.timecostcoef_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.distanceunit_ = from._impl_.distanceunit_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.distancecostcoef_ = from._impl_.distancecostcoef_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    _this->_internal_set_intraterritorybalance(from._internal_intraterritorybalance());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Configuration::CopyFrom(const Configuration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NVD.Configuration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Configuration::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

void Configuration::InternalSwap(Configuration* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Configuration, _impl_.intraterritorybalance_)
      + sizeof(Configuration::_impl_.intraterritorybalance_)
      - PROTOBUF_FIELD_OFFSET(Configuration, _impl_.weeklength_)>(
          reinterpret_cast<char*>(&_impl_.weeklength_),
          reinterpret_cast<char*>(&other->_impl_.weeklength_));
}

::google::protobuf::Metadata Configuration::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_getter, &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_once,
      file_level_metadata_nvd_2dhap0j2y4zlm1_2eproto[0]);
}
// ===================================================================

class Geocode::_Internal {
 public:
  using HasBits = decltype(std::declval<Geocode>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Geocode, _impl_._has_bits_);
  static void set_has_longitude(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_latitude(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

Geocode::Geocode(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NVD.Geocode)
}
Geocode::Geocode(const Geocode& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NVD.Geocode)
}
inline void Geocode::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.longitude_){0},
      decltype(_impl_.latitude_){0},
  };
}
Geocode::~Geocode() {
  // @@protoc_insertion_point(destructor:NVD.Geocode)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Geocode::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void Geocode::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Geocode::Clear() {
// @@protoc_insertion_point(message_clear_start:NVD.Geocode)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.longitude_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.latitude_) -
        reinterpret_cast<char*>(&_impl_.longitude_)) + sizeof(_impl_.latitude_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Geocode::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Geocode::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Geocode, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Geocode_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required float latitude = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(Geocode, _impl_.latitude_)}},
    // required float longitude = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(Geocode, _impl_.longitude_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required float longitude = 1;
    {PROTOBUF_FIELD_OFFSET(Geocode, _impl_.longitude_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float latitude = 2;
    {PROTOBUF_FIELD_OFFSET(Geocode, _impl_.latitude_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Geocode::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NVD.Geocode)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required float longitude = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_longitude(), target);
  }

  // required float latitude = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_latitude(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NVD.Geocode)
  return target;
}

::size_t Geocode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NVD.Geocode)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required float longitude = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 5;
    }

    // required float latitude = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 5;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Geocode::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Geocode::MergeImpl
};
const ::google::protobuf::Message::ClassData*Geocode::GetClassData() const { return &_class_data_; }


void Geocode::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Geocode*>(&to_msg);
  auto& from = static_cast<const Geocode&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NVD.Geocode)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.longitude_ = from._impl_.longitude_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.latitude_ = from._impl_.latitude_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Geocode::CopyFrom(const Geocode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NVD.Geocode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Geocode::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

void Geocode::InternalSwap(Geocode* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Geocode, _impl_.latitude_)
      + sizeof(Geocode::_impl_.latitude_)
      - PROTOBUF_FIELD_OFFSET(Geocode, _impl_.longitude_)>(
          reinterpret_cast<char*>(&_impl_.longitude_),
          reinterpret_cast<char*>(&other->_impl_.longitude_));
}

::google::protobuf::Metadata Geocode::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_getter, &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_once,
      file_level_metadata_nvd_2dhap0j2y4zlm1_2eproto[1]);
}
// ===================================================================

class Profile_customCycle::_Internal {
 public:
};

Profile_customCycle::Profile_customCycle(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NVD.Profile.customCycle)
}
Profile_customCycle::Profile_customCycle(const Profile_customCycle& from) : ::google::protobuf::Message() {
  Profile_customCycle* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.visitprofile_){from._impl_.visitprofile_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:NVD.Profile.customCycle)
}
inline void Profile_customCycle::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.visitprofile_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
Profile_customCycle::~Profile_customCycle() {
  // @@protoc_insertion_point(destructor:NVD.Profile.customCycle)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Profile_customCycle::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.visitprofile_.~RepeatedField();
}
void Profile_customCycle::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Profile_customCycle::Clear() {
// @@protoc_insertion_point(message_clear_start:NVD.Profile.customCycle)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_visitprofile()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Profile_customCycle::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Profile_customCycle::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967293,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Profile_customCycle_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated bool visitProfile = 2;
    {::_pbi::TcParser::FastV8R1,
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Profile_customCycle, _impl_.visitprofile_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated bool visitProfile = 2;
    {PROTOBUF_FIELD_OFFSET(Profile_customCycle, _impl_.visitprofile_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Profile_customCycle::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NVD.Profile.customCycle)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated bool visitProfile = 2;
  for (int i = 0, n = this->_internal_visitprofile_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_visitprofile().Get(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NVD.Profile.customCycle)
  return target;
}

::size_t Profile_customCycle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NVD.Profile.customCycle)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bool visitProfile = 2;
  {
    std::size_t data_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_visitprofile_size())
    ;
    std::size_t tag_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_visitprofile_size());
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Profile_customCycle::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Profile_customCycle::MergeImpl
};
const ::google::protobuf::Message::ClassData*Profile_customCycle::GetClassData() const { return &_class_data_; }


void Profile_customCycle::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Profile_customCycle*>(&to_msg);
  auto& from = static_cast<const Profile_customCycle&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NVD.Profile.customCycle)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_visitprofile()->MergeFrom(from._internal_visitprofile());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Profile_customCycle::CopyFrom(const Profile_customCycle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NVD.Profile.customCycle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Profile_customCycle::IsInitialized() const {
  return true;
}

void Profile_customCycle::InternalSwap(Profile_customCycle* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.visitprofile_.InternalSwap(&other->_impl_.visitprofile_);
}

::google::protobuf::Metadata Profile_customCycle::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_getter, &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_once,
      file_level_metadata_nvd_2dhap0j2y4zlm1_2eproto[2]);
}
// ===================================================================

class Profile::_Internal {
 public:
  using HasBits = decltype(std::declval<Profile>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Profile, _impl_._has_bits_);
  static void set_has_frequencytype(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_numvisits(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

Profile::Profile(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NVD.Profile)
}
Profile::Profile(const Profile& from) : ::google::protobuf::Message() {
  Profile* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.allowablecycles_){from._impl_.allowablecycles_},
      decltype(_impl_.frequencytype_){},
      decltype(_impl_.numvisits_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  ::memcpy(&_impl_.frequencytype_, &from._impl_.frequencytype_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.numvisits_) -
    reinterpret_cast<char*>(&_impl_.frequencytype_)) + sizeof(_impl_.numvisits_));

  // @@protoc_insertion_point(copy_constructor:NVD.Profile)
}
inline void Profile::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.allowablecycles_){arena},
      decltype(_impl_.frequencytype_){0},
      decltype(_impl_.numvisits_){0},
  };
}
Profile::~Profile() {
  // @@protoc_insertion_point(destructor:NVD.Profile)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Profile::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.allowablecycles_.~RepeatedPtrField();
}
void Profile::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Profile::Clear() {
// @@protoc_insertion_point(message_clear_start:NVD.Profile)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_allowablecycles()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.frequencytype_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.numvisits_) -
        reinterpret_cast<char*>(&_impl_.frequencytype_)) + sizeof(_impl_.numvisits_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Profile::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> Profile::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Profile, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Profile_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required .NVD.Profile.eFrequency frequencyType = 1;
    {::_pbi::TcParser::FastEr0S1,
     {8, 0, 9, PROTOBUF_FIELD_OFFSET(Profile, _impl_.frequencytype_)}},
    // repeated .NVD.Profile.customCycle allowableCycles = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(Profile, _impl_.allowablecycles_)}},
    // optional int32 numVisits = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Profile, _impl_.numvisits_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(Profile, _impl_.numvisits_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required .NVD.Profile.eFrequency frequencyType = 1;
    {PROTOBUF_FIELD_OFFSET(Profile, _impl_.frequencytype_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // repeated .NVD.Profile.customCycle allowableCycles = 2;
    {PROTOBUF_FIELD_OFFSET(Profile, _impl_.allowablecycles_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional int32 numVisits = 3;
    {PROTOBUF_FIELD_OFFSET(Profile, _impl_.numvisits_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {0, 10},
    {::_pbi::TcParser::GetTable<::NVD::Profile_customCycle>()},
  }}, {{
  }},
};

::uint8_t* Profile::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NVD.Profile)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .NVD.Profile.eFrequency frequencyType = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_frequencytype(), target);
  }

  // repeated .NVD.Profile.customCycle allowableCycles = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_allowablecycles_size()); i < n; i++) {
    const auto& repfield = this->_internal_allowablecycles().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional int32 numVisits = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_numvisits(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NVD.Profile)
  return target;
}

::size_t Profile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NVD.Profile)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .NVD.Profile.customCycle allowableCycles = 2;
  total_size += 1UL * this->_internal_allowablecycles_size();
  for (const auto& msg : this->_internal_allowablecycles()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // required .NVD.Profile.eFrequency frequencyType = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_frequencytype());
  }

  // optional int32 numVisits = 3;
  if (cached_has_bits & 0x00000002u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_numvisits());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Profile::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Profile::MergeImpl
};
const ::google::protobuf::Message::ClassData*Profile::GetClassData() const { return &_class_data_; }


void Profile::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Profile*>(&to_msg);
  auto& from = static_cast<const Profile&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NVD.Profile)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_allowablecycles()->MergeFrom(from._internal_allowablecycles());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.frequencytype_ = from._impl_.frequencytype_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.numvisits_ = from._impl_.numvisits_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Profile::CopyFrom(const Profile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NVD.Profile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Profile::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

void Profile::InternalSwap(Profile* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.allowablecycles_.InternalSwap(&other->_impl_.allowablecycles_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Profile, _impl_.numvisits_)
      + sizeof(Profile::_impl_.numvisits_)
      - PROTOBUF_FIELD_OFFSET(Profile, _impl_.frequencytype_)>(
          reinterpret_cast<char*>(&_impl_.frequencytype_),
          reinterpret_cast<char*>(&other->_impl_.frequencytype_));
}

::google::protobuf::Metadata Profile::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_getter, &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_once,
      file_level_metadata_nvd_2dhap0j2y4zlm1_2eproto[3]);
}
// ===================================================================

class Visit_TerritoryRelation::_Internal {
 public:
  using HasBits = decltype(std::declval<Visit_TerritoryRelation>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Visit_TerritoryRelation, _impl_._has_bits_);
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

Visit_TerritoryRelation::Visit_TerritoryRelation(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NVD.Visit.TerritoryRelation)
}
Visit_TerritoryRelation::Visit_TerritoryRelation(const Visit_TerritoryRelation& from) : ::google::protobuf::Message() {
  Visit_TerritoryRelation* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.territoryids_){from._impl_.territoryids_},
      decltype(_impl_.type_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _this->_impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:NVD.Visit.TerritoryRelation)
}
inline void Visit_TerritoryRelation::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.territoryids_){arena},
      decltype(_impl_.type_){0},
  };
}
Visit_TerritoryRelation::~Visit_TerritoryRelation() {
  // @@protoc_insertion_point(destructor:NVD.Visit.TerritoryRelation)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Visit_TerritoryRelation::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_territoryids()->~RepeatedPtrField();
}
void Visit_TerritoryRelation::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Visit_TerritoryRelation::Clear() {
// @@protoc_insertion_point(message_clear_start:NVD.Visit.TerritoryRelation)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_territoryids()->Clear();
  _impl_.type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Visit_TerritoryRelation::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 48, 2> Visit_TerritoryRelation::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Visit_TerritoryRelation, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Visit_TerritoryRelation_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string territoryIds = 2;
    {::_pbi::TcParser::FastSR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Visit_TerritoryRelation, _impl_.territoryids_)}},
    // required .NVD.Visit.TerritoryRelation.Type type = 1;
    {::_pbi::TcParser::FastEr0S1,
     {8, 0, 1, PROTOBUF_FIELD_OFFSET(Visit_TerritoryRelation, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required .NVD.Visit.TerritoryRelation.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(Visit_TerritoryRelation, _impl_.type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // repeated string territoryIds = 2;
    {PROTOBUF_FIELD_OFFSET(Visit_TerritoryRelation, _impl_.territoryids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }}, {{
    {0, 2},
  }}, {{
    "\33\0\14\0\0\0\0\0"
    "NVD.Visit.TerritoryRelation"
    "territoryIds"
  }},
};

::uint8_t* Visit_TerritoryRelation::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NVD.Visit.TerritoryRelation)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .NVD.Visit.TerritoryRelation.Type type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  // repeated string territoryIds = 2;
  for (int i = 0, n = this->_internal_territoryids_size(); i < n; ++i) {
    const auto& s = this->_internal_territoryids().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "NVD.Visit.TerritoryRelation.territoryIds");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NVD.Visit.TerritoryRelation)
  return target;
}

::size_t Visit_TerritoryRelation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NVD.Visit.TerritoryRelation)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string territoryIds = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_territoryids().size());
  for (int i = 0, n = _internal_territoryids().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_territoryids().Get(i));
  }
  // required .NVD.Visit.TerritoryRelation.Type type = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Visit_TerritoryRelation::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Visit_TerritoryRelation::MergeImpl
};
const ::google::protobuf::Message::ClassData*Visit_TerritoryRelation::GetClassData() const { return &_class_data_; }


void Visit_TerritoryRelation::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Visit_TerritoryRelation*>(&to_msg);
  auto& from = static_cast<const Visit_TerritoryRelation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NVD.Visit.TerritoryRelation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_territoryids()->MergeFrom(from._internal_territoryids());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Visit_TerritoryRelation::CopyFrom(const Visit_TerritoryRelation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NVD.Visit.TerritoryRelation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Visit_TerritoryRelation::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

void Visit_TerritoryRelation::InternalSwap(Visit_TerritoryRelation* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.territoryids_.InternalSwap(&other->_impl_.territoryids_);
  swap(_impl_.type_, other->_impl_.type_);
}

::google::protobuf::Metadata Visit_TerritoryRelation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_getter, &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_once,
      file_level_metadata_nvd_2dhap0j2y4zlm1_2eproto[4]);
}
// ===================================================================

class Visit::_Internal {
 public:
  using HasBits = decltype(std::declval<Visit>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Visit, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::NVD::Geocode& location(const Visit* msg);
  static void set_has_location(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_visittime(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::NVD::Profile& profile(const Visit* msg);
  static void set_has_profile(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::NVD::Visit_TerritoryRelation& territoryrelations(const Visit* msg);
  static void set_has_territoryrelations(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000017) ^ 0x00000017) != 0;
  }
};

const ::NVD::Geocode& Visit::_Internal::location(const Visit* msg) {
  return *msg->_impl_.location_;
}
const ::NVD::Profile& Visit::_Internal::profile(const Visit* msg) {
  return *msg->_impl_.profile_;
}
const ::NVD::Visit_TerritoryRelation& Visit::_Internal::territoryrelations(const Visit* msg) {
  return *msg->_impl_.territoryrelations_;
}
Visit::Visit(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NVD.Visit)
}
Visit::Visit(const Visit& from) : ::google::protobuf::Message() {
  Visit* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.id_){},
      decltype(_impl_.location_){nullptr},
      decltype(_impl_.profile_){nullptr},
      decltype(_impl_.territoryrelations_){nullptr},
      decltype(_impl_.visittime_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.id_.Set(from._internal_id(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.location_ = new ::NVD::Geocode(*from._impl_.location_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.profile_ = new ::NVD::Profile(*from._impl_.profile_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000008u) != 0) {
    _this->_impl_.territoryrelations_ = new ::NVD::Visit_TerritoryRelation(*from._impl_.territoryrelations_);
  }
  _this->_impl_.visittime_ = from._impl_.visittime_;

  // @@protoc_insertion_point(copy_constructor:NVD.Visit)
}
inline void Visit::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.id_){},
      decltype(_impl_.location_){nullptr},
      decltype(_impl_.profile_){nullptr},
      decltype(_impl_.territoryrelations_){nullptr},
      decltype(_impl_.visittime_){0},
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
Visit::~Visit() {
  // @@protoc_insertion_point(destructor:NVD.Visit)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Visit::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.location_;
  if (this != internal_default_instance()) delete _impl_.profile_;
  if (this != internal_default_instance()) delete _impl_.territoryrelations_;
}
void Visit::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Visit::Clear() {
// @@protoc_insertion_point(message_clear_start:NVD.Visit)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.location_ != nullptr);
      _impl_.location_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.profile_ != nullptr);
      _impl_.profile_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.territoryrelations_ != nullptr);
      _impl_.territoryrelations_->Clear();
    }
  }
  _impl_.visittime_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Visit::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 3, 20, 2> Visit::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Visit, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Visit_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Visit, _impl_.id_)}},
    // required .NVD.Geocode location = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Visit, _impl_.location_)}},
    // required float visitTime = 3 [default = 0];
    {::_pbi::TcParser::FastF32S1,
     {29, 4, 0, PROTOBUF_FIELD_OFFSET(Visit, _impl_.visittime_)}},
    // required .NVD.Profile profile = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 1, PROTOBUF_FIELD_OFFSET(Visit, _impl_.profile_)}},
    // optional .NVD.Visit.TerritoryRelation territoryRelations = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 3, 2, PROTOBUF_FIELD_OFFSET(Visit, _impl_.territoryrelations_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(Visit, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required .NVD.Geocode location = 2;
    {PROTOBUF_FIELD_OFFSET(Visit, _impl_.location_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required float visitTime = 3 [default = 0];
    {PROTOBUF_FIELD_OFFSET(Visit, _impl_.visittime_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required .NVD.Profile profile = 4;
    {PROTOBUF_FIELD_OFFSET(Visit, _impl_.profile_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .NVD.Visit.TerritoryRelation territoryRelations = 5;
    {PROTOBUF_FIELD_OFFSET(Visit, _impl_.territoryrelations_), _Internal::kHasBitsOffset + 3, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::NVD::Geocode>()},
    {::_pbi::TcParser::GetTable<::NVD::Profile>()},
    {::_pbi::TcParser::GetTable<::NVD::Visit_TerritoryRelation>()},
  }}, {{
    "\11\2\0\0\0\0\0\0"
    "NVD.Visit"
    "id"
  }},
};

::uint8_t* Visit::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NVD.Visit)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "NVD.Visit.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required .NVD.Geocode location = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::location(this),
        _Internal::location(this).GetCachedSize(), target, stream);
  }

  // required float visitTime = 3 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_visittime(), target);
  }

  // required .NVD.Profile profile = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::profile(this),
        _Internal::profile(this).GetCachedSize(), target, stream);
  }

  // optional .NVD.Visit.TerritoryRelation territoryRelations = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::territoryrelations(this),
        _Internal::territoryrelations(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NVD.Visit)
  return target;
}

::size_t Visit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NVD.Visit)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // required string id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_id());
    }

    // required .NVD.Geocode location = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.location_);
    }

    // required .NVD.Profile profile = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.profile_);
    }

  }
  // optional .NVD.Visit.TerritoryRelation territoryRelations = 5;
  if (cached_has_bits & 0x00000008u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.territoryrelations_);
  }

  // required float visitTime = 3 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Visit::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Visit::MergeImpl
};
const ::google::protobuf::Message::ClassData*Visit::GetClassData() const { return &_class_data_; }


void Visit::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Visit*>(&to_msg);
  auto& from = static_cast<const Visit&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NVD.Visit)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_location()->::NVD::Geocode::MergeFrom(
          from._internal_location());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_profile()->::NVD::Profile::MergeFrom(
          from._internal_profile());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_territoryrelations()->::NVD::Visit_TerritoryRelation::MergeFrom(
          from._internal_territoryrelations());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.visittime_ = from._impl_.visittime_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Visit::CopyFrom(const Visit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NVD.Visit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Visit::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!_impl_.location_->IsInitialized()) return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!_impl_.profile_->IsInitialized()) return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (!_impl_.territoryrelations_->IsInitialized()) return false;
  }
  return true;
}

void Visit::InternalSwap(Visit* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, lhs_arena,
                                       &other->_impl_.id_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Visit, _impl_.visittime_)
      + sizeof(Visit::_impl_.visittime_)
      - PROTOBUF_FIELD_OFFSET(Visit, _impl_.location_)>(
          reinterpret_cast<char*>(&_impl_.location_),
          reinterpret_cast<char*>(&other->_impl_.location_));
}

::google::protobuf::Metadata Visit::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_getter, &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_once,
      file_level_metadata_nvd_2dhap0j2y4zlm1_2eproto[5]);
}
// ===================================================================

class Territory::_Internal {
 public:
  using HasBits = decltype(std::declval<Territory>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Territory, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::NVD::Geocode& location(const Territory* msg);
  static void set_has_location(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

const ::NVD::Geocode& Territory::_Internal::location(const Territory* msg) {
  return *msg->_impl_.location_;
}
Territory::Territory(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NVD.Territory)
}
Territory::Territory(const Territory& from) : ::google::protobuf::Message() {
  Territory* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.dailystarttime_){from._impl_.dailystarttime_},
      decltype(_impl_.dailyendtime_){from._impl_.dailyendtime_},
      decltype(_impl_.id_){},
      decltype(_impl_.location_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.id_.Set(from._internal_id(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.location_ = new ::NVD::Geocode(*from._impl_.location_);
  }

  // @@protoc_insertion_point(copy_constructor:NVD.Territory)
}
inline void Territory::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.dailystarttime_){arena},
      decltype(_impl_.dailyendtime_){arena},
      decltype(_impl_.id_){},
      decltype(_impl_.location_){nullptr},
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
Territory::~Territory() {
  // @@protoc_insertion_point(destructor:NVD.Territory)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Territory::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.dailystarttime_.~RepeatedField();
  _impl_.dailyendtime_.~RepeatedField();
  _impl_.id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.location_;
}
void Territory::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Territory::Clear() {
// @@protoc_insertion_point(message_clear_start:NVD.Territory)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_dailystarttime()->Clear();
  _internal_mutable_dailyendtime()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.location_ != nullptr);
      _impl_.location_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Territory::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 24, 2> Territory::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Territory, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Territory_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required .NVD.Geocode location = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(Territory, _impl_.location_)}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Territory, _impl_.id_)}},
    // repeated float dailyStartTime = 2;
    {::_pbi::TcParser::FastF32R1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(Territory, _impl_.dailystarttime_)}},
    // repeated float dailyEndTime = 3;
    {::_pbi::TcParser::FastF32R1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(Territory, _impl_.dailyendtime_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(Territory, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated float dailyStartTime = 2;
    {PROTOBUF_FIELD_OFFSET(Territory, _impl_.dailystarttime_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kFloat)},
    // repeated float dailyEndTime = 3;
    {PROTOBUF_FIELD_OFFSET(Territory, _impl_.dailyendtime_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kFloat)},
    // required .NVD.Geocode location = 4;
    {PROTOBUF_FIELD_OFFSET(Territory, _impl_.location_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::NVD::Geocode>()},
  }}, {{
    "\15\2\0\0\0\0\0\0"
    "NVD.Territory"
    "id"
  }},
};

::uint8_t* Territory::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NVD.Territory)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "NVD.Territory.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated float dailyStartTime = 2;
  for (int i = 0, n = this->_internal_dailystarttime_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_dailystarttime().Get(i), target);
  }

  // repeated float dailyEndTime = 3;
  for (int i = 0, n = this->_internal_dailyendtime_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_dailyendtime().Get(i), target);
  }

  // required .NVD.Geocode location = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::location(this),
        _Internal::location(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NVD.Territory)
  return target;
}

::size_t Territory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NVD.Territory)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float dailyStartTime = 2;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_dailystarttime_size())
    ;
    std::size_t tag_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_dailystarttime_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated float dailyEndTime = 3;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_dailyendtime_size())
    ;
    std::size_t tag_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_dailyendtime_size());
    ;
    total_size += tag_size + data_size;
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required string id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_id());
    }

    // required .NVD.Geocode location = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.location_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Territory::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Territory::MergeImpl
};
const ::google::protobuf::Message::ClassData*Territory::GetClassData() const { return &_class_data_; }


void Territory::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Territory*>(&to_msg);
  auto& from = static_cast<const Territory&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NVD.Territory)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_dailystarttime()->MergeFrom(from._internal_dailystarttime());
  _this->_internal_mutable_dailyendtime()->MergeFrom(from._internal_dailyendtime());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_location()->::NVD::Geocode::MergeFrom(
          from._internal_location());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Territory::CopyFrom(const Territory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NVD.Territory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Territory::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!_impl_.location_->IsInitialized()) return false;
  }
  return true;
}

void Territory::InternalSwap(Territory* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.dailystarttime_.InternalSwap(&other->_impl_.dailystarttime_);
  _impl_.dailyendtime_.InternalSwap(&other->_impl_.dailyendtime_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, lhs_arena,
                                       &other->_impl_.id_, rhs_arena);
  swap(_impl_.location_, other->_impl_.location_);
}

::google::protobuf::Metadata Territory::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_getter, &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_once,
      file_level_metadata_nvd_2dhap0j2y4zlm1_2eproto[6]);
}
// ===================================================================

class VisitSequence::_Internal {
 public:
  using HasBits = decltype(std::declval<VisitSequence>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VisitSequence, _impl_._has_bits_);
  static void set_has_territoryid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_dayindex(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

VisitSequence::VisitSequence(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NVD.VisitSequence)
}
VisitSequence::VisitSequence(const VisitSequence& from) : ::google::protobuf::Message() {
  VisitSequence* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.visitid_){from._impl_.visitid_},
      decltype(_impl_.territoryid_){},
      decltype(_impl_.dayindex_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.territoryid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.territoryid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.territoryid_.Set(from._internal_territoryid(), _this->GetArenaForAllocation());
  }
  _this->_impl_.dayindex_ = from._impl_.dayindex_;

  // @@protoc_insertion_point(copy_constructor:NVD.VisitSequence)
}
inline void VisitSequence::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.visitid_){arena},
      decltype(_impl_.territoryid_){},
      decltype(_impl_.dayindex_){0},
  };
  _impl_.territoryid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.territoryid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
VisitSequence::~VisitSequence() {
  // @@protoc_insertion_point(destructor:NVD.VisitSequence)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VisitSequence::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_visitid()->~RepeatedPtrField();
  _impl_.territoryid_.Destroy();
}
void VisitSequence::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void VisitSequence::Clear() {
// @@protoc_insertion_point(message_clear_start:NVD.VisitSequence)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_visitid()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.territoryid_.ClearNonDefaultToEmpty();
  }
  _impl_.dayindex_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VisitSequence::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 44, 2> VisitSequence::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VisitSequence, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_VisitSequence_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string territoryId = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(VisitSequence, _impl_.territoryid_)}},
    // required int32 dayIndex = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VisitSequence, _impl_.dayindex_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(VisitSequence, _impl_.dayindex_)}},
    // repeated string visitId = 3;
    {::_pbi::TcParser::FastSR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(VisitSequence, _impl_.visitid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string territoryId = 1;
    {PROTOBUF_FIELD_OFFSET(VisitSequence, _impl_.territoryid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required int32 dayIndex = 2;
    {PROTOBUF_FIELD_OFFSET(VisitSequence, _impl_.dayindex_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated string visitId = 3;
    {PROTOBUF_FIELD_OFFSET(VisitSequence, _impl_.visitid_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\21\13\0\7\0\0\0\0"
    "NVD.VisitSequence"
    "territoryId"
    "visitId"
  }},
};

::uint8_t* VisitSequence::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NVD.VisitSequence)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string territoryId = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_territoryid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "NVD.VisitSequence.territoryId");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required int32 dayIndex = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_dayindex(), target);
  }

  // repeated string visitId = 3;
  for (int i = 0, n = this->_internal_visitid_size(); i < n; ++i) {
    const auto& s = this->_internal_visitid().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "NVD.VisitSequence.visitId");
    target = stream->WriteString(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NVD.VisitSequence)
  return target;
}

::size_t VisitSequence::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NVD.VisitSequence)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string visitId = 3;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_visitid().size());
  for (int i = 0, n = _internal_visitid().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_visitid().Get(i));
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required string territoryId = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_territoryid());
    }

    // required int32 dayIndex = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_dayindex());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VisitSequence::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    VisitSequence::MergeImpl
};
const ::google::protobuf::Message::ClassData*VisitSequence::GetClassData() const { return &_class_data_; }


void VisitSequence::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VisitSequence*>(&to_msg);
  auto& from = static_cast<const VisitSequence&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NVD.VisitSequence)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_visitid()->MergeFrom(from._internal_visitid());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_territoryid(from._internal_territoryid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.dayindex_ = from._impl_.dayindex_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VisitSequence::CopyFrom(const VisitSequence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NVD.VisitSequence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VisitSequence::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

void VisitSequence::InternalSwap(VisitSequence* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.visitid_.InternalSwap(&other->_impl_.visitid_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.territoryid_, lhs_arena,
                                       &other->_impl_.territoryid_, rhs_arena);
        swap(_impl_.dayindex_, other->_impl_.dayindex_);
}

::google::protobuf::Metadata VisitSequence::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_getter, &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_once,
      file_level_metadata_nvd_2dhap0j2y4zlm1_2eproto[7]);
}
// ===================================================================

class Model::_Internal {
 public:
  using HasBits = decltype(std::declval<Model>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Model, _impl_._has_bits_);
  static const ::NVD::Configuration& configuration(const Model* msg);
  static void set_has_configuration(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::NVD::Configuration& Model::_Internal::configuration(const Model* msg) {
  return *msg->_impl_.configuration_;
}
Model::Model(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NVD.Model)
}
Model::Model(const Model& from) : ::google::protobuf::Message() {
  Model* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.visits_){from._impl_.visits_},
      decltype(_impl_.territories_){from._impl_.territories_},
      decltype(_impl_.visitsequence_){from._impl_.visitsequence_},
      decltype(_impl_.configuration_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.configuration_ = new ::NVD::Configuration(*from._impl_.configuration_);
  }

  // @@protoc_insertion_point(copy_constructor:NVD.Model)
}
inline void Model::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.visits_){arena},
      decltype(_impl_.territories_){arena},
      decltype(_impl_.visitsequence_){arena},
      decltype(_impl_.configuration_){nullptr},
  };
}
Model::~Model() {
  // @@protoc_insertion_point(destructor:NVD.Model)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Model::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.visits_.~RepeatedPtrField();
  _impl_.territories_.~RepeatedPtrField();
  _impl_.visitsequence_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.configuration_;
}
void Model::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Model::Clear() {
// @@protoc_insertion_point(message_clear_start:NVD.Model)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_visits()->Clear();
  _internal_mutable_territories()->Clear();
  _internal_mutable_visitsequence()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.configuration_ != nullptr);
    _impl_.configuration_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Model::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 4, 0, 2> Model::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Model, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Model_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .NVD.VisitSequence visitSequence = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 3, PROTOBUF_FIELD_OFFSET(Model, _impl_.visitsequence_)}},
    // required .NVD.Configuration configuration = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Model, _impl_.configuration_)}},
    // repeated .NVD.Visit visits = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(Model, _impl_.visits_)}},
    // repeated .NVD.Territory territories = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(Model, _impl_.territories_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required .NVD.Configuration configuration = 1;
    {PROTOBUF_FIELD_OFFSET(Model, _impl_.configuration_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .NVD.Visit visits = 2;
    {PROTOBUF_FIELD_OFFSET(Model, _impl_.visits_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .NVD.Territory territories = 3;
    {PROTOBUF_FIELD_OFFSET(Model, _impl_.territories_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .NVD.VisitSequence visitSequence = 4;
    {PROTOBUF_FIELD_OFFSET(Model, _impl_.visitsequence_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::NVD::Configuration>()},
    {::_pbi::TcParser::GetTable<::NVD::Visit>()},
    {::_pbi::TcParser::GetTable<::NVD::Territory>()},
    {::_pbi::TcParser::GetTable<::NVD::VisitSequence>()},
  }}, {{
  }},
};

::uint8_t* Model::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NVD.Model)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .NVD.Configuration configuration = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::configuration(this),
        _Internal::configuration(this).GetCachedSize(), target, stream);
  }

  // repeated .NVD.Visit visits = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_visits_size()); i < n; i++) {
    const auto& repfield = this->_internal_visits().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .NVD.Territory territories = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_territories_size()); i < n; i++) {
    const auto& repfield = this->_internal_territories().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .NVD.VisitSequence visitSequence = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_visitsequence_size()); i < n; i++) {
    const auto& repfield = this->_internal_visitsequence().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NVD.Model)
  return target;
}

::size_t Model::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NVD.Model)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .NVD.Visit visits = 2;
  total_size += 1UL * this->_internal_visits_size();
  for (const auto& msg : this->_internal_visits()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .NVD.Territory territories = 3;
  total_size += 1UL * this->_internal_territories_size();
  for (const auto& msg : this->_internal_territories()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .NVD.VisitSequence visitSequence = 4;
  total_size += 1UL * this->_internal_visitsequence_size();
  for (const auto& msg : this->_internal_visitsequence()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // required .NVD.Configuration configuration = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.configuration_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Model::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Model::MergeImpl
};
const ::google::protobuf::Message::ClassData*Model::GetClassData() const { return &_class_data_; }


void Model::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Model*>(&to_msg);
  auto& from = static_cast<const Model&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NVD.Model)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_visits()->MergeFrom(from._internal_visits());
  _this->_internal_mutable_territories()->MergeFrom(from._internal_territories());
  _this->_internal_mutable_visitsequence()->MergeFrom(from._internal_visitsequence());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_configuration()->::NVD::Configuration::MergeFrom(
        from._internal_configuration());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Model::CopyFrom(const Model& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NVD.Model)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Model::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(_internal_visits()))
    return false;
  if (!::google::protobuf::internal::AllAreInitialized(_internal_territories()))
    return false;
  if (!::google::protobuf::internal::AllAreInitialized(_internal_visitsequence()))
    return false;
  if ((_impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!_impl_.configuration_->IsInitialized()) return false;
  }
  return true;
}

void Model::InternalSwap(Model* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.visits_.InternalSwap(&other->_impl_.visits_);
  _impl_.territories_.InternalSwap(&other->_impl_.territories_);
  _impl_.visitsequence_.InternalSwap(&other->_impl_.visitsequence_);
  swap(_impl_.configuration_, other->_impl_.configuration_);
}

::google::protobuf::Metadata Model::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_getter, &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_once,
      file_level_metadata_nvd_2dhap0j2y4zlm1_2eproto[8]);
}
// ===================================================================

class SolveRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SolveRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SolveRequest, _impl_._has_bits_);
  static const ::NVD::Model& model(const SolveRequest* msg);
  static void set_has_model(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_modelid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_solvetype(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::NVD::Model& SolveRequest::_Internal::model(const SolveRequest* msg) {
  return *msg->_impl_.model_;
}
SolveRequest::SolveRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NVD.SolveRequest)
}
SolveRequest::SolveRequest(const SolveRequest& from) : ::google::protobuf::Message() {
  SolveRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.routes_){from._impl_.routes_},
      decltype(_impl_.modelid_){},
      decltype(_impl_.model_){nullptr},
      decltype(_impl_.solvetype_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.modelid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.modelid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.modelid_.Set(from._internal_modelid(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.model_ = new ::NVD::Model(*from._impl_.model_);
  }
  _this->_impl_.solvetype_ = from._impl_.solvetype_;

  // @@protoc_insertion_point(copy_constructor:NVD.SolveRequest)
}
inline void SolveRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.routes_){arena},
      decltype(_impl_.modelid_){},
      decltype(_impl_.model_){nullptr},
      decltype(_impl_.solvetype_){0},
  };
  _impl_.modelid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.modelid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
SolveRequest::~SolveRequest() {
  // @@protoc_insertion_point(destructor:NVD.SolveRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SolveRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.routes_.~RepeatedPtrField();
  _impl_.modelid_.Destroy();
  if (this != internal_default_instance()) delete _impl_.model_;
}
void SolveRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SolveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:NVD.SolveRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_routes()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.modelid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.model_ != nullptr);
      _impl_.model_->Clear();
    }
  }
  _impl_.solvetype_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SolveRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 3, 32, 2> SolveRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SolveRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SolveRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .NVD.SolveRequest.SolveType solveType = 4 [default = Optimise];
    {::_pbi::TcParser::FastEr0S1,
     {32, 2, 2, PROTOBUF_FIELD_OFFSET(SolveRequest, _impl_.solvetype_)}},
    // optional .NVD.Model model = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 1, 0, PROTOBUF_FIELD_OFFSET(SolveRequest, _impl_.model_)}},
    // optional string modelID = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(SolveRequest, _impl_.modelid_)}},
    // repeated .NVD.VisitSequence routes = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(SolveRequest, _impl_.routes_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .NVD.Model model = 1;
    {PROTOBUF_FIELD_OFFSET(SolveRequest, _impl_.model_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string modelID = 2;
    {PROTOBUF_FIELD_OFFSET(SolveRequest, _impl_.modelid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated .NVD.VisitSequence routes = 3;
    {PROTOBUF_FIELD_OFFSET(SolveRequest, _impl_.routes_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .NVD.SolveRequest.SolveType solveType = 4 [default = Optimise];
    {PROTOBUF_FIELD_OFFSET(SolveRequest, _impl_.solvetype_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
  }}, {{
    {::_pbi::TcParser::GetTable<::NVD::Model>()},
    {::_pbi::TcParser::GetTable<::NVD::VisitSequence>()},
    {0, 3},
  }}, {{
    "\20\0\7\0\0\0\0\0"
    "NVD.SolveRequest"
    "modelID"
  }},
};

::uint8_t* SolveRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NVD.SolveRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .NVD.Model model = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::model(this),
        _Internal::model(this).GetCachedSize(), target, stream);
  }

  // optional string modelID = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_modelid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "NVD.SolveRequest.modelID");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // repeated .NVD.VisitSequence routes = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_routes_size()); i < n; i++) {
    const auto& repfield = this->_internal_routes().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional .NVD.SolveRequest.SolveType solveType = 4 [default = Optimise];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_solvetype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NVD.SolveRequest)
  return target;
}

::size_t SolveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NVD.SolveRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .NVD.VisitSequence routes = 3;
  total_size += 1UL * this->_internal_routes_size();
  for (const auto& msg : this->_internal_routes()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string modelID = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_modelid());
    }

    // optional .NVD.Model model = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.model_);
    }

    // optional .NVD.SolveRequest.SolveType solveType = 4 [default = Optimise];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_solvetype());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SolveRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SolveRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*SolveRequest::GetClassData() const { return &_class_data_; }


void SolveRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SolveRequest*>(&to_msg);
  auto& from = static_cast<const SolveRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NVD.SolveRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_routes()->MergeFrom(from._internal_routes());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_modelid(from._internal_modelid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_model()->::NVD::Model::MergeFrom(
          from._internal_model());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.solvetype_ = from._impl_.solvetype_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SolveRequest::CopyFrom(const SolveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NVD.SolveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SolveRequest::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(_internal_routes()))
    return false;
  if ((_impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!_impl_.model_->IsInitialized()) return false;
  }
  return true;
}

void SolveRequest::InternalSwap(SolveRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.routes_.InternalSwap(&other->_impl_.routes_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.modelid_, lhs_arena,
                                       &other->_impl_.modelid_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SolveRequest, _impl_.solvetype_)
      + sizeof(SolveRequest::_impl_.solvetype_)
      - PROTOBUF_FIELD_OFFSET(SolveRequest, _impl_.model_)>(
          reinterpret_cast<char*>(&_impl_.model_),
          reinterpret_cast<char*>(&other->_impl_.model_));
}

::google::protobuf::Metadata SolveRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_getter, &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_once,
      file_level_metadata_nvd_2dhap0j2y4zlm1_2eproto[9]);
}
// ===================================================================

class SolutionResponse_StopAttribute::_Internal {
 public:
  using HasBits = decltype(std::declval<SolutionResponse_StopAttribute>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SolutionResponse_StopAttribute, _impl_._has_bits_);
  static void set_has_dimid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_startvalue(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_endvalue(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_cost(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_slackvalue(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_slackcost(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_tardyvalue(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_tardycost(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x000000ff) ^ 0x000000ff) != 0;
  }
};

SolutionResponse_StopAttribute::SolutionResponse_StopAttribute(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NVD.SolutionResponse.StopAttribute)
}
SolutionResponse_StopAttribute::SolutionResponse_StopAttribute(const SolutionResponse_StopAttribute& from) : ::google::protobuf::Message() {
  SolutionResponse_StopAttribute* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.dimid_){},
      decltype(_impl_.startvalue_){},
      decltype(_impl_.endvalue_){},
      decltype(_impl_.cost_){},
      decltype(_impl_.slackvalue_){},
      decltype(_impl_.slackcost_){},
      decltype(_impl_.tardyvalue_){},
      decltype(_impl_.tardycost_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.dimid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dimid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.dimid_.Set(from._internal_dimid(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.startvalue_, &from._impl_.startvalue_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.tardycost_) -
    reinterpret_cast<char*>(&_impl_.startvalue_)) + sizeof(_impl_.tardycost_));

  // @@protoc_insertion_point(copy_constructor:NVD.SolutionResponse.StopAttribute)
}
inline void SolutionResponse_StopAttribute::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.dimid_){},
      decltype(_impl_.startvalue_){0},
      decltype(_impl_.endvalue_){0},
      decltype(_impl_.cost_){0},
      decltype(_impl_.slackvalue_){0},
      decltype(_impl_.slackcost_){0},
      decltype(_impl_.tardyvalue_){0},
      decltype(_impl_.tardycost_){0},
  };
  _impl_.dimid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dimid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
SolutionResponse_StopAttribute::~SolutionResponse_StopAttribute() {
  // @@protoc_insertion_point(destructor:NVD.SolutionResponse.StopAttribute)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SolutionResponse_StopAttribute::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.dimid_.Destroy();
}
void SolutionResponse_StopAttribute::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SolutionResponse_StopAttribute::Clear() {
// @@protoc_insertion_point(message_clear_start:NVD.SolutionResponse.StopAttribute)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.dimid_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x000000feu) {
    ::memset(&_impl_.startvalue_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.tardycost_) -
        reinterpret_cast<char*>(&_impl_.startvalue_)) + sizeof(_impl_.tardycost_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SolutionResponse_StopAttribute::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 56, 2> SolutionResponse_StopAttribute::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SolutionResponse_StopAttribute, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SolutionResponse_StopAttribute_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required float tardyCost = 8;
    {::_pbi::TcParser::FastF32S1,
     {69, 7, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_StopAttribute, _impl_.tardycost_)}},
    // required string dimId = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_StopAttribute, _impl_.dimid_)}},
    // required float startValue = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_StopAttribute, _impl_.startvalue_)}},
    // required float endValue = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_StopAttribute, _impl_.endvalue_)}},
    // required float cost = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 3, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_StopAttribute, _impl_.cost_)}},
    // required float slackValue = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 4, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_StopAttribute, _impl_.slackvalue_)}},
    // required float slackCost = 6;
    {::_pbi::TcParser::FastF32S1,
     {53, 5, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_StopAttribute, _impl_.slackcost_)}},
    // required float tardyValue = 7;
    {::_pbi::TcParser::FastF32S1,
     {61, 6, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_StopAttribute, _impl_.tardyvalue_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string dimId = 1;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_StopAttribute, _impl_.dimid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required float startValue = 2;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_StopAttribute, _impl_.startvalue_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float endValue = 3;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_StopAttribute, _impl_.endvalue_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float cost = 4;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_StopAttribute, _impl_.cost_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float slackValue = 5;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_StopAttribute, _impl_.slackvalue_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float slackCost = 6;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_StopAttribute, _impl_.slackcost_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float tardyValue = 7;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_StopAttribute, _impl_.tardyvalue_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float tardyCost = 8;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_StopAttribute, _impl_.tardycost_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
    "\42\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "NVD.SolutionResponse.StopAttribute"
    "dimId"
  }},
};

::uint8_t* SolutionResponse_StopAttribute::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NVD.SolutionResponse.StopAttribute)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string dimId = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_dimid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "NVD.SolutionResponse.StopAttribute.dimId");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required float startValue = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_startvalue(), target);
  }

  // required float endValue = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_endvalue(), target);
  }

  // required float cost = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_cost(), target);
  }

  // required float slackValue = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this->_internal_slackvalue(), target);
  }

  // required float slackCost = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        6, this->_internal_slackcost(), target);
  }

  // required float tardyValue = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        7, this->_internal_tardyvalue(), target);
  }

  // required float tardyCost = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        8, this->_internal_tardycost(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NVD.SolutionResponse.StopAttribute)
  return target;
}

::size_t SolutionResponse_StopAttribute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NVD.SolutionResponse.StopAttribute)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // required string dimId = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_dimid());
    }

    // required float startValue = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 5;
    }

    // required float endValue = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 5;
    }

    // required float cost = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 5;
    }

    // required float slackValue = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 5;
    }

    // required float slackCost = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 5;
    }

    // required float tardyValue = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 5;
    }

    // required float tardyCost = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 5;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SolutionResponse_StopAttribute::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SolutionResponse_StopAttribute::MergeImpl
};
const ::google::protobuf::Message::ClassData*SolutionResponse_StopAttribute::GetClassData() const { return &_class_data_; }


void SolutionResponse_StopAttribute::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SolutionResponse_StopAttribute*>(&to_msg);
  auto& from = static_cast<const SolutionResponse_StopAttribute&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NVD.SolutionResponse.StopAttribute)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_dimid(from._internal_dimid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.startvalue_ = from._impl_.startvalue_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.endvalue_ = from._impl_.endvalue_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.cost_ = from._impl_.cost_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.slackvalue_ = from._impl_.slackvalue_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.slackcost_ = from._impl_.slackcost_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.tardyvalue_ = from._impl_.tardyvalue_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.tardycost_ = from._impl_.tardycost_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SolutionResponse_StopAttribute::CopyFrom(const SolutionResponse_StopAttribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NVD.SolutionResponse.StopAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SolutionResponse_StopAttribute::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

void SolutionResponse_StopAttribute::InternalSwap(SolutionResponse_StopAttribute* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dimid_, lhs_arena,
                                       &other->_impl_.dimid_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SolutionResponse_StopAttribute, _impl_.tardycost_)
      + sizeof(SolutionResponse_StopAttribute::_impl_.tardycost_)
      - PROTOBUF_FIELD_OFFSET(SolutionResponse_StopAttribute, _impl_.startvalue_)>(
          reinterpret_cast<char*>(&_impl_.startvalue_),
          reinterpret_cast<char*>(&other->_impl_.startvalue_));
}

::google::protobuf::Metadata SolutionResponse_StopAttribute::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_getter, &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_once,
      file_level_metadata_nvd_2dhap0j2y4zlm1_2eproto[10]);
}
// ===================================================================

class SolutionResponse_InterStopAttribute::_Internal {
 public:
  using HasBits = decltype(std::declval<SolutionResponse_InterStopAttribute>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStopAttribute, _impl_._has_bits_);
  static void set_has_dimid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_startvalue(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_endvalue(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_cost(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000000f) ^ 0x0000000f) != 0;
  }
};

SolutionResponse_InterStopAttribute::SolutionResponse_InterStopAttribute(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NVD.SolutionResponse.InterStopAttribute)
}
SolutionResponse_InterStopAttribute::SolutionResponse_InterStopAttribute(const SolutionResponse_InterStopAttribute& from) : ::google::protobuf::Message() {
  SolutionResponse_InterStopAttribute* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.dimid_){},
      decltype(_impl_.startvalue_){},
      decltype(_impl_.endvalue_){},
      decltype(_impl_.cost_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.dimid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dimid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.dimid_.Set(from._internal_dimid(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.startvalue_, &from._impl_.startvalue_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.cost_) -
    reinterpret_cast<char*>(&_impl_.startvalue_)) + sizeof(_impl_.cost_));

  // @@protoc_insertion_point(copy_constructor:NVD.SolutionResponse.InterStopAttribute)
}
inline void SolutionResponse_InterStopAttribute::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.dimid_){},
      decltype(_impl_.startvalue_){0},
      decltype(_impl_.endvalue_){0},
      decltype(_impl_.cost_){0},
  };
  _impl_.dimid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dimid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
SolutionResponse_InterStopAttribute::~SolutionResponse_InterStopAttribute() {
  // @@protoc_insertion_point(destructor:NVD.SolutionResponse.InterStopAttribute)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SolutionResponse_InterStopAttribute::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.dimid_.Destroy();
}
void SolutionResponse_InterStopAttribute::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SolutionResponse_InterStopAttribute::Clear() {
// @@protoc_insertion_point(message_clear_start:NVD.SolutionResponse.InterStopAttribute)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.dimid_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&_impl_.startvalue_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.cost_) -
        reinterpret_cast<char*>(&_impl_.startvalue_)) + sizeof(_impl_.cost_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SolutionResponse_InterStopAttribute::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 53, 2> SolutionResponse_InterStopAttribute::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStopAttribute, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SolutionResponse_InterStopAttribute_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required float cost = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 3, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStopAttribute, _impl_.cost_)}},
    // required string dimId = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStopAttribute, _impl_.dimid_)}},
    // required float startValue = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStopAttribute, _impl_.startvalue_)}},
    // required float endValue = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStopAttribute, _impl_.endvalue_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string dimId = 1;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStopAttribute, _impl_.dimid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required float startValue = 2;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStopAttribute, _impl_.startvalue_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float endValue = 3;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStopAttribute, _impl_.endvalue_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float cost = 4;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStopAttribute, _impl_.cost_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
    "\47\5\0\0\0\0\0\0"
    "NVD.SolutionResponse.InterStopAttribute"
    "dimId"
  }},
};

::uint8_t* SolutionResponse_InterStopAttribute::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NVD.SolutionResponse.InterStopAttribute)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string dimId = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_dimid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "NVD.SolutionResponse.InterStopAttribute.dimId");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required float startValue = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_startvalue(), target);
  }

  // required float endValue = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_endvalue(), target);
  }

  // required float cost = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_cost(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NVD.SolutionResponse.InterStopAttribute)
  return target;
}

::size_t SolutionResponse_InterStopAttribute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NVD.SolutionResponse.InterStopAttribute)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // required string dimId = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_dimid());
    }

    // required float startValue = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 5;
    }

    // required float endValue = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 5;
    }

    // required float cost = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 5;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SolutionResponse_InterStopAttribute::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SolutionResponse_InterStopAttribute::MergeImpl
};
const ::google::protobuf::Message::ClassData*SolutionResponse_InterStopAttribute::GetClassData() const { return &_class_data_; }


void SolutionResponse_InterStopAttribute::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SolutionResponse_InterStopAttribute*>(&to_msg);
  auto& from = static_cast<const SolutionResponse_InterStopAttribute&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NVD.SolutionResponse.InterStopAttribute)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_dimid(from._internal_dimid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.startvalue_ = from._impl_.startvalue_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.endvalue_ = from._impl_.endvalue_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.cost_ = from._impl_.cost_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SolutionResponse_InterStopAttribute::CopyFrom(const SolutionResponse_InterStopAttribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NVD.SolutionResponse.InterStopAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SolutionResponse_InterStopAttribute::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

void SolutionResponse_InterStopAttribute::InternalSwap(SolutionResponse_InterStopAttribute* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dimid_, lhs_arena,
                                       &other->_impl_.dimid_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStopAttribute, _impl_.cost_)
      + sizeof(SolutionResponse_InterStopAttribute::_impl_.cost_)
      - PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStopAttribute, _impl_.startvalue_)>(
          reinterpret_cast<char*>(&_impl_.startvalue_),
          reinterpret_cast<char*>(&other->_impl_.startvalue_));
}

::google::protobuf::Metadata SolutionResponse_InterStopAttribute::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_getter, &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_once,
      file_level_metadata_nvd_2dhap0j2y4zlm1_2eproto[11]);
}
// ===================================================================

class SolutionResponse_Stop::_Internal {
 public:
  using HasBits = decltype(std::declval<SolutionResponse_Stop>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SolutionResponse_Stop, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_sequence(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_locationid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_visitid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000000f) ^ 0x0000000f) != 0;
  }
};

SolutionResponse_Stop::SolutionResponse_Stop(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NVD.SolutionResponse.Stop)
}
SolutionResponse_Stop::SolutionResponse_Stop(const SolutionResponse_Stop& from) : ::google::protobuf::Message() {
  SolutionResponse_Stop* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.attributes_){from._impl_.attributes_},
      decltype(_impl_.locationid_){},
      decltype(_impl_.visitid_){},
      decltype(_impl_.id_){},
      decltype(_impl_.sequence_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.locationid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.locationid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.locationid_.Set(from._internal_locationid(), _this->GetArenaForAllocation());
  }
  _impl_.visitid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.visitid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.visitid_.Set(from._internal_visitid(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.id_, &from._impl_.id_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.sequence_) -
    reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.sequence_));

  // @@protoc_insertion_point(copy_constructor:NVD.SolutionResponse.Stop)
}
inline void SolutionResponse_Stop::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.attributes_){arena},
      decltype(_impl_.locationid_){},
      decltype(_impl_.visitid_){},
      decltype(_impl_.id_){0},
      decltype(_impl_.sequence_){0},
  };
  _impl_.locationid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.locationid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.visitid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.visitid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
SolutionResponse_Stop::~SolutionResponse_Stop() {
  // @@protoc_insertion_point(destructor:NVD.SolutionResponse.Stop)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SolutionResponse_Stop::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.attributes_.~RepeatedPtrField();
  _impl_.locationid_.Destroy();
  _impl_.visitid_.Destroy();
}
void SolutionResponse_Stop::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SolutionResponse_Stop::Clear() {
// @@protoc_insertion_point(message_clear_start:NVD.SolutionResponse.Stop)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_attributes()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.locationid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.visitid_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000000cu) {
    ::memset(&_impl_.id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.sequence_) -
        reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.sequence_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SolutionResponse_Stop::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 51, 2> SolutionResponse_Stop::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SolutionResponse_Stop, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SolutionResponse_Stop_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required int32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SolutionResponse_Stop, _impl_.id_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_Stop, _impl_.id_)}},
    // required int32 sequence = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SolutionResponse_Stop, _impl_.sequence_), 3>(),
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_Stop, _impl_.sequence_)}},
    // required string locationId = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_Stop, _impl_.locationid_)}},
    // required string visitId = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_Stop, _impl_.visitid_)}},
    // repeated .NVD.SolutionResponse.StopAttribute attributes = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_Stop, _impl_.attributes_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_Stop, _impl_.id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required int32 sequence = 2;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_Stop, _impl_.sequence_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required string locationId = 3;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_Stop, _impl_.locationid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string visitId = 4;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_Stop, _impl_.visitid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated .NVD.SolutionResponse.StopAttribute attributes = 5;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_Stop, _impl_.attributes_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::NVD::SolutionResponse_StopAttribute>()},
  }}, {{
    "\31\0\0\12\7\0\0\0"
    "NVD.SolutionResponse.Stop"
    "locationId"
    "visitId"
  }},
};

::uint8_t* SolutionResponse_Stop::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NVD.SolutionResponse.Stop)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  // required int32 sequence = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_sequence(), target);
  }

  // required string locationId = 3;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_locationid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "NVD.SolutionResponse.Stop.locationId");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // required string visitId = 4;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_visitid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "NVD.SolutionResponse.Stop.visitId");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // repeated .NVD.SolutionResponse.StopAttribute attributes = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_attributes_size()); i < n; i++) {
    const auto& repfield = this->_internal_attributes().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NVD.SolutionResponse.Stop)
  return target;
}

::size_t SolutionResponse_Stop::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NVD.SolutionResponse.Stop)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .NVD.SolutionResponse.StopAttribute attributes = 5;
  total_size += 1UL * this->_internal_attributes_size();
  for (const auto& msg : this->_internal_attributes()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // required string locationId = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_locationid());
    }

    // required string visitId = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_visitid());
    }

    // required int32 id = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_id());
    }

    // required int32 sequence = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_sequence());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SolutionResponse_Stop::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SolutionResponse_Stop::MergeImpl
};
const ::google::protobuf::Message::ClassData*SolutionResponse_Stop::GetClassData() const { return &_class_data_; }


void SolutionResponse_Stop::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SolutionResponse_Stop*>(&to_msg);
  auto& from = static_cast<const SolutionResponse_Stop&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NVD.SolutionResponse.Stop)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_attributes()->MergeFrom(from._internal_attributes());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_locationid(from._internal_locationid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_visitid(from._internal_visitid());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.id_ = from._impl_.id_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.sequence_ = from._impl_.sequence_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SolutionResponse_Stop::CopyFrom(const SolutionResponse_Stop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NVD.SolutionResponse.Stop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SolutionResponse_Stop::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(_internal_attributes()))
    return false;
  return true;
}

void SolutionResponse_Stop::InternalSwap(SolutionResponse_Stop* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.attributes_.InternalSwap(&other->_impl_.attributes_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.locationid_, lhs_arena,
                                       &other->_impl_.locationid_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.visitid_, lhs_arena,
                                       &other->_impl_.visitid_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SolutionResponse_Stop, _impl_.sequence_)
      + sizeof(SolutionResponse_Stop::_impl_.sequence_)
      - PROTOBUF_FIELD_OFFSET(SolutionResponse_Stop, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata SolutionResponse_Stop::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_getter, &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_once,
      file_level_metadata_nvd_2dhap0j2y4zlm1_2eproto[12]);
}
// ===================================================================

class SolutionResponse_InterStop::_Internal {
 public:
  using HasBits = decltype(std::declval<SolutionResponse_InterStop>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStop, _impl_._has_bits_);
  static void set_has_fromstopid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_tostopid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

SolutionResponse_InterStop::SolutionResponse_InterStop(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NVD.SolutionResponse.InterStop)
}
SolutionResponse_InterStop::SolutionResponse_InterStop(const SolutionResponse_InterStop& from) : ::google::protobuf::Message() {
  SolutionResponse_InterStop* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.attributes_){from._impl_.attributes_},
      decltype(_impl_.routesegments_){from._impl_.routesegments_},
      decltype(_impl_.fromstopid_){},
      decltype(_impl_.tostopid_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  ::memcpy(&_impl_.fromstopid_, &from._impl_.fromstopid_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.tostopid_) -
    reinterpret_cast<char*>(&_impl_.fromstopid_)) + sizeof(_impl_.tostopid_));

  // @@protoc_insertion_point(copy_constructor:NVD.SolutionResponse.InterStop)
}
inline void SolutionResponse_InterStop::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.attributes_){arena},
      decltype(_impl_.routesegments_){arena},
      decltype(_impl_.fromstopid_){0},
      decltype(_impl_.tostopid_){0},
  };
}
SolutionResponse_InterStop::~SolutionResponse_InterStop() {
  // @@protoc_insertion_point(destructor:NVD.SolutionResponse.InterStop)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SolutionResponse_InterStop::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.attributes_.~RepeatedPtrField();
  _impl_.routesegments_.~RepeatedPtrField();
}
void SolutionResponse_InterStop::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SolutionResponse_InterStop::Clear() {
// @@protoc_insertion_point(message_clear_start:NVD.SolutionResponse.InterStop)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_attributes()->Clear();
  _internal_mutable_routesegments()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.fromstopid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.tostopid_) -
        reinterpret_cast<char*>(&_impl_.fromstopid_)) + sizeof(_impl_.tostopid_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SolutionResponse_InterStop::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 0, 2> SolutionResponse_InterStop::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStop, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SolutionResponse_InterStop_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .NVD.Geocode routeSegments = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 1, PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStop, _impl_.routesegments_)}},
    // required int32 fromStopId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SolutionResponse_InterStop, _impl_.fromstopid_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStop, _impl_.fromstopid_)}},
    // required int32 toStopId = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SolutionResponse_InterStop, _impl_.tostopid_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStop, _impl_.tostopid_)}},
    // repeated .NVD.SolutionResponse.InterStopAttribute attributes = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStop, _impl_.attributes_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required int32 fromStopId = 1;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStop, _impl_.fromstopid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required int32 toStopId = 2;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStop, _impl_.tostopid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated .NVD.SolutionResponse.InterStopAttribute attributes = 3;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStop, _impl_.attributes_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .NVD.Geocode routeSegments = 4;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStop, _impl_.routesegments_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::NVD::SolutionResponse_InterStopAttribute>()},
    {::_pbi::TcParser::GetTable<::NVD::Geocode>()},
  }}, {{
  }},
};

::uint8_t* SolutionResponse_InterStop::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NVD.SolutionResponse.InterStop)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int32 fromStopId = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_fromstopid(), target);
  }

  // required int32 toStopId = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_tostopid(), target);
  }

  // repeated .NVD.SolutionResponse.InterStopAttribute attributes = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_attributes_size()); i < n; i++) {
    const auto& repfield = this->_internal_attributes().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .NVD.Geocode routeSegments = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_routesegments_size()); i < n; i++) {
    const auto& repfield = this->_internal_routesegments().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NVD.SolutionResponse.InterStop)
  return target;
}

::size_t SolutionResponse_InterStop::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NVD.SolutionResponse.InterStop)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .NVD.SolutionResponse.InterStopAttribute attributes = 3;
  total_size += 1UL * this->_internal_attributes_size();
  for (const auto& msg : this->_internal_attributes()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .NVD.Geocode routeSegments = 4;
  total_size += 1UL * this->_internal_routesegments_size();
  for (const auto& msg : this->_internal_routesegments()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required int32 fromStopId = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_fromstopid());
    }

    // required int32 toStopId = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_tostopid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SolutionResponse_InterStop::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SolutionResponse_InterStop::MergeImpl
};
const ::google::protobuf::Message::ClassData*SolutionResponse_InterStop::GetClassData() const { return &_class_data_; }


void SolutionResponse_InterStop::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SolutionResponse_InterStop*>(&to_msg);
  auto& from = static_cast<const SolutionResponse_InterStop&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NVD.SolutionResponse.InterStop)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_attributes()->MergeFrom(from._internal_attributes());
  _this->_internal_mutable_routesegments()->MergeFrom(from._internal_routesegments());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.fromstopid_ = from._impl_.fromstopid_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.tostopid_ = from._impl_.tostopid_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SolutionResponse_InterStop::CopyFrom(const SolutionResponse_InterStop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NVD.SolutionResponse.InterStop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SolutionResponse_InterStop::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(_internal_attributes()))
    return false;
  if (!::google::protobuf::internal::AllAreInitialized(_internal_routesegments()))
    return false;
  return true;
}

void SolutionResponse_InterStop::InternalSwap(SolutionResponse_InterStop* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.attributes_.InternalSwap(&other->_impl_.attributes_);
  _impl_.routesegments_.InternalSwap(&other->_impl_.routesegments_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStop, _impl_.tostopid_)
      + sizeof(SolutionResponse_InterStop::_impl_.tostopid_)
      - PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStop, _impl_.fromstopid_)>(
          reinterpret_cast<char*>(&_impl_.fromstopid_),
          reinterpret_cast<char*>(&other->_impl_.fromstopid_));
}

::google::protobuf::Metadata SolutionResponse_InterStop::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_getter, &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_once,
      file_level_metadata_nvd_2dhap0j2y4zlm1_2eproto[13]);
}
// ===================================================================

class SolutionResponse_TransitRuleAttribute::_Internal {
 public:
  using HasBits = decltype(std::declval<SolutionResponse_TransitRuleAttribute>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SolutionResponse_TransitRuleAttribute, _impl_._has_bits_);
  static void set_has_ruleid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_dimid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_fromstopid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_tostopid(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_startvalue(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_endvalue(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_cost(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000007f) ^ 0x0000007f) != 0;
  }
};

SolutionResponse_TransitRuleAttribute::SolutionResponse_TransitRuleAttribute(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NVD.SolutionResponse.TransitRuleAttribute)
}
SolutionResponse_TransitRuleAttribute::SolutionResponse_TransitRuleAttribute(const SolutionResponse_TransitRuleAttribute& from) : ::google::protobuf::Message() {
  SolutionResponse_TransitRuleAttribute* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.ruleid_){},
      decltype(_impl_.dimid_){},
      decltype(_impl_.fromstopid_){},
      decltype(_impl_.tostopid_){},
      decltype(_impl_.startvalue_){},
      decltype(_impl_.endvalue_){},
      decltype(_impl_.cost_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.ruleid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.ruleid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.ruleid_.Set(from._internal_ruleid(), _this->GetArenaForAllocation());
  }
  _impl_.dimid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dimid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.dimid_.Set(from._internal_dimid(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.fromstopid_, &from._impl_.fromstopid_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.cost_) -
    reinterpret_cast<char*>(&_impl_.fromstopid_)) + sizeof(_impl_.cost_));

  // @@protoc_insertion_point(copy_constructor:NVD.SolutionResponse.TransitRuleAttribute)
}
inline void SolutionResponse_TransitRuleAttribute::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.ruleid_){},
      decltype(_impl_.dimid_){},
      decltype(_impl_.fromstopid_){0},
      decltype(_impl_.tostopid_){0},
      decltype(_impl_.startvalue_){0},
      decltype(_impl_.endvalue_){0},
      decltype(_impl_.cost_){0},
  };
  _impl_.ruleid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.ruleid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.dimid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dimid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
SolutionResponse_TransitRuleAttribute::~SolutionResponse_TransitRuleAttribute() {
  // @@protoc_insertion_point(destructor:NVD.SolutionResponse.TransitRuleAttribute)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SolutionResponse_TransitRuleAttribute::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.ruleid_.Destroy();
  _impl_.dimid_.Destroy();
}
void SolutionResponse_TransitRuleAttribute::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SolutionResponse_TransitRuleAttribute::Clear() {
// @@protoc_insertion_point(message_clear_start:NVD.SolutionResponse.TransitRuleAttribute)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.ruleid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.dimid_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000007cu) {
    ::memset(&_impl_.fromstopid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.cost_) -
        reinterpret_cast<char*>(&_impl_.fromstopid_)) + sizeof(_impl_.cost_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SolutionResponse_TransitRuleAttribute::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 61, 2> SolutionResponse_TransitRuleAttribute::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SolutionResponse_TransitRuleAttribute, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SolutionResponse_TransitRuleAttribute_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string ruleId = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_TransitRuleAttribute, _impl_.ruleid_)}},
    // required string dimId = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_TransitRuleAttribute, _impl_.dimid_)}},
    // required int32 fromStopId = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SolutionResponse_TransitRuleAttribute, _impl_.fromstopid_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_TransitRuleAttribute, _impl_.fromstopid_)}},
    // required int32 toStopId = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SolutionResponse_TransitRuleAttribute, _impl_.tostopid_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_TransitRuleAttribute, _impl_.tostopid_)}},
    // required float startValue = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 4, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_TransitRuleAttribute, _impl_.startvalue_)}},
    // required float endValue = 6;
    {::_pbi::TcParser::FastF32S1,
     {53, 5, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_TransitRuleAttribute, _impl_.endvalue_)}},
    // required float cost = 7;
    {::_pbi::TcParser::FastF32S1,
     {61, 6, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_TransitRuleAttribute, _impl_.cost_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string ruleId = 1;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_TransitRuleAttribute, _impl_.ruleid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string dimId = 2;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_TransitRuleAttribute, _impl_.dimid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required int32 fromStopId = 3;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_TransitRuleAttribute, _impl_.fromstopid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required int32 toStopId = 4;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_TransitRuleAttribute, _impl_.tostopid_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required float startValue = 5;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_TransitRuleAttribute, _impl_.startvalue_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float endValue = 6;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_TransitRuleAttribute, _impl_.endvalue_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float cost = 7;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_TransitRuleAttribute, _impl_.cost_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
    "\51\6\5\0\0\0\0\0"
    "NVD.SolutionResponse.TransitRuleAttribute"
    "ruleId"
    "dimId"
  }},
};

::uint8_t* SolutionResponse_TransitRuleAttribute::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NVD.SolutionResponse.TransitRuleAttribute)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string ruleId = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_ruleid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "NVD.SolutionResponse.TransitRuleAttribute.ruleId");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required string dimId = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_dimid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "NVD.SolutionResponse.TransitRuleAttribute.dimId");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // required int32 fromStopId = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_fromstopid(), target);
  }

  // required int32 toStopId = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_tostopid(), target);
  }

  // required float startValue = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this->_internal_startvalue(), target);
  }

  // required float endValue = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        6, this->_internal_endvalue(), target);
  }

  // required float cost = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        7, this->_internal_cost(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NVD.SolutionResponse.TransitRuleAttribute)
  return target;
}

::size_t SolutionResponse_TransitRuleAttribute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NVD.SolutionResponse.TransitRuleAttribute)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // required string ruleId = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_ruleid());
    }

    // required string dimId = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_dimid());
    }

    // required int32 fromStopId = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_fromstopid());
    }

    // required int32 toStopId = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_tostopid());
    }

    // required float startValue = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 5;
    }

    // required float endValue = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 5;
    }

    // required float cost = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 5;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SolutionResponse_TransitRuleAttribute::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SolutionResponse_TransitRuleAttribute::MergeImpl
};
const ::google::protobuf::Message::ClassData*SolutionResponse_TransitRuleAttribute::GetClassData() const { return &_class_data_; }


void SolutionResponse_TransitRuleAttribute::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SolutionResponse_TransitRuleAttribute*>(&to_msg);
  auto& from = static_cast<const SolutionResponse_TransitRuleAttribute&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NVD.SolutionResponse.TransitRuleAttribute)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_ruleid(from._internal_ruleid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_dimid(from._internal_dimid());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.fromstopid_ = from._impl_.fromstopid_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.tostopid_ = from._impl_.tostopid_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.startvalue_ = from._impl_.startvalue_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.endvalue_ = from._impl_.endvalue_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.cost_ = from._impl_.cost_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SolutionResponse_TransitRuleAttribute::CopyFrom(const SolutionResponse_TransitRuleAttribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NVD.SolutionResponse.TransitRuleAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SolutionResponse_TransitRuleAttribute::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

void SolutionResponse_TransitRuleAttribute::InternalSwap(SolutionResponse_TransitRuleAttribute* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ruleid_, lhs_arena,
                                       &other->_impl_.ruleid_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dimid_, lhs_arena,
                                       &other->_impl_.dimid_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SolutionResponse_TransitRuleAttribute, _impl_.cost_)
      + sizeof(SolutionResponse_TransitRuleAttribute::_impl_.cost_)
      - PROTOBUF_FIELD_OFFSET(SolutionResponse_TransitRuleAttribute, _impl_.fromstopid_)>(
          reinterpret_cast<char*>(&_impl_.fromstopid_),
          reinterpret_cast<char*>(&other->_impl_.fromstopid_));
}

::google::protobuf::Metadata SolutionResponse_TransitRuleAttribute::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_getter, &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_once,
      file_level_metadata_nvd_2dhap0j2y4zlm1_2eproto[14]);
}
// ===================================================================

class SolutionResponse_Route::_Internal {
 public:
  using HasBits = decltype(std::declval<SolutionResponse_Route>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SolutionResponse_Route, _impl_._has_bits_);
  static void set_has_vehicleid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_day(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

SolutionResponse_Route::SolutionResponse_Route(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NVD.SolutionResponse.Route)
}
SolutionResponse_Route::SolutionResponse_Route(const SolutionResponse_Route& from) : ::google::protobuf::Message() {
  SolutionResponse_Route* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.stops_){from._impl_.stops_},
      decltype(_impl_.interstops_){from._impl_.interstops_},
      decltype(_impl_.fixedcost_){from._impl_.fixedcost_},
      decltype(_impl_.transitruleattributes_){from._impl_.transitruleattributes_},
      decltype(_impl_.vehicleid_){},
      decltype(_impl_.day_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.vehicleid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.vehicleid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.vehicleid_.Set(from._internal_vehicleid(), _this->GetArenaForAllocation());
  }
  _this->_impl_.day_ = from._impl_.day_;

  // @@protoc_insertion_point(copy_constructor:NVD.SolutionResponse.Route)
}
inline void SolutionResponse_Route::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.stops_){arena},
      decltype(_impl_.interstops_){arena},
      decltype(_impl_.fixedcost_){arena},
      decltype(_impl_.transitruleattributes_){arena},
      decltype(_impl_.vehicleid_){},
      decltype(_impl_.day_){0},
  };
  _impl_.vehicleid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.vehicleid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
SolutionResponse_Route::~SolutionResponse_Route() {
  // @@protoc_insertion_point(destructor:NVD.SolutionResponse.Route)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SolutionResponse_Route::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.stops_.~RepeatedPtrField();
  _impl_.interstops_.~RepeatedPtrField();
  _impl_.fixedcost_.~RepeatedField();
  _impl_.transitruleattributes_.~RepeatedPtrField();
  _impl_.vehicleid_.Destroy();
}
void SolutionResponse_Route::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SolutionResponse_Route::Clear() {
// @@protoc_insertion_point(message_clear_start:NVD.SolutionResponse.Route)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_stops()->Clear();
  _internal_mutable_interstops()->Clear();
  _internal_mutable_fixedcost()->Clear();
  _internal_mutable_transitruleattributes()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.vehicleid_.ClearNonDefaultToEmpty();
  }
  _impl_.day_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SolutionResponse_Route::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 3, 44, 2> SolutionResponse_Route::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SolutionResponse_Route, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SolutionResponse_Route_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string vehicleId = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_Route, _impl_.vehicleid_)}},
    // repeated .NVD.SolutionResponse.Stop stops = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_Route, _impl_.stops_)}},
    // repeated .NVD.SolutionResponse.InterStop interStops = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(SolutionResponse_Route, _impl_.interstops_)}},
    // repeated float fixedCost = 4;
    {::_pbi::TcParser::FastF32R1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_Route, _impl_.fixedcost_)}},
    // repeated .NVD.SolutionResponse.TransitRuleAttribute transitRuleAttributes = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 2, PROTOBUF_FIELD_OFFSET(SolutionResponse_Route, _impl_.transitruleattributes_)}},
    // required int32 day = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SolutionResponse_Route, _impl_.day_), 1>(),
     {48, 1, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_Route, _impl_.day_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required string vehicleId = 1;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_Route, _impl_.vehicleid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated .NVD.SolutionResponse.Stop stops = 2;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_Route, _impl_.stops_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .NVD.SolutionResponse.InterStop interStops = 3;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_Route, _impl_.interstops_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated float fixedCost = 4;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_Route, _impl_.fixedcost_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kFloat)},
    // repeated .NVD.SolutionResponse.TransitRuleAttribute transitRuleAttributes = 5;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_Route, _impl_.transitruleattributes_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // required int32 day = 6;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_Route, _impl_.day_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::NVD::SolutionResponse_Stop>()},
    {::_pbi::TcParser::GetTable<::NVD::SolutionResponse_InterStop>()},
    {::_pbi::TcParser::GetTable<::NVD::SolutionResponse_TransitRuleAttribute>()},
  }}, {{
    "\32\11\0\0\0\0\0\0"
    "NVD.SolutionResponse.Route"
    "vehicleId"
  }},
};

::uint8_t* SolutionResponse_Route::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NVD.SolutionResponse.Route)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string vehicleId = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_vehicleid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "NVD.SolutionResponse.Route.vehicleId");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .NVD.SolutionResponse.Stop stops = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_stops_size()); i < n; i++) {
    const auto& repfield = this->_internal_stops().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .NVD.SolutionResponse.InterStop interStops = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_interstops_size()); i < n; i++) {
    const auto& repfield = this->_internal_interstops().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated float fixedCost = 4;
  for (int i = 0, n = this->_internal_fixedcost_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_fixedcost().Get(i), target);
  }

  // repeated .NVD.SolutionResponse.TransitRuleAttribute transitRuleAttributes = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_transitruleattributes_size()); i < n; i++) {
    const auto& repfield = this->_internal_transitruleattributes().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  // required int32 day = 6;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_day(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NVD.SolutionResponse.Route)
  return target;
}

::size_t SolutionResponse_Route::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NVD.SolutionResponse.Route)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .NVD.SolutionResponse.Stop stops = 2;
  total_size += 1UL * this->_internal_stops_size();
  for (const auto& msg : this->_internal_stops()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .NVD.SolutionResponse.InterStop interStops = 3;
  total_size += 1UL * this->_internal_interstops_size();
  for (const auto& msg : this->_internal_interstops()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated float fixedCost = 4;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_fixedcost_size())
    ;
    std::size_t tag_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_fixedcost_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated .NVD.SolutionResponse.TransitRuleAttribute transitRuleAttributes = 5;
  total_size += 1UL * this->_internal_transitruleattributes_size();
  for (const auto& msg : this->_internal_transitruleattributes()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required string vehicleId = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_vehicleid());
    }

    // required int32 day = 6;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_day());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SolutionResponse_Route::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SolutionResponse_Route::MergeImpl
};
const ::google::protobuf::Message::ClassData*SolutionResponse_Route::GetClassData() const { return &_class_data_; }


void SolutionResponse_Route::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SolutionResponse_Route*>(&to_msg);
  auto& from = static_cast<const SolutionResponse_Route&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NVD.SolutionResponse.Route)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_stops()->MergeFrom(from._internal_stops());
  _this->_internal_mutable_interstops()->MergeFrom(from._internal_interstops());
  _this->_internal_mutable_fixedcost()->MergeFrom(from._internal_fixedcost());
  _this->_internal_mutable_transitruleattributes()->MergeFrom(from._internal_transitruleattributes());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_vehicleid(from._internal_vehicleid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.day_ = from._impl_.day_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SolutionResponse_Route::CopyFrom(const SolutionResponse_Route& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NVD.SolutionResponse.Route)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SolutionResponse_Route::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(_internal_stops()))
    return false;
  if (!::google::protobuf::internal::AllAreInitialized(_internal_interstops()))
    return false;
  if (!::google::protobuf::internal::AllAreInitialized(_internal_transitruleattributes()))
    return false;
  return true;
}

void SolutionResponse_Route::InternalSwap(SolutionResponse_Route* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.stops_.InternalSwap(&other->_impl_.stops_);
  _impl_.interstops_.InternalSwap(&other->_impl_.interstops_);
  _impl_.fixedcost_.InternalSwap(&other->_impl_.fixedcost_);
  _impl_.transitruleattributes_.InternalSwap(&other->_impl_.transitruleattributes_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.vehicleid_, lhs_arena,
                                       &other->_impl_.vehicleid_, rhs_arena);
        swap(_impl_.day_, other->_impl_.day_);
}

::google::protobuf::Metadata SolutionResponse_Route::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_getter, &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_once,
      file_level_metadata_nvd_2dhap0j2y4zlm1_2eproto[15]);
}
// ===================================================================

class SolutionResponse_Infeasibility_Info::_Internal {
 public:
  using HasBits = decltype(std::declval<SolutionResponse_Infeasibility_Info>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility_Info, _impl_._has_bits_);
  static void set_has_message(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_dimid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_limit(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_count(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

SolutionResponse_Infeasibility_Info::SolutionResponse_Infeasibility_Info(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NVD.SolutionResponse.Infeasibility.Info)
}
SolutionResponse_Infeasibility_Info::SolutionResponse_Infeasibility_Info(const SolutionResponse_Infeasibility_Info& from) : ::google::protobuf::Message() {
  SolutionResponse_Infeasibility_Info* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.constrainingtaskids_){from._impl_.constrainingtaskids_},
      decltype(_impl_.message_){},
      decltype(_impl_.dimid_){},
      decltype(_impl_.limit_){},
      decltype(_impl_.value_){},
      decltype(_impl_.count_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.message_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.message_.Set(from._internal_message(), _this->GetArenaForAllocation());
  }
  _impl_.dimid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dimid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.dimid_.Set(from._internal_dimid(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.limit_, &from._impl_.limit_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.count_) -
    reinterpret_cast<char*>(&_impl_.limit_)) + sizeof(_impl_.count_));

  // @@protoc_insertion_point(copy_constructor:NVD.SolutionResponse.Infeasibility.Info)
}
inline void SolutionResponse_Infeasibility_Info::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.constrainingtaskids_){arena},
      decltype(_impl_.message_){},
      decltype(_impl_.dimid_){},
      decltype(_impl_.limit_){0},
      decltype(_impl_.value_){0},
      decltype(_impl_.count_){::int64_t{0}},
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.message_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.dimid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dimid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
SolutionResponse_Infeasibility_Info::~SolutionResponse_Infeasibility_Info() {
  // @@protoc_insertion_point(destructor:NVD.SolutionResponse.Infeasibility.Info)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SolutionResponse_Infeasibility_Info::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_constrainingtaskids()->~RepeatedPtrField();
  _impl_.message_.Destroy();
  _impl_.dimid_.Destroy();
}
void SolutionResponse_Infeasibility_Info::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SolutionResponse_Infeasibility_Info::Clear() {
// @@protoc_insertion_point(message_clear_start:NVD.SolutionResponse.Infeasibility.Info)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_constrainingtaskids()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.message_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.dimid_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&_impl_.limit_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.count_) -
        reinterpret_cast<char*>(&_impl_.limit_)) + sizeof(_impl_.count_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SolutionResponse_Infeasibility_Info::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 79, 2> SolutionResponse_Infeasibility_Info::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility_Info, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SolutionResponse_Infeasibility_Info_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string message = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility_Info, _impl_.message_)}},
    // optional string dimId = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility_Info, _impl_.dimid_)}},
    // optional float limit = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility_Info, _impl_.limit_)}},
    // optional float value = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 3, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility_Info, _impl_.value_)}},
    // optional int64 count = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SolutionResponse_Infeasibility_Info, _impl_.count_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility_Info, _impl_.count_)}},
    // repeated string constrainingTaskIds = 6;
    {::_pbi::TcParser::FastSR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility_Info, _impl_.constrainingtaskids_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required string message = 1;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility_Info, _impl_.message_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string dimId = 2;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility_Info, _impl_.dimid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional float limit = 3;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility_Info, _impl_.limit_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float value = 4;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility_Info, _impl_.value_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional int64 count = 5;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility_Info, _impl_.count_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // repeated string constrainingTaskIds = 6;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility_Info, _impl_.constrainingtaskids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\47\7\5\0\0\0\23\0"
    "NVD.SolutionResponse.Infeasibility.Info"
    "message"
    "dimId"
    "constrainingTaskIds"
  }},
};

::uint8_t* SolutionResponse_Infeasibility_Info::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NVD.SolutionResponse.Infeasibility.Info)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string message = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_message();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "NVD.SolutionResponse.Infeasibility.Info.message");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string dimId = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_dimid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "NVD.SolutionResponse.Infeasibility.Info.dimId");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional float limit = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_limit(), target);
  }

  // optional float value = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_value(), target);
  }

  // optional int64 count = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<5>(
            stream, this->_internal_count(), target);
  }

  // repeated string constrainingTaskIds = 6;
  for (int i = 0, n = this->_internal_constrainingtaskids_size(); i < n; ++i) {
    const auto& s = this->_internal_constrainingtaskids().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "NVD.SolutionResponse.Infeasibility.Info.constrainingTaskIds");
    target = stream->WriteString(6, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NVD.SolutionResponse.Infeasibility.Info)
  return target;
}

::size_t SolutionResponse_Infeasibility_Info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NVD.SolutionResponse.Infeasibility.Info)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string constrainingTaskIds = 6;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_constrainingtaskids().size());
  for (int i = 0, n = _internal_constrainingtaskids().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_constrainingtaskids().Get(i));
  }
  // required string message = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_message());
  }

  if (cached_has_bits & 0x0000001eu) {
    // optional string dimId = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_dimid());
    }

    // optional float limit = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 5;
    }

    // optional float value = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 5;
    }

    // optional int64 count = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_count());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SolutionResponse_Infeasibility_Info::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SolutionResponse_Infeasibility_Info::MergeImpl
};
const ::google::protobuf::Message::ClassData*SolutionResponse_Infeasibility_Info::GetClassData() const { return &_class_data_; }


void SolutionResponse_Infeasibility_Info::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SolutionResponse_Infeasibility_Info*>(&to_msg);
  auto& from = static_cast<const SolutionResponse_Infeasibility_Info&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NVD.SolutionResponse.Infeasibility.Info)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_constrainingtaskids()->MergeFrom(from._internal_constrainingtaskids());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_message(from._internal_message());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_dimid(from._internal_dimid());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.limit_ = from._impl_.limit_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.value_ = from._impl_.value_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.count_ = from._impl_.count_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SolutionResponse_Infeasibility_Info::CopyFrom(const SolutionResponse_Infeasibility_Info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NVD.SolutionResponse.Infeasibility.Info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SolutionResponse_Infeasibility_Info::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

void SolutionResponse_Infeasibility_Info::InternalSwap(SolutionResponse_Infeasibility_Info* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.constrainingtaskids_.InternalSwap(&other->_impl_.constrainingtaskids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, lhs_arena,
                                       &other->_impl_.message_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dimid_, lhs_arena,
                                       &other->_impl_.dimid_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility_Info, _impl_.count_)
      + sizeof(SolutionResponse_Infeasibility_Info::_impl_.count_)
      - PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility_Info, _impl_.limit_)>(
          reinterpret_cast<char*>(&_impl_.limit_),
          reinterpret_cast<char*>(&other->_impl_.limit_));
}

::google::protobuf::Metadata SolutionResponse_Infeasibility_Info::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_getter, &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_once,
      file_level_metadata_nvd_2dhap0j2y4zlm1_2eproto[16]);
}
// ===================================================================

class SolutionResponse_Infeasibility::_Internal {
 public:
  using HasBits = decltype(std::declval<SolutionResponse_Infeasibility>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility, _impl_._has_bits_);
  static void set_has_taskid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

SolutionResponse_Infeasibility::SolutionResponse_Infeasibility(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NVD.SolutionResponse.Infeasibility)
}
SolutionResponse_Infeasibility::SolutionResponse_Infeasibility(const SolutionResponse_Infeasibility& from) : ::google::protobuf::Message() {
  SolutionResponse_Infeasibility* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.infeasibilityinfo_){from._impl_.infeasibilityinfo_},
      decltype(_impl_.taskid_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.taskid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.taskid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.taskid_.Set(from._internal_taskid(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:NVD.SolutionResponse.Infeasibility)
}
inline void SolutionResponse_Infeasibility::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.infeasibilityinfo_){arena},
      decltype(_impl_.taskid_){},
  };
  _impl_.taskid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.taskid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
SolutionResponse_Infeasibility::~SolutionResponse_Infeasibility() {
  // @@protoc_insertion_point(destructor:NVD.SolutionResponse.Infeasibility)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SolutionResponse_Infeasibility::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.infeasibilityinfo_.~RepeatedPtrField();
  _impl_.taskid_.Destroy();
}
void SolutionResponse_Infeasibility::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SolutionResponse_Infeasibility::Clear() {
// @@protoc_insertion_point(message_clear_start:NVD.SolutionResponse.Infeasibility)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_infeasibilityinfo()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.taskid_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SolutionResponse_Infeasibility::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 49, 2> SolutionResponse_Infeasibility::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SolutionResponse_Infeasibility_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .NVD.SolutionResponse.Infeasibility.Info infeasibilityInfo = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility, _impl_.infeasibilityinfo_)}},
    // required string taskId = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility, _impl_.taskid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string taskId = 1;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility, _impl_.taskid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated .NVD.SolutionResponse.Infeasibility.Info infeasibilityInfo = 2;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility, _impl_.infeasibilityinfo_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::NVD::SolutionResponse_Infeasibility_Info>()},
  }}, {{
    "\42\6\0\0\0\0\0\0"
    "NVD.SolutionResponse.Infeasibility"
    "taskId"
  }},
};

::uint8_t* SolutionResponse_Infeasibility::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NVD.SolutionResponse.Infeasibility)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string taskId = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_taskid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "NVD.SolutionResponse.Infeasibility.taskId");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .NVD.SolutionResponse.Infeasibility.Info infeasibilityInfo = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_infeasibilityinfo_size()); i < n; i++) {
    const auto& repfield = this->_internal_infeasibilityinfo().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NVD.SolutionResponse.Infeasibility)
  return target;
}

::size_t SolutionResponse_Infeasibility::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NVD.SolutionResponse.Infeasibility)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .NVD.SolutionResponse.Infeasibility.Info infeasibilityInfo = 2;
  total_size += 1UL * this->_internal_infeasibilityinfo_size();
  for (const auto& msg : this->_internal_infeasibilityinfo()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // required string taskId = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_taskid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SolutionResponse_Infeasibility::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SolutionResponse_Infeasibility::MergeImpl
};
const ::google::protobuf::Message::ClassData*SolutionResponse_Infeasibility::GetClassData() const { return &_class_data_; }


void SolutionResponse_Infeasibility::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SolutionResponse_Infeasibility*>(&to_msg);
  auto& from = static_cast<const SolutionResponse_Infeasibility&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NVD.SolutionResponse.Infeasibility)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_infeasibilityinfo()->MergeFrom(from._internal_infeasibilityinfo());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_taskid(from._internal_taskid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SolutionResponse_Infeasibility::CopyFrom(const SolutionResponse_Infeasibility& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NVD.SolutionResponse.Infeasibility)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SolutionResponse_Infeasibility::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(_internal_infeasibilityinfo()))
    return false;
  return true;
}

void SolutionResponse_Infeasibility::InternalSwap(SolutionResponse_Infeasibility* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.infeasibilityinfo_.InternalSwap(&other->_impl_.infeasibilityinfo_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.taskid_, lhs_arena,
                                       &other->_impl_.taskid_, rhs_arena);
}

::google::protobuf::Metadata SolutionResponse_Infeasibility::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_getter, &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_once,
      file_level_metadata_nvd_2dhap0j2y4zlm1_2eproto[17]);
}
// ===================================================================

class SolutionResponse_CompactSolution::_Internal {
 public:
};

SolutionResponse_CompactSolution::SolutionResponse_CompactSolution(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NVD.SolutionResponse.CompactSolution)
}
SolutionResponse_CompactSolution::SolutionResponse_CompactSolution(const SolutionResponse_CompactSolution& from) : ::google::protobuf::Message() {
  SolutionResponse_CompactSolution* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.visitsequence_){from._impl_.visitsequence_},
      decltype(_impl_.objectives_){from._impl_.objectives_},
      decltype(_impl_.objectivenames_){from._impl_.objectivenames_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:NVD.SolutionResponse.CompactSolution)
}
inline void SolutionResponse_CompactSolution::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.visitsequence_){arena},
      decltype(_impl_.objectives_){arena},
      decltype(_impl_.objectivenames_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
SolutionResponse_CompactSolution::~SolutionResponse_CompactSolution() {
  // @@protoc_insertion_point(destructor:NVD.SolutionResponse.CompactSolution)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SolutionResponse_CompactSolution::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.visitsequence_.~RepeatedPtrField();
  _impl_.objectives_.~RepeatedField();
  _internal_mutable_objectivenames()->~RepeatedPtrField();
}
void SolutionResponse_CompactSolution::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SolutionResponse_CompactSolution::Clear() {
// @@protoc_insertion_point(message_clear_start:NVD.SolutionResponse.CompactSolution)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_visitsequence()->Clear();
  _internal_mutable_objectives()->Clear();
  _internal_mutable_objectivenames()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SolutionResponse_CompactSolution::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 59, 2> SolutionResponse_CompactSolution::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SolutionResponse_CompactSolution_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .NVD.VisitSequence visitSequence = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_CompactSolution, _impl_.visitsequence_)}},
    // repeated float objectives = 2;
    {::_pbi::TcParser::FastF32R1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_CompactSolution, _impl_.objectives_)}},
    // repeated string objectiveNames = 3;
    {::_pbi::TcParser::FastSR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_CompactSolution, _impl_.objectivenames_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .NVD.VisitSequence visitSequence = 1;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_CompactSolution, _impl_.visitsequence_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated float objectives = 2;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_CompactSolution, _impl_.objectives_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kFloat)},
    // repeated string objectiveNames = 3;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_CompactSolution, _impl_.objectivenames_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::NVD::VisitSequence>()},
  }}, {{
    "\44\0\0\16\0\0\0\0"
    "NVD.SolutionResponse.CompactSolution"
    "objectiveNames"
  }},
};

::uint8_t* SolutionResponse_CompactSolution::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NVD.SolutionResponse.CompactSolution)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .NVD.VisitSequence visitSequence = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_visitsequence_size()); i < n; i++) {
    const auto& repfield = this->_internal_visitsequence().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated float objectives = 2;
  for (int i = 0, n = this->_internal_objectives_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_objectives().Get(i), target);
  }

  // repeated string objectiveNames = 3;
  for (int i = 0, n = this->_internal_objectivenames_size(); i < n; ++i) {
    const auto& s = this->_internal_objectivenames().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "NVD.SolutionResponse.CompactSolution.objectiveNames");
    target = stream->WriteString(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NVD.SolutionResponse.CompactSolution)
  return target;
}

::size_t SolutionResponse_CompactSolution::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NVD.SolutionResponse.CompactSolution)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .NVD.VisitSequence visitSequence = 1;
  total_size += 1UL * this->_internal_visitsequence_size();
  for (const auto& msg : this->_internal_visitsequence()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated float objectives = 2;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_objectives_size())
    ;
    std::size_t tag_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_objectives_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated string objectiveNames = 3;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_objectivenames().size());
  for (int i = 0, n = _internal_objectivenames().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_objectivenames().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SolutionResponse_CompactSolution::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SolutionResponse_CompactSolution::MergeImpl
};
const ::google::protobuf::Message::ClassData*SolutionResponse_CompactSolution::GetClassData() const { return &_class_data_; }


void SolutionResponse_CompactSolution::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SolutionResponse_CompactSolution*>(&to_msg);
  auto& from = static_cast<const SolutionResponse_CompactSolution&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NVD.SolutionResponse.CompactSolution)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_visitsequence()->MergeFrom(from._internal_visitsequence());
  _this->_internal_mutable_objectives()->MergeFrom(from._internal_objectives());
  _this->_internal_mutable_objectivenames()->MergeFrom(from._internal_objectivenames());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SolutionResponse_CompactSolution::CopyFrom(const SolutionResponse_CompactSolution& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NVD.SolutionResponse.CompactSolution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SolutionResponse_CompactSolution::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(_internal_visitsequence()))
    return false;
  return true;
}

void SolutionResponse_CompactSolution::InternalSwap(SolutionResponse_CompactSolution* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.visitsequence_.InternalSwap(&other->_impl_.visitsequence_);
  _impl_.objectives_.InternalSwap(&other->_impl_.objectives_);
  _impl_.objectivenames_.InternalSwap(&other->_impl_.objectivenames_);
}

::google::protobuf::Metadata SolutionResponse_CompactSolution::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_getter, &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_once,
      file_level_metadata_nvd_2dhap0j2y4zlm1_2eproto[18]);
}
// ===================================================================

class SolutionResponse_SolutionInstance::_Internal {
 public:
};

SolutionResponse_SolutionInstance::SolutionResponse_SolutionInstance(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NVD.SolutionResponse.SolutionInstance)
}
SolutionResponse_SolutionInstance::SolutionResponse_SolutionInstance(const SolutionResponse_SolutionInstance& from) : ::google::protobuf::Message() {
  SolutionResponse_SolutionInstance* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.routes_){from._impl_.routes_},
      decltype(_impl_.infeasibilities_){from._impl_.infeasibilities_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:NVD.SolutionResponse.SolutionInstance)
}
inline void SolutionResponse_SolutionInstance::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.routes_){arena},
      decltype(_impl_.infeasibilities_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
SolutionResponse_SolutionInstance::~SolutionResponse_SolutionInstance() {
  // @@protoc_insertion_point(destructor:NVD.SolutionResponse.SolutionInstance)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SolutionResponse_SolutionInstance::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.routes_.~RepeatedPtrField();
  _impl_.infeasibilities_.~RepeatedPtrField();
}
void SolutionResponse_SolutionInstance::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SolutionResponse_SolutionInstance::Clear() {
// @@protoc_insertion_point(message_clear_start:NVD.SolutionResponse.SolutionInstance)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_routes()->Clear();
  _internal_mutable_infeasibilities()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SolutionResponse_SolutionInstance::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> SolutionResponse_SolutionInstance::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SolutionResponse_SolutionInstance_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .NVD.SolutionResponse.Infeasibility infeasibilities = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(SolutionResponse_SolutionInstance, _impl_.infeasibilities_)}},
    // repeated .NVD.SolutionResponse.Route routes = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_SolutionInstance, _impl_.routes_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .NVD.SolutionResponse.Route routes = 1;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_SolutionInstance, _impl_.routes_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .NVD.SolutionResponse.Infeasibility infeasibilities = 2;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_SolutionInstance, _impl_.infeasibilities_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::NVD::SolutionResponse_Route>()},
    {::_pbi::TcParser::GetTable<::NVD::SolutionResponse_Infeasibility>()},
  }}, {{
  }},
};

::uint8_t* SolutionResponse_SolutionInstance::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NVD.SolutionResponse.SolutionInstance)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .NVD.SolutionResponse.Route routes = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_routes_size()); i < n; i++) {
    const auto& repfield = this->_internal_routes().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .NVD.SolutionResponse.Infeasibility infeasibilities = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_infeasibilities_size()); i < n; i++) {
    const auto& repfield = this->_internal_infeasibilities().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NVD.SolutionResponse.SolutionInstance)
  return target;
}

::size_t SolutionResponse_SolutionInstance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NVD.SolutionResponse.SolutionInstance)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .NVD.SolutionResponse.Route routes = 1;
  total_size += 1UL * this->_internal_routes_size();
  for (const auto& msg : this->_internal_routes()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .NVD.SolutionResponse.Infeasibility infeasibilities = 2;
  total_size += 1UL * this->_internal_infeasibilities_size();
  for (const auto& msg : this->_internal_infeasibilities()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SolutionResponse_SolutionInstance::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SolutionResponse_SolutionInstance::MergeImpl
};
const ::google::protobuf::Message::ClassData*SolutionResponse_SolutionInstance::GetClassData() const { return &_class_data_; }


void SolutionResponse_SolutionInstance::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SolutionResponse_SolutionInstance*>(&to_msg);
  auto& from = static_cast<const SolutionResponse_SolutionInstance&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NVD.SolutionResponse.SolutionInstance)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_routes()->MergeFrom(from._internal_routes());
  _this->_internal_mutable_infeasibilities()->MergeFrom(from._internal_infeasibilities());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SolutionResponse_SolutionInstance::CopyFrom(const SolutionResponse_SolutionInstance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NVD.SolutionResponse.SolutionInstance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SolutionResponse_SolutionInstance::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(_internal_routes()))
    return false;
  if (!::google::protobuf::internal::AllAreInitialized(_internal_infeasibilities()))
    return false;
  return true;
}

void SolutionResponse_SolutionInstance::InternalSwap(SolutionResponse_SolutionInstance* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.routes_.InternalSwap(&other->_impl_.routes_);
  _impl_.infeasibilities_.InternalSwap(&other->_impl_.infeasibilities_);
}

::google::protobuf::Metadata SolutionResponse_SolutionInstance::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_getter, &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_once,
      file_level_metadata_nvd_2dhap0j2y4zlm1_2eproto[19]);
}
// ===================================================================

class SolutionResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<SolutionResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SolutionResponse, _impl_._has_bits_);
  static const ::NVD::SolutionResponse_SolutionInstance& instance(const SolutionResponse* msg);
  static void set_has_instance(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::NVD::SolutionResponse_SolutionInstance& SolutionResponse::_Internal::instance(const SolutionResponse* msg) {
  return *msg->_impl_.instance_;
}
SolutionResponse::SolutionResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NVD.SolutionResponse)
}
SolutionResponse::SolutionResponse(const SolutionResponse& from) : ::google::protobuf::Message() {
  SolutionResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.frontier_){from._impl_.frontier_},
      decltype(_impl_.instance_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.instance_ = new ::NVD::SolutionResponse_SolutionInstance(*from._impl_.instance_);
  }

  // @@protoc_insertion_point(copy_constructor:NVD.SolutionResponse)
}
inline void SolutionResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.frontier_){arena},
      decltype(_impl_.instance_){nullptr},
  };
}
SolutionResponse::~SolutionResponse() {
  // @@protoc_insertion_point(destructor:NVD.SolutionResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SolutionResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.frontier_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.instance_;
}
void SolutionResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SolutionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:NVD.SolutionResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_frontier()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.instance_ != nullptr);
    _impl_.instance_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SolutionResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> SolutionResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SolutionResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SolutionResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .NVD.SolutionResponse.SolutionInstance instance = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 1, PROTOBUF_FIELD_OFFSET(SolutionResponse, _impl_.instance_)}},
    // repeated .NVD.SolutionResponse.CompactSolution frontier = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse, _impl_.frontier_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .NVD.SolutionResponse.CompactSolution frontier = 1;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse, _impl_.frontier_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .NVD.SolutionResponse.SolutionInstance instance = 2;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse, _impl_.instance_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::NVD::SolutionResponse_CompactSolution>()},
    {::_pbi::TcParser::GetTable<::NVD::SolutionResponse_SolutionInstance>()},
  }}, {{
  }},
};

::uint8_t* SolutionResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NVD.SolutionResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .NVD.SolutionResponse.CompactSolution frontier = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_frontier_size()); i < n; i++) {
    const auto& repfield = this->_internal_frontier().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .NVD.SolutionResponse.SolutionInstance instance = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::instance(this),
        _Internal::instance(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NVD.SolutionResponse)
  return target;
}

::size_t SolutionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NVD.SolutionResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .NVD.SolutionResponse.CompactSolution frontier = 1;
  total_size += 1UL * this->_internal_frontier_size();
  for (const auto& msg : this->_internal_frontier()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // optional .NVD.SolutionResponse.SolutionInstance instance = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.instance_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SolutionResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SolutionResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*SolutionResponse::GetClassData() const { return &_class_data_; }


void SolutionResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SolutionResponse*>(&to_msg);
  auto& from = static_cast<const SolutionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NVD.SolutionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_frontier()->MergeFrom(from._internal_frontier());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_instance()->::NVD::SolutionResponse_SolutionInstance::MergeFrom(
        from._internal_instance());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SolutionResponse::CopyFrom(const SolutionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NVD.SolutionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SolutionResponse::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(_internal_frontier()))
    return false;
  if ((_impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!_impl_.instance_->IsInitialized()) return false;
  }
  return true;
}

void SolutionResponse::InternalSwap(SolutionResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.frontier_.InternalSwap(&other->_impl_.frontier_);
  swap(_impl_.instance_, other->_impl_.instance_);
}

::google::protobuf::Metadata SolutionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_getter, &descriptor_table_nvd_2dhap0j2y4zlm1_2eproto_once,
      file_level_metadata_nvd_2dhap0j2y4zlm1_2eproto[20]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace NVD
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
