// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ndd-cmibu6krtqja.proto

#include "ndd-cmibu6krtqja.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_ndd_2dcmibu6krtqja_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ndd_2dcmibu6krtqja_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CapacityDimension;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ndd_2dcmibu6krtqja_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Geocode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ndd_2dcmibu6krtqja_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_InternalDimension;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ndd_2dcmibu6krtqja_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Job_VehicleRelation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ndd_2dcmibu6krtqja_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Profile_customCycle;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ndd_2dcmibu6krtqja_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SolutionResponse_Infeasibility_Info;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ndd_2dcmibu6krtqja_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SolutionResponse_InterStopAttribute;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ndd_2dcmibu6krtqja_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SolutionResponse_StopAttribute;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ndd_2dcmibu6krtqja_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SolutionResponse_TransitRuleAttribute;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ndd_2dcmibu6krtqja_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TaskSequence;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ndd_2dcmibu6krtqja_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TransitRule_Trigger;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ndd_2dcmibu6krtqja_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TransitSet_TransitValue;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ndd_2dcmibu6krtqja_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VehicleClass_Attribute;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ndd_2dcmibu6krtqja_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VehicleCostClass_Attribute;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ndd_2dcmibu6krtqja_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Vehicle_Capacity;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ndd_2dcmibu6krtqja_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Window;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ndd_2dcmibu6krtqja_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Job_Task;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ndd_2dcmibu6krtqja_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Job_Task_Attribute;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ndd_2dcmibu6krtqja_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Location_Attribute;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ndd_2dcmibu6krtqja_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Profile;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ndd_2dcmibu6krtqja_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SolutionResponse_CompactSolution;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ndd_2dcmibu6krtqja_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SolutionResponse_Infeasibility;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ndd_2dcmibu6krtqja_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SolutionResponse_Stop;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ndd_2dcmibu6krtqja_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TransitGenerator;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ndd_2dcmibu6krtqja_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TransitRule;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ndd_2dcmibu6krtqja_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TransitSet;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ndd_2dcmibu6krtqja_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_VehicleClass;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ndd_2dcmibu6krtqja_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_VehicleCostClass;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ndd_2dcmibu6krtqja_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Vehicle_Shift;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ndd_2dcmibu6krtqja_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Vehicle_Task;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ndd_2dcmibu6krtqja_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Vehicle_Task_Attribute;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ndd_2dcmibu6krtqja_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_DimensionConfiguration;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ndd_2dcmibu6krtqja_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Location;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ndd_2dcmibu6krtqja_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_SolutionResponse_InterStop;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ndd_2dcmibu6krtqja_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_SolutionResponse_SolutionInstance;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ndd_2dcmibu6krtqja_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Vehicle;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ndd_2dcmibu6krtqja_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Job;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ndd_2dcmibu6krtqja_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_SolutionResponse_Route;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ndd_2dcmibu6krtqja_2eproto ::google::protobuf::internal::SCCInfo<9> scc_info_Model;
}  // namespace protobuf_ndd_2dcmibu6krtqja_2eproto
namespace NDD {
class InternalDimensionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InternalDimension>
      _instance;
} _InternalDimension_default_instance_;
class CapacityDimensionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CapacityDimension>
      _instance;
} _CapacityDimension_default_instance_;
class DimensionConfigurationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DimensionConfiguration>
      _instance;
} _DimensionConfiguration_default_instance_;
class GeocodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Geocode>
      _instance;
} _Geocode_default_instance_;
class WindowDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Window>
      _instance;
} _Window_default_instance_;
class Location_AttributeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Location_Attribute>
      _instance;
} _Location_Attribute_default_instance_;
class LocationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Location>
      _instance;
} _Location_default_instance_;
class Profile_customCycleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Profile_customCycle>
      _instance;
} _Profile_customCycle_default_instance_;
class ProfileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Profile>
      _instance;
} _Profile_default_instance_;
class Job_VehicleRelationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Job_VehicleRelation>
      _instance;
} _Job_VehicleRelation_default_instance_;
class Job_Task_AttributeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Job_Task_Attribute>
      _instance;
} _Job_Task_Attribute_default_instance_;
class Job_TaskDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Job_Task>
      _instance;
} _Job_Task_default_instance_;
class JobDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Job>
      _instance;
} _Job_default_instance_;
class TransitSet_TransitValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransitSet_TransitValue>
      _instance;
} _TransitSet_TransitValue_default_instance_;
class TransitSetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransitSet>
      _instance;
} _TransitSet_default_instance_;
class TransitGeneratorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransitGenerator>
      _instance;
} _TransitGenerator_default_instance_;
class VehicleClass_AttributeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VehicleClass_Attribute>
      _instance;
} _VehicleClass_Attribute_default_instance_;
class VehicleClassDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VehicleClass>
      _instance;
} _VehicleClass_default_instance_;
class VehicleCostClass_AttributeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VehicleCostClass_Attribute>
      _instance;
} _VehicleCostClass_Attribute_default_instance_;
class VehicleCostClassDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VehicleCostClass>
      _instance;
} _VehicleCostClass_default_instance_;
class Vehicle_Task_AttributeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vehicle_Task_Attribute>
      _instance;
} _Vehicle_Task_Attribute_default_instance_;
class Vehicle_TaskDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vehicle_Task>
      _instance;
} _Vehicle_Task_default_instance_;
class Vehicle_ShiftDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vehicle_Shift>
      _instance;
} _Vehicle_Shift_default_instance_;
class Vehicle_CapacityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vehicle_Capacity>
      _instance;
} _Vehicle_Capacity_default_instance_;
class VehicleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vehicle>
      _instance;
} _Vehicle_default_instance_;
class TaskSequenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TaskSequence>
      _instance;
} _TaskSequence_default_instance_;
class TransitRule_TriggerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransitRule_Trigger>
      _instance;
} _TransitRule_Trigger_default_instance_;
class TransitRuleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransitRule>
      _instance;
} _TransitRule_default_instance_;
class ModelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Model>
      _instance;
} _Model_default_instance_;
class SolveRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SolveRequest>
      _instance;
} _SolveRequest_default_instance_;
class SolutionResponse_StopAttributeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SolutionResponse_StopAttribute>
      _instance;
} _SolutionResponse_StopAttribute_default_instance_;
class SolutionResponse_InterStopAttributeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SolutionResponse_InterStopAttribute>
      _instance;
} _SolutionResponse_InterStopAttribute_default_instance_;
class SolutionResponse_StopDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SolutionResponse_Stop>
      _instance;
} _SolutionResponse_Stop_default_instance_;
class SolutionResponse_InterStopDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SolutionResponse_InterStop>
      _instance;
} _SolutionResponse_InterStop_default_instance_;
class SolutionResponse_TransitRuleAttributeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SolutionResponse_TransitRuleAttribute>
      _instance;
} _SolutionResponse_TransitRuleAttribute_default_instance_;
class SolutionResponse_RouteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SolutionResponse_Route>
      _instance;
} _SolutionResponse_Route_default_instance_;
class SolutionResponse_Infeasibility_InfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SolutionResponse_Infeasibility_Info>
      _instance;
} _SolutionResponse_Infeasibility_Info_default_instance_;
class SolutionResponse_InfeasibilityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SolutionResponse_Infeasibility>
      _instance;
} _SolutionResponse_Infeasibility_default_instance_;
class SolutionResponse_CompactSolutionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SolutionResponse_CompactSolution>
      _instance;
} _SolutionResponse_CompactSolution_default_instance_;
class SolutionResponse_SolutionInstanceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SolutionResponse_SolutionInstance>
      _instance;
} _SolutionResponse_SolutionInstance_default_instance_;
class SolutionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SolutionResponse>
      _instance;
} _SolutionResponse_default_instance_;
}  // namespace NDD
namespace protobuf_ndd_2dcmibu6krtqja_2eproto {
static void InitDefaultsInternalDimension() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NDD::_InternalDimension_default_instance_;
    new (ptr) ::NDD::InternalDimension();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NDD::InternalDimension::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InternalDimension =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInternalDimension}, {}};

static void InitDefaultsCapacityDimension() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NDD::_CapacityDimension_default_instance_;
    new (ptr) ::NDD::CapacityDimension();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NDD::CapacityDimension::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CapacityDimension =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCapacityDimension}, {}};

static void InitDefaultsDimensionConfiguration() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NDD::_DimensionConfiguration_default_instance_;
    new (ptr) ::NDD::DimensionConfiguration();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NDD::DimensionConfiguration::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_DimensionConfiguration =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsDimensionConfiguration}, {
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_InternalDimension.base,
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_CapacityDimension.base,}};

static void InitDefaultsGeocode() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NDD::_Geocode_default_instance_;
    new (ptr) ::NDD::Geocode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NDD::Geocode::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Geocode =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGeocode}, {}};

static void InitDefaultsWindow() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NDD::_Window_default_instance_;
    new (ptr) ::NDD::Window();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NDD::Window::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Window =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWindow}, {}};

static void InitDefaultsLocation_Attribute() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NDD::_Location_Attribute_default_instance_;
    new (ptr) ::NDD::Location_Attribute();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NDD::Location_Attribute::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Location_Attribute =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLocation_Attribute}, {
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Window.base,}};

static void InitDefaultsLocation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NDD::_Location_default_instance_;
    new (ptr) ::NDD::Location();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NDD::Location::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Location =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsLocation}, {
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Geocode.base,
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Location_Attribute.base,}};

static void InitDefaultsProfile_customCycle() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NDD::_Profile_customCycle_default_instance_;
    new (ptr) ::NDD::Profile_customCycle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NDD::Profile_customCycle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Profile_customCycle =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProfile_customCycle}, {}};

static void InitDefaultsProfile() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NDD::_Profile_default_instance_;
    new (ptr) ::NDD::Profile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NDD::Profile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Profile =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsProfile}, {
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Profile_customCycle.base,}};

static void InitDefaultsJob_VehicleRelation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NDD::_Job_VehicleRelation_default_instance_;
    new (ptr) ::NDD::Job_VehicleRelation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NDD::Job_VehicleRelation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Job_VehicleRelation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsJob_VehicleRelation}, {}};

static void InitDefaultsJob_Task_Attribute() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NDD::_Job_Task_Attribute_default_instance_;
    new (ptr) ::NDD::Job_Task_Attribute();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NDD::Job_Task_Attribute::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Job_Task_Attribute =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsJob_Task_Attribute}, {
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Window.base,}};

static void InitDefaultsJob_Task() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NDD::_Job_Task_default_instance_;
    new (ptr) ::NDD::Job_Task();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NDD::Job_Task::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Job_Task =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsJob_Task}, {
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Job_Task_Attribute.base,}};

static void InitDefaultsJob() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NDD::_Job_default_instance_;
    new (ptr) ::NDD::Job();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NDD::Job::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Job =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsJob}, {
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Job_Task.base,
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Job_VehicleRelation.base,
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Profile.base,}};

static void InitDefaultsTransitSet_TransitValue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NDD::_TransitSet_TransitValue_default_instance_;
    new (ptr) ::NDD::TransitSet_TransitValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NDD::TransitSet_TransitValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TransitSet_TransitValue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTransitSet_TransitValue}, {}};

static void InitDefaultsTransitSet() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NDD::_TransitSet_default_instance_;
    new (ptr) ::NDD::TransitSet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NDD::TransitSet::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TransitSet =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTransitSet}, {
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_TransitSet_TransitValue.base,}};

static void InitDefaultsTransitGenerator() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NDD::_TransitGenerator_default_instance_;
    new (ptr) ::NDD::TransitGenerator();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NDD::TransitGenerator::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TransitGenerator =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTransitGenerator}, {
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_TransitSet.base,}};

static void InitDefaultsVehicleClass_Attribute() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NDD::_VehicleClass_Attribute_default_instance_;
    new (ptr) ::NDD::VehicleClass_Attribute();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NDD::VehicleClass_Attribute::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VehicleClass_Attribute =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVehicleClass_Attribute}, {}};

static void InitDefaultsVehicleClass() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NDD::_VehicleClass_default_instance_;
    new (ptr) ::NDD::VehicleClass();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NDD::VehicleClass::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_VehicleClass =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVehicleClass}, {
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_VehicleClass_Attribute.base,}};

static void InitDefaultsVehicleCostClass_Attribute() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NDD::_VehicleCostClass_Attribute_default_instance_;
    new (ptr) ::NDD::VehicleCostClass_Attribute();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NDD::VehicleCostClass_Attribute::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VehicleCostClass_Attribute =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVehicleCostClass_Attribute}, {}};

static void InitDefaultsVehicleCostClass() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NDD::_VehicleCostClass_default_instance_;
    new (ptr) ::NDD::VehicleCostClass();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NDD::VehicleCostClass::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_VehicleCostClass =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVehicleCostClass}, {
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_VehicleCostClass_Attribute.base,}};

static void InitDefaultsVehicle_Task_Attribute() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NDD::_Vehicle_Task_Attribute_default_instance_;
    new (ptr) ::NDD::Vehicle_Task_Attribute();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NDD::Vehicle_Task_Attribute::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Vehicle_Task_Attribute =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVehicle_Task_Attribute}, {
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Window.base,}};

static void InitDefaultsVehicle_Task() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NDD::_Vehicle_Task_default_instance_;
    new (ptr) ::NDD::Vehicle_Task();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NDD::Vehicle_Task::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Vehicle_Task =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVehicle_Task}, {
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Vehicle_Task_Attribute.base,}};

static void InitDefaultsVehicle_Shift() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NDD::_Vehicle_Shift_default_instance_;
    new (ptr) ::NDD::Vehicle_Shift();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NDD::Vehicle_Shift::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Vehicle_Shift =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVehicle_Shift}, {
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Vehicle_Task.base,}};

static void InitDefaultsVehicle_Capacity() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NDD::_Vehicle_Capacity_default_instance_;
    new (ptr) ::NDD::Vehicle_Capacity();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NDD::Vehicle_Capacity::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Vehicle_Capacity =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVehicle_Capacity}, {}};

static void InitDefaultsVehicle() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NDD::_Vehicle_default_instance_;
    new (ptr) ::NDD::Vehicle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NDD::Vehicle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Vehicle =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsVehicle}, {
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Vehicle_Shift.base,
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Vehicle_Capacity.base,}};

static void InitDefaultsTaskSequence() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NDD::_TaskSequence_default_instance_;
    new (ptr) ::NDD::TaskSequence();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NDD::TaskSequence::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TaskSequence =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTaskSequence}, {}};

static void InitDefaultsTransitRule_Trigger() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NDD::_TransitRule_Trigger_default_instance_;
    new (ptr) ::NDD::TransitRule_Trigger();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NDD::TransitRule_Trigger::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TransitRule_Trigger =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTransitRule_Trigger}, {}};

static void InitDefaultsTransitRule() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NDD::_TransitRule_default_instance_;
    new (ptr) ::NDD::TransitRule();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NDD::TransitRule::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TransitRule =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTransitRule}, {
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_TransitRule_Trigger.base,}};

static void InitDefaultsModel() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NDD::_Model_default_instance_;
    new (ptr) ::NDD::Model();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NDD::Model::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<9> scc_info_Model =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 9, InitDefaultsModel}, {
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_DimensionConfiguration.base,
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Location.base,
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Job.base,
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Vehicle.base,
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_VehicleClass.base,
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_VehicleCostClass.base,
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_TransitRule.base,
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_TransitGenerator.base,
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_TaskSequence.base,}};

static void InitDefaultsSolveRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NDD::_SolveRequest_default_instance_;
    new (ptr) ::NDD::SolveRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NDD::SolveRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_SolveRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSolveRequest}, {
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Model.base,
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_TaskSequence.base,}};

static void InitDefaultsSolutionResponse_StopAttribute() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NDD::_SolutionResponse_StopAttribute_default_instance_;
    new (ptr) ::NDD::SolutionResponse_StopAttribute();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NDD::SolutionResponse_StopAttribute::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SolutionResponse_StopAttribute =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSolutionResponse_StopAttribute}, {}};

static void InitDefaultsSolutionResponse_InterStopAttribute() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NDD::_SolutionResponse_InterStopAttribute_default_instance_;
    new (ptr) ::NDD::SolutionResponse_InterStopAttribute();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NDD::SolutionResponse_InterStopAttribute::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SolutionResponse_InterStopAttribute =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSolutionResponse_InterStopAttribute}, {}};

static void InitDefaultsSolutionResponse_Stop() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NDD::_SolutionResponse_Stop_default_instance_;
    new (ptr) ::NDD::SolutionResponse_Stop();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NDD::SolutionResponse_Stop::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SolutionResponse_Stop =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSolutionResponse_Stop}, {
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_SolutionResponse_StopAttribute.base,}};

static void InitDefaultsSolutionResponse_InterStop() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NDD::_SolutionResponse_InterStop_default_instance_;
    new (ptr) ::NDD::SolutionResponse_InterStop();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NDD::SolutionResponse_InterStop::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_SolutionResponse_InterStop =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSolutionResponse_InterStop}, {
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_SolutionResponse_InterStopAttribute.base,
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Geocode.base,}};

static void InitDefaultsSolutionResponse_TransitRuleAttribute() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NDD::_SolutionResponse_TransitRuleAttribute_default_instance_;
    new (ptr) ::NDD::SolutionResponse_TransitRuleAttribute();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NDD::SolutionResponse_TransitRuleAttribute::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SolutionResponse_TransitRuleAttribute =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSolutionResponse_TransitRuleAttribute}, {}};

static void InitDefaultsSolutionResponse_Route() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NDD::_SolutionResponse_Route_default_instance_;
    new (ptr) ::NDD::SolutionResponse_Route();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NDD::SolutionResponse_Route::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_SolutionResponse_Route =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsSolutionResponse_Route}, {
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_SolutionResponse_Stop.base,
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_SolutionResponse_InterStop.base,
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_SolutionResponse_TransitRuleAttribute.base,}};

static void InitDefaultsSolutionResponse_Infeasibility_Info() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NDD::_SolutionResponse_Infeasibility_Info_default_instance_;
    new (ptr) ::NDD::SolutionResponse_Infeasibility_Info();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NDD::SolutionResponse_Infeasibility_Info::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SolutionResponse_Infeasibility_Info =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSolutionResponse_Infeasibility_Info}, {}};

static void InitDefaultsSolutionResponse_Infeasibility() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NDD::_SolutionResponse_Infeasibility_default_instance_;
    new (ptr) ::NDD::SolutionResponse_Infeasibility();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NDD::SolutionResponse_Infeasibility::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SolutionResponse_Infeasibility =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSolutionResponse_Infeasibility}, {
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_SolutionResponse_Infeasibility_Info.base,}};

static void InitDefaultsSolutionResponse_CompactSolution() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NDD::_SolutionResponse_CompactSolution_default_instance_;
    new (ptr) ::NDD::SolutionResponse_CompactSolution();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NDD::SolutionResponse_CompactSolution::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SolutionResponse_CompactSolution =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSolutionResponse_CompactSolution}, {
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_TaskSequence.base,}};

static void InitDefaultsSolutionResponse_SolutionInstance() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NDD::_SolutionResponse_SolutionInstance_default_instance_;
    new (ptr) ::NDD::SolutionResponse_SolutionInstance();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NDD::SolutionResponse_SolutionInstance::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_SolutionResponse_SolutionInstance =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSolutionResponse_SolutionInstance}, {
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_SolutionResponse_Route.base,
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_SolutionResponse_Infeasibility.base,}};

static void InitDefaultsSolutionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NDD::_SolutionResponse_default_instance_;
    new (ptr) ::NDD::SolutionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NDD::SolutionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_SolutionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSolutionResponse}, {
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_SolutionResponse_CompactSolution.base,
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_SolutionResponse_SolutionInstance.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_InternalDimension.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CapacityDimension.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DimensionConfiguration.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Geocode.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Window.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Location_Attribute.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Location.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Profile_customCycle.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Profile.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Job_VehicleRelation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Job_Task_Attribute.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Job_Task.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Job.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TransitSet_TransitValue.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TransitSet.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TransitGenerator.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VehicleClass_Attribute.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VehicleClass.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VehicleCostClass_Attribute.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VehicleCostClass.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Vehicle_Task_Attribute.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Vehicle_Task.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Vehicle_Shift.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Vehicle_Capacity.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Vehicle.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TaskSequence.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TransitRule_Trigger.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TransitRule.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Model.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SolveRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SolutionResponse_StopAttribute.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SolutionResponse_InterStopAttribute.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SolutionResponse_Stop.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SolutionResponse_InterStop.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SolutionResponse_TransitRuleAttribute.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SolutionResponse_Route.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SolutionResponse_Infeasibility_Info.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SolutionResponse_Infeasibility.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SolutionResponse_CompactSolution.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SolutionResponse_SolutionInstance.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SolutionResponse.base);
}

::google::protobuf::Metadata file_level_metadata[41];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::InternalDimension, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::InternalDimension, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::InternalDimension, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::InternalDimension, measurementunit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::InternalDimension, slackmax_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::InternalDimension, tardymax_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::CapacityDimension, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::CapacityDimension, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::CapacityDimension, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::CapacityDimension, units_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::CapacityDimension, slackmax_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::CapacityDimension, tardymax_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::DimensionConfiguration, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::DimensionConfiguration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::DimensionConfiguration, timeconfig_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::DimensionConfiguration, distanceconfig_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::DimensionConfiguration, capacitydimensions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::DimensionConfiguration, weeklength_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::DimensionConfiguration, periodlength_),
  0,
  1,
  ~0u,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Geocode, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Geocode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Geocode, longitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Geocode, latitude_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Window, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Window, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Window, start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Window, end_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Window, slackcostcoef_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Window, tardycostcoef_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Window, slackmax_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Window, tardymax_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Location_Attribute, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Location_Attribute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Location_Attribute, dimensionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Location_Attribute, vehicleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Location_Attribute, quantity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Location_Attribute, arrivalwindows_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Location_Attribute, departurewindows_),
  0,
  1,
  2,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Location, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Location, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Location, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Location, geocode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Location, attributes_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Profile_customCycle, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Profile_customCycle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Profile_customCycle, visitprofile_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Profile, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Profile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Profile, frequencytype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Profile, allowablecycles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Profile, numvisits_),
  0,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Job_VehicleRelation, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Job_VehicleRelation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Job_VehicleRelation, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Job_VehicleRelation, vehicleids_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Job_Task_Attribute, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Job_Task_Attribute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Job_Task_Attribute, dimensionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Job_Task_Attribute, quantity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Job_Task_Attribute, windows_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Job_Task_Attribute, vehicleids_),
  0,
  1,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Job_Task, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Job_Task, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Job_Task, taskid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Job_Task, locationid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Job_Task, attributes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Job_Task, tripconstraints_),
  0,
  1,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Job, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Job, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Job, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Job, pickuptask_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Job, dropofftask_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Job, penalty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Job, vehiclerelations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Job, profile_),
  0,
  1,
  2,
  5,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::TransitSet_TransitValue, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::TransitSet_TransitValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::TransitSet_TransitValue, fromid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::TransitSet_TransitValue, toid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::TransitSet_TransitValue, value_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::TransitSet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::TransitSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::TransitSet, transits_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::TransitGenerator, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::TransitGenerator, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::TransitGenerator, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::TransitGenerator, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::TransitGenerator, transitset_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::VehicleClass_Attribute, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::VehicleClass_Attribute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::VehicleClass_Attribute, dimensionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::VehicleClass_Attribute, transitgeneratorid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::VehicleClass_Attribute, transitcoef_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::VehicleClass_Attribute, taskcoef_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::VehicleClass_Attribute, locationcoef_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::VehicleClass, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::VehicleClass, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::VehicleClass, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::VehicleClass, attributes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::VehicleClass, transitruleids_),
  0,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::VehicleCostClass_Attribute, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::VehicleCostClass_Attribute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::VehicleCostClass_Attribute, dimensionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::VehicleCostClass_Attribute, transitcostcoef_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::VehicleCostClass_Attribute, taskcostcoef_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::VehicleCostClass_Attribute, locationcostcoef_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::VehicleCostClass_Attribute, slackcostcoef_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::VehicleCostClass_Attribute, tardycostcoef_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::VehicleCostClass, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::VehicleCostClass, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::VehicleCostClass, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::VehicleCostClass, fixedcost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::VehicleCostClass, attributes_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Vehicle_Task_Attribute, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Vehicle_Task_Attribute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Vehicle_Task_Attribute, dimensionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Vehicle_Task_Attribute, quantity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Vehicle_Task_Attribute, windows_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Vehicle_Task, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Vehicle_Task, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Vehicle_Task, locationid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Vehicle_Task, attributes_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Vehicle_Shift, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Vehicle_Shift, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Vehicle_Shift, shiftstart_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Vehicle_Shift, shiftend_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Vehicle_Capacity, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Vehicle_Capacity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Vehicle_Capacity, dimensionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Vehicle_Capacity, capacity_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Vehicle, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Vehicle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Vehicle, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Vehicle, classid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Vehicle, costclassid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Vehicle, shift_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Vehicle, capacities_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Vehicle, transitruleids_),
  0,
  1,
  2,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::TaskSequence, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::TaskSequence, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::TaskSequence, vehicleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::TaskSequence, dayindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::TaskSequence, taskid_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::TransitRule_Trigger, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::TransitRule_Trigger, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::TransitRule_Trigger, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::TransitRule_Trigger, quantity_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::TransitRule, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::TransitRule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::TransitRule, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::TransitRule, dimensionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::TransitRule, usestandingstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::TransitRule, usetransitstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::TransitRule, ruleidprefix_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::TransitRule, triggers_),
  0,
  1,
  4,
  3,
  2,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Model, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Model, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Model, dimensions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Model, locations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Model, jobs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Model, vehicles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Model, vehicleclasses_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Model, vehiclecostclasses_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Model, transitrules_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Model, transitgenerators_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::Model, tasksequence_),
  0,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolveRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolveRequest, model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolveRequest, modelid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolveRequest, routes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolveRequest, solvetype_),
  1,
  0,
  ~0u,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_StopAttribute, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_StopAttribute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_StopAttribute, dimid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_StopAttribute, startvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_StopAttribute, endvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_StopAttribute, cost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_StopAttribute, slackvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_StopAttribute, slackcost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_StopAttribute, tardyvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_StopAttribute, tardycost_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_InterStopAttribute, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_InterStopAttribute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_InterStopAttribute, dimid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_InterStopAttribute, startvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_InterStopAttribute, endvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_InterStopAttribute, cost_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_Stop, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_Stop, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_Stop, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_Stop, sequence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_Stop, locationid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_Stop, taskid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_Stop, jobid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_Stop, attributes_),
  3,
  4,
  0,
  1,
  2,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_InterStop, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_InterStop, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_InterStop, fromstopid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_InterStop, tostopid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_InterStop, attributes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_InterStop, routesegments_),
  0,
  1,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_TransitRuleAttribute, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_TransitRuleAttribute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_TransitRuleAttribute, ruleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_TransitRuleAttribute, dimid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_TransitRuleAttribute, fromstopid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_TransitRuleAttribute, tostopid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_TransitRuleAttribute, startvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_TransitRuleAttribute, endvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_TransitRuleAttribute, cost_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_Route, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_Route, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_Route, vehicleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_Route, stops_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_Route, interstops_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_Route, fixedcost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_Route, transitruleattributes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_Route, day_),
  0,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_Infeasibility_Info, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_Infeasibility_Info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_Infeasibility_Info, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_Infeasibility_Info, dimid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_Infeasibility_Info, limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_Infeasibility_Info, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_Infeasibility_Info, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_Infeasibility_Info, constrainingtaskids_),
  0,
  1,
  2,
  3,
  4,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_Infeasibility, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_Infeasibility, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_Infeasibility, taskid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_Infeasibility, infeasibilityinfo_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_CompactSolution, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_CompactSolution, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_CompactSolution, tasksequence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_CompactSolution, objectives_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_CompactSolution, objectivenames_),
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_SolutionInstance, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_SolutionInstance, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_SolutionInstance, routes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse_SolutionInstance, infeasibilities_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse, frontier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NDD::SolutionResponse, instance_),
  ~0u,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::NDD::InternalDimension)},
  { 13, 22, sizeof(::NDD::CapacityDimension)},
  { 26, 36, sizeof(::NDD::DimensionConfiguration)},
  { 41, 48, sizeof(::NDD::Geocode)},
  { 50, 61, sizeof(::NDD::Window)},
  { 67, 77, sizeof(::NDD::Location_Attribute)},
  { 82, 90, sizeof(::NDD::Location)},
  { 93, 99, sizeof(::NDD::Profile_customCycle)},
  { 100, 108, sizeof(::NDD::Profile)},
  { 111, 118, sizeof(::NDD::Job_VehicleRelation)},
  { 120, 129, sizeof(::NDD::Job_Task_Attribute)},
  { 133, 142, sizeof(::NDD::Job_Task)},
  { 146, 157, sizeof(::NDD::Job)},
  { 163, 171, sizeof(::NDD::TransitSet_TransitValue)},
  { 174, 180, sizeof(::NDD::TransitSet)},
  { 181, 189, sizeof(::NDD::TransitGenerator)},
  { 192, 202, sizeof(::NDD::VehicleClass_Attribute)},
  { 207, 215, sizeof(::NDD::VehicleClass)},
  { 218, 229, sizeof(::NDD::VehicleCostClass_Attribute)},
  { 235, 243, sizeof(::NDD::VehicleCostClass)},
  { 246, 254, sizeof(::NDD::Vehicle_Task_Attribute)},
  { 257, 264, sizeof(::NDD::Vehicle_Task)},
  { 266, 273, sizeof(::NDD::Vehicle_Shift)},
  { 275, 282, sizeof(::NDD::Vehicle_Capacity)},
  { 284, 295, sizeof(::NDD::Vehicle)},
  { 301, 309, sizeof(::NDD::TaskSequence)},
  { 312, 319, sizeof(::NDD::TransitRule_Trigger)},
  { 321, 332, sizeof(::NDD::TransitRule)},
  { 338, 352, sizeof(::NDD::Model)},
  { 361, 370, sizeof(::NDD::SolveRequest)},
  { 374, 387, sizeof(::NDD::SolutionResponse_StopAttribute)},
  { 395, 404, sizeof(::NDD::SolutionResponse_InterStopAttribute)},
  { 408, 419, sizeof(::NDD::SolutionResponse_Stop)},
  { 425, 434, sizeof(::NDD::SolutionResponse_InterStop)},
  { 438, 450, sizeof(::NDD::SolutionResponse_TransitRuleAttribute)},
  { 457, 468, sizeof(::NDD::SolutionResponse_Route)},
  { 474, 485, sizeof(::NDD::SolutionResponse_Infeasibility_Info)},
  { 491, 498, sizeof(::NDD::SolutionResponse_Infeasibility)},
  { 500, 508, sizeof(::NDD::SolutionResponse_CompactSolution)},
  { 511, 518, sizeof(::NDD::SolutionResponse_SolutionInstance)},
  { 520, 527, sizeof(::NDD::SolutionResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::NDD::_InternalDimension_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NDD::_CapacityDimension_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NDD::_DimensionConfiguration_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NDD::_Geocode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NDD::_Window_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NDD::_Location_Attribute_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NDD::_Location_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NDD::_Profile_customCycle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NDD::_Profile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NDD::_Job_VehicleRelation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NDD::_Job_Task_Attribute_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NDD::_Job_Task_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NDD::_Job_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NDD::_TransitSet_TransitValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NDD::_TransitSet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NDD::_TransitGenerator_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NDD::_VehicleClass_Attribute_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NDD::_VehicleClass_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NDD::_VehicleCostClass_Attribute_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NDD::_VehicleCostClass_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NDD::_Vehicle_Task_Attribute_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NDD::_Vehicle_Task_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NDD::_Vehicle_Shift_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NDD::_Vehicle_Capacity_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NDD::_Vehicle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NDD::_TaskSequence_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NDD::_TransitRule_Trigger_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NDD::_TransitRule_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NDD::_Model_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NDD::_SolveRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NDD::_SolutionResponse_StopAttribute_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NDD::_SolutionResponse_InterStopAttribute_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NDD::_SolutionResponse_Stop_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NDD::_SolutionResponse_InterStop_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NDD::_SolutionResponse_TransitRuleAttribute_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NDD::_SolutionResponse_Route_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NDD::_SolutionResponse_Infeasibility_Info_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NDD::_SolutionResponse_Infeasibility_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NDD::_SolutionResponse_CompactSolution_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NDD::_SolutionResponse_SolutionInstance_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NDD::_SolutionResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "ndd-cmibu6krtqja.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 41);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\026ndd-cmibu6krtqja.proto\022\003NDD\"\351\001\n\021Intern"
      "alDimension\022\n\n\002id\030\001 \002(\t\022@\n\017measurementUn"
      "it\030\002 \002(\0162\'.NDD.InternalDimension.eMeasur"
      "ementUnit\022\023\n\010slackMax\030\003 \001(\002:\0010\022\023\n\010tardyM"
      "ax\030\004 \001(\002:\0010\"\\\n\020eMeasurementUnit\022\013\n\007SECON"
      "DS\020\000\022\013\n\007MINUTES\020\001\022\t\n\005HOURS\020\002\022\010\n\004DAYS\020\003\022\016"
      "\n\nKILOMETRES\020\004\022\t\n\005MILES\020\005\"X\n\021CapacityDim"
      "ension\022\n\n\002id\030\001 \002(\t\022\r\n\005units\030\002 \002(\t\022\023\n\010sla"
      "ckMax\030\003 \001(\002:\0010\022\023\n\010tardyMax\030\004 \001(\002:\0010\"\322\001\n\026"
      "DimensionConfiguration\022*\n\ntimeConfig\030\001 \001"
      "(\0132\026.NDD.InternalDimension\022.\n\016distanceCo"
      "nfig\030\002 \001(\0132\026.NDD.InternalDimension\0222\n\022ca"
      "pacityDimensions\030\003 \003(\0132\026.NDD.CapacityDim"
      "ension\022\022\n\nweekLength\030\004 \002(\005\022\024\n\014periodLeng"
      "th\030\005 \002(\005\".\n\007Geocode\022\021\n\tlongitude\030\001 \002(\002\022\020"
      "\n\010latitude\030\002 \002(\002\"\204\001\n\006Window\022\r\n\005start\030\001 \002"
      "(\002\022\013\n\003end\030\002 \002(\002\022\030\n\rslackCostCoef\030\003 \001(\002:\001"
      "0\022\030\n\rtardyCostCoef\030\004 \001(\002:\0010\022\024\n\010slackMax\030"
      "\005 \001(\002:\002-1\022\024\n\010tardyMax\030\006 \001(\002:\002-1\"\366\001\n\010Loca"
      "tion\022\n\n\002id\030\001 \002(\t\022\035\n\007geocode\030\002 \001(\0132\014.NDD."
      "Geocode\022+\n\nattributes\030\003 \003(\0132\027.NDD.Locati"
      "on.Attribute\032\221\001\n\tAttribute\022\023\n\013dimensionI"
      "d\030\001 \002(\t\022\021\n\tvehicleId\030\002 \001(\t\022\020\n\010quantity\030\003"
      " \001(\002\022#\n\016arrivalWindows\030\004 \003(\0132\013.NDD.Windo"
      "w\022%\n\020departureWindows\030\005 \003(\0132\013.NDD.Window"
      "\"\377\002\n\007Profile\022.\n\rfrequencyType\030\001 \002(\0162\027.ND"
      "D.Profile.eFrequency\0221\n\017allowableCycles\030"
      "\002 \003(\0132\030.NDD.Profile.customCycle\022\021\n\tnumVi"
      "sits\030\003 \001(\005\032#\n\013customCycle\022\024\n\014visitProfil"
      "e\030\002 \003(\010\"\330\001\n\neFrequency\022\n\n\006CUSTOM\020\000\022\026\n\022SE"
      "VEN_TIMES_A_WEEK\020\001\022\024\n\020SIX_TIMES_A_WEEK\020\002"
      "\022\025\n\021FIVE_TIMES_A_WEEK\020\003\022\025\n\021FOUR_TIMES_A_"
      "WEEK\020\004\022\026\n\022THREE_TIMES_A_WEEK\020\005\022\020\n\014TWICE_"
      "A_WEEK\020\006\022\017\n\013ONCE_A_WEEK\020\007\022\025\n\021EVERY_SECON"
      "D_WEEK\020\010\022\020\n\014ONCE_A_MONTH\020\t\"\324\004\n\003Job\022\n\n\002id"
      "\030\001 \002(\t\022!\n\npickupTask\030\002 \001(\0132\r.NDD.Job.Tas"
      "k\022\"\n\013dropoffTask\030\003 \001(\0132\r.NDD.Job.Task\022\017\n"
      "\007penalty\030\004 \002(\002\0222\n\020vehicleRelations\030\005 \001(\013"
      "2\030.NDD.Job.VehicleRelation\022\035\n\007profile\030\006 "
      "\002(\0132\014.NDD.Profile\032x\n\017VehicleRelation\022+\n\004"
      "type\030\001 \002(\0162\035.NDD.Job.VehicleRelation.Typ"
      "e\022\022\n\nvehicleIds\030\002 \003(\t\"$\n\004Type\022\r\n\tINCLUSI"
      "VE\020\000\022\r\n\tEXCLUSIVE\020\001\032\233\002\n\004Task\022\016\n\006taskId\030\001"
      " \002(\t\022\022\n\nlocationId\030\002 \002(\t\022+\n\nattributes\030\003"
      " \003(\0132\027.NDD.Job.Task.Attribute\0225\n\017tripCon"
      "straints\030\004 \003(\0162\034.NDD.Job.Task.TripConstr"
      "aint\032d\n\tAttribute\022\023\n\013dimensionId\030\001 \002(\t\022\020"
      "\n\010quantity\030\002 \001(\002\022\034\n\007windows\030\003 \003(\0132\013.NDD."
      "Window\022\022\n\nvehicleIds\030\004 \003(\t\"%\n\016TripConstr"
      "aint\022\t\n\005FIRST\020\000\022\010\n\004LAST\020\001\"y\n\nTransitSet\022"
      ".\n\010transits\030\001 \003(\0132\034.NDD.TransitSet.Trans"
      "itValue\032;\n\014TransitValue\022\016\n\006fromId\030\001 \002(\t\022"
      "\014\n\004toId\030\002 \002(\t\022\r\n\005value\030\003 \002(\002\"V\n\020TransitG"
      "enerator\022\n\n\002id\030\001 \002(\t\022\021\n\trequestId\030\002 \001(\t\022"
      "#\n\ntransitSet\030\003 \001(\0132\017.NDD.TransitSet\"\336\001\n"
      "\014VehicleClass\022\n\n\002id\030\001 \002(\t\022/\n\nattributes\030"
      "\002 \003(\0132\033.NDD.VehicleClass.Attribute\022\026\n\016tr"
      "ansitRuleIds\030\003 \003(\t\032y\n\tAttribute\022\023\n\013dimen"
      "sionId\030\001 \002(\t\022\032\n\022transitGeneratorId\030\002 \001(\t"
      "\022\023\n\013transitCoef\030\003 \001(\002\022\020\n\010taskCoef\030\004 \001(\002\022"
      "\024\n\014locationCoef\030\005 \001(\002\"\200\002\n\020VehicleCostCla"
      "ss\022\n\n\002id\030\001 \002(\t\022\021\n\tfixedCost\030\002 \002(\002\0223\n\natt"
      "ributes\030\003 \003(\0132\037.NDD.VehicleCostClass.Att"
      "ribute\032\227\001\n\tAttribute\022\023\n\013dimensionId\030\001 \002("
      "\t\022\027\n\017transitCostCoef\030\002 \001(\002\022\024\n\014taskCostCo"
      "ef\030\003 \001(\002\022\030\n\020locationCostCoef\030\004 \001(\002\022\025\n\rsl"
      "ackCostCoef\030\005 \001(\002\022\025\n\rtardyCostCoef\030\006 \001(\002"
      "\"\311\003\n\007Vehicle\022\n\n\002id\030\001 \002(\t\022\017\n\007classId\030\002 \002("
      "\t\022\023\n\013costClassId\030\003 \002(\t\022!\n\005shift\030\004 \003(\0132\022."
      "NDD.Vehicle.Shift\022)\n\ncapacities\030\005 \003(\0132\025."
      "NDD.Vehicle.Capacity\022\026\n\016transitRuleIds\030\006"
      " \003(\t\032\235\001\n\004Task\022\022\n\nlocationId\030\001 \002(\t\022/\n\natt"
      "ributes\030\002 \003(\0132\033.NDD.Vehicle.Task.Attribu"
      "te\032P\n\tAttribute\022\023\n\013dimensionId\030\001 \002(\t\022\020\n\010"
      "quantity\030\002 \001(\002\022\034\n\007windows\030\003 \003(\0132\013.NDD.Wi"
      "ndow\032S\n\005Shift\022%\n\nshiftStart\030\001 \002(\0132\021.NDD."
      "Vehicle.Task\022#\n\010shiftEnd\030\002 \001(\0132\021.NDD.Veh"
      "icle.Task\0321\n\010Capacity\022\023\n\013dimensionId\030\001 \002"
      "(\t\022\020\n\010capacity\030\002 \002(\002\"C\n\014TaskSequence\022\021\n\t"
      "vehicleId\030\001 \002(\t\022\020\n\010dayIndex\030\002 \002(\005\022\016\n\006tas"
      "kId\030\003 \003(\t\"\334\001\n\013TransitRule\022\n\n\002id\030\001 \002(\t\022\023\n"
      "\013dimensionId\030\002 \002(\t\022\036\n\020useStandingState\030\003"
      " \001(\010:\004true\022\036\n\017useTransitState\030\004 \001(\010:\005fal"
      "se\022\024\n\014ruleIdPrefix\030\005 \002(\t\022*\n\010triggers\030\006 \003"
      "(\0132\030.NDD.TransitRule.Trigger\032*\n\007Trigger\022"
      "\r\n\005value\030\001 \002(\002\022\020\n\010quantity\030\002 \002(\002\"\363\002\n\005Mod"
      "el\022/\n\ndimensions\030\001 \002(\0132\033.NDD.DimensionCo"
      "nfiguration\022 \n\tlocations\030\002 \003(\0132\r.NDD.Loc"
      "ation\022\026\n\004jobs\030\003 \003(\0132\010.NDD.Job\022\036\n\010vehicle"
      "s\030\004 \003(\0132\014.NDD.Vehicle\022)\n\016vehicleClasses\030"
      "\005 \003(\0132\021.NDD.VehicleClass\0221\n\022vehicleCostC"
      "lasses\030\006 \003(\0132\025.NDD.VehicleCostClass\022&\n\014t"
      "ransitRules\030\007 \003(\0132\020.NDD.TransitRule\0220\n\021t"
      "ransitGenerators\030\010 \003(\0132\025.NDD.TransitGene"
      "rator\022\'\n\014taskSequence\030\t \003(\0132\021.NDD.TaskSe"
      "quence\"\320\001\n\014SolveRequest\022\031\n\005model\030\001 \001(\0132\n"
      ".NDD.Model\022\017\n\007modelID\030\002 \001(\t\022!\n\006routes\030\003 "
      "\003(\0132\021.NDD.TaskSequence\0228\n\tsolveType\030\004 \001("
      "\0162\033.NDD.SolveRequest.SolveType:\010Optimise"
      "\"7\n\tSolveType\022\014\n\010Optimise\020\000\022\014\n\010Evaluate\020"
      "\001\022\016\n\nReOptimise\020\002\"\345\013\n\020SolutionResponse\0227"
      "\n\010frontier\030\001 \003(\0132%.NDD.SolutionResponse."
      "CompactSolution\0228\n\010instance\030\002 \001(\0132&.NDD."
      "SolutionResponse.SolutionInstance\032\240\001\n\rSt"
      "opAttribute\022\r\n\005dimId\030\001 \002(\t\022\022\n\nstartValue"
      "\030\002 \002(\002\022\020\n\010endValue\030\003 \002(\002\022\014\n\004cost\030\004 \002(\002\022\022"
      "\n\nslackValue\030\005 \002(\002\022\021\n\tslackCost\030\006 \002(\002\022\022\n"
      "\ntardyValue\030\007 \002(\002\022\021\n\ttardyCost\030\010 \002(\002\032W\n\022"
      "InterStopAttribute\022\r\n\005dimId\030\001 \002(\t\022\022\n\nsta"
      "rtValue\030\002 \002(\002\022\020\n\010endValue\030\003 \002(\002\022\014\n\004cost\030"
      "\004 \002(\002\032\220\001\n\004Stop\022\n\n\002id\030\001 \002(\005\022\020\n\010sequence\030\002"
      " \002(\005\022\022\n\nlocationId\030\003 \002(\t\022\016\n\006taskId\030\004 \002(\t"
      "\022\r\n\005jobId\030\005 \002(\t\0227\n\nattributes\030\006 \003(\0132#.ND"
      "D.SolutionResponse.StopAttribute\032\224\001\n\tInt"
      "erStop\022\022\n\nfromStopId\030\001 \002(\005\022\020\n\010toStopId\030\002"
      " \002(\005\022<\n\nattributes\030\003 \003(\0132(.NDD.SolutionR"
      "esponse.InterStopAttribute\022#\n\rrouteSegme"
      "nts\030\004 \003(\0132\014.NDD.Geocode\032\217\001\n\024TransitRuleA"
      "ttribute\022\016\n\006ruleId\030\001 \002(\t\022\r\n\005dimId\030\002 \002(\t\022"
      "\022\n\nfromStopId\030\003 \002(\005\022\020\n\010toStopId\030\004 \002(\005\022\022\n"
      "\nstartValue\030\005 \002(\002\022\020\n\010endValue\030\006 \002(\002\022\014\n\004c"
      "ost\030\007 \002(\002\032\345\001\n\005Route\022\021\n\tvehicleId\030\001 \002(\t\022)"
      "\n\005stops\030\002 \003(\0132\032.NDD.SolutionResponse.Sto"
      "p\0223\n\ninterStops\030\003 \003(\0132\037.NDD.SolutionResp"
      "onse.InterStop\022\021\n\tfixedCost\030\004 \003(\002\022I\n\025tra"
      "nsitRuleAttributes\030\005 \003(\0132*.NDD.SolutionR"
      "esponse.TransitRuleAttribute\022\013\n\003day\030\006 \002("
      "\005\032\326\001\n\rInfeasibility\022\016\n\006taskId\030\001 \002(\t\022C\n\021i"
      "nfeasibilityInfo\030\002 \003(\0132(.NDD.SolutionRes"
      "ponse.Infeasibility.Info\032p\n\004Info\022\017\n\007mess"
      "age\030\001 \002(\t\022\r\n\005dimId\030\002 \001(\t\022\r\n\005limit\030\003 \001(\002\022"
      "\r\n\005value\030\004 \001(\002\022\r\n\005count\030\005 \001(\003\022\033\n\023constra"
      "iningTaskIds\030\006 \003(\t\032f\n\017CompactSolution\022\'\n"
      "\014taskSequence\030\001 \003(\0132\021.NDD.TaskSequence\022\022"
      "\n\nobjectives\030\002 \003(\002\022\026\n\016objectiveNames\030\003 \003"
      "(\t\032}\n\020SolutionInstance\022+\n\006routes\030\001 \003(\0132\033"
      ".NDD.SolutionResponse.Route\022<\n\017infeasibi"
      "lities\030\002 \003(\0132#.NDD.SolutionResponse.Infe"
      "asibility"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 5529);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ndd-cmibu6krtqja.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ndd_2dcmibu6krtqja_2eproto
namespace NDD {
const ::google::protobuf::EnumDescriptor* InternalDimension_eMeasurementUnit_descriptor() {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_enum_descriptors[0];
}
bool InternalDimension_eMeasurementUnit_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const InternalDimension_eMeasurementUnit InternalDimension::SECONDS;
const InternalDimension_eMeasurementUnit InternalDimension::MINUTES;
const InternalDimension_eMeasurementUnit InternalDimension::HOURS;
const InternalDimension_eMeasurementUnit InternalDimension::DAYS;
const InternalDimension_eMeasurementUnit InternalDimension::KILOMETRES;
const InternalDimension_eMeasurementUnit InternalDimension::MILES;
const InternalDimension_eMeasurementUnit InternalDimension::eMeasurementUnit_MIN;
const InternalDimension_eMeasurementUnit InternalDimension::eMeasurementUnit_MAX;
const int InternalDimension::eMeasurementUnit_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Profile_eFrequency_descriptor() {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_enum_descriptors[1];
}
bool Profile_eFrequency_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Profile_eFrequency Profile::CUSTOM;
const Profile_eFrequency Profile::SEVEN_TIMES_A_WEEK;
const Profile_eFrequency Profile::SIX_TIMES_A_WEEK;
const Profile_eFrequency Profile::FIVE_TIMES_A_WEEK;
const Profile_eFrequency Profile::FOUR_TIMES_A_WEEK;
const Profile_eFrequency Profile::THREE_TIMES_A_WEEK;
const Profile_eFrequency Profile::TWICE_A_WEEK;
const Profile_eFrequency Profile::ONCE_A_WEEK;
const Profile_eFrequency Profile::EVERY_SECOND_WEEK;
const Profile_eFrequency Profile::ONCE_A_MONTH;
const Profile_eFrequency Profile::eFrequency_MIN;
const Profile_eFrequency Profile::eFrequency_MAX;
const int Profile::eFrequency_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Job_VehicleRelation_Type_descriptor() {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_enum_descriptors[2];
}
bool Job_VehicleRelation_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Job_VehicleRelation_Type Job_VehicleRelation::INCLUSIVE;
const Job_VehicleRelation_Type Job_VehicleRelation::EXCLUSIVE;
const Job_VehicleRelation_Type Job_VehicleRelation::Type_MIN;
const Job_VehicleRelation_Type Job_VehicleRelation::Type_MAX;
const int Job_VehicleRelation::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Job_Task_TripConstraint_descriptor() {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_enum_descriptors[3];
}
bool Job_Task_TripConstraint_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Job_Task_TripConstraint Job_Task::FIRST;
const Job_Task_TripConstraint Job_Task::LAST;
const Job_Task_TripConstraint Job_Task::TripConstraint_MIN;
const Job_Task_TripConstraint Job_Task::TripConstraint_MAX;
const int Job_Task::TripConstraint_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SolveRequest_SolveType_descriptor() {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_enum_descriptors[4];
}
bool SolveRequest_SolveType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SolveRequest_SolveType SolveRequest::Optimise;
const SolveRequest_SolveType SolveRequest::Evaluate;
const SolveRequest_SolveType SolveRequest::ReOptimise;
const SolveRequest_SolveType SolveRequest::SolveType_MIN;
const SolveRequest_SolveType SolveRequest::SolveType_MAX;
const int SolveRequest::SolveType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void InternalDimension::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InternalDimension::kIdFieldNumber;
const int InternalDimension::kMeasurementUnitFieldNumber;
const int InternalDimension::kSlackMaxFieldNumber;
const int InternalDimension::kTardyMaxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InternalDimension::InternalDimension()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_InternalDimension.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NDD.InternalDimension)
}
InternalDimension::InternalDimension(const InternalDimension& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  ::memcpy(&measurementunit_, &from.measurementunit_,
    static_cast<size_t>(reinterpret_cast<char*>(&tardymax_) -
    reinterpret_cast<char*>(&measurementunit_)) + sizeof(tardymax_));
  // @@protoc_insertion_point(copy_constructor:NDD.InternalDimension)
}

void InternalDimension::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&measurementunit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tardymax_) -
      reinterpret_cast<char*>(&measurementunit_)) + sizeof(tardymax_));
}

InternalDimension::~InternalDimension() {
  // @@protoc_insertion_point(destructor:NDD.InternalDimension)
  SharedDtor();
}

void InternalDimension::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InternalDimension::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InternalDimension::descriptor() {
  ::protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InternalDimension& InternalDimension::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_InternalDimension.base);
  return *internal_default_instance();
}


void InternalDimension::Clear() {
// @@protoc_insertion_point(message_clear_start:NDD.InternalDimension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    id_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&measurementunit_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&tardymax_) -
        reinterpret_cast<char*>(&measurementunit_)) + sizeof(tardymax_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool InternalDimension::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NDD.InternalDimension)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.InternalDimension.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .NDD.InternalDimension.eMeasurementUnit measurementUnit = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::NDD::InternalDimension_eMeasurementUnit_IsValid(value)) {
            set_measurementunit(static_cast< ::NDD::InternalDimension_eMeasurementUnit >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float slackMax = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_slackmax();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &slackmax_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float tardyMax = 4 [default = 0];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_tardymax();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &tardymax_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NDD.InternalDimension)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NDD.InternalDimension)
  return false;
#undef DO_
}

void InternalDimension::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NDD.InternalDimension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.InternalDimension.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required .NDD.InternalDimension.eMeasurementUnit measurementUnit = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->measurementunit(), output);
  }

  // optional float slackMax = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->slackmax(), output);
  }

  // optional float tardyMax = 4 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->tardymax(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NDD.InternalDimension)
}

::google::protobuf::uint8* InternalDimension::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NDD.InternalDimension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.InternalDimension.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required .NDD.InternalDimension.eMeasurementUnit measurementUnit = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->measurementunit(), target);
  }

  // optional float slackMax = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->slackmax(), target);
  }

  // optional float tardyMax = 4 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->tardymax(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NDD.InternalDimension)
  return target;
}

size_t InternalDimension::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:NDD.InternalDimension)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_measurementunit()) {
    // required .NDD.InternalDimension.eMeasurementUnit measurementUnit = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->measurementunit());
  }

  return total_size;
}
size_t InternalDimension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NDD.InternalDimension)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required .NDD.InternalDimension.eMeasurementUnit measurementUnit = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->measurementunit());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 12u) {
    // optional float slackMax = 3 [default = 0];
    if (has_slackmax()) {
      total_size += 1 + 4;
    }

    // optional float tardyMax = 4 [default = 0];
    if (has_tardymax()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InternalDimension::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NDD.InternalDimension)
  GOOGLE_DCHECK_NE(&from, this);
  const InternalDimension* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InternalDimension>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NDD.InternalDimension)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NDD.InternalDimension)
    MergeFrom(*source);
  }
}

void InternalDimension::MergeFrom(const InternalDimension& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NDD.InternalDimension)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      measurementunit_ = from.measurementunit_;
    }
    if (cached_has_bits & 0x00000004u) {
      slackmax_ = from.slackmax_;
    }
    if (cached_has_bits & 0x00000008u) {
      tardymax_ = from.tardymax_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void InternalDimension::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NDD.InternalDimension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InternalDimension::CopyFrom(const InternalDimension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NDD.InternalDimension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InternalDimension::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void InternalDimension::Swap(InternalDimension* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InternalDimension::InternalSwap(InternalDimension* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(measurementunit_, other->measurementunit_);
  swap(slackmax_, other->slackmax_);
  swap(tardymax_, other->tardymax_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InternalDimension::GetMetadata() const {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CapacityDimension::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CapacityDimension::kIdFieldNumber;
const int CapacityDimension::kUnitsFieldNumber;
const int CapacityDimension::kSlackMaxFieldNumber;
const int CapacityDimension::kTardyMaxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CapacityDimension::CapacityDimension()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_CapacityDimension.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NDD.CapacityDimension)
}
CapacityDimension::CapacityDimension(const CapacityDimension& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  units_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_units()) {
    units_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.units_);
  }
  ::memcpy(&slackmax_, &from.slackmax_,
    static_cast<size_t>(reinterpret_cast<char*>(&tardymax_) -
    reinterpret_cast<char*>(&slackmax_)) + sizeof(tardymax_));
  // @@protoc_insertion_point(copy_constructor:NDD.CapacityDimension)
}

void CapacityDimension::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  units_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&slackmax_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tardymax_) -
      reinterpret_cast<char*>(&slackmax_)) + sizeof(tardymax_));
}

CapacityDimension::~CapacityDimension() {
  // @@protoc_insertion_point(destructor:NDD.CapacityDimension)
  SharedDtor();
}

void CapacityDimension::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  units_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CapacityDimension::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CapacityDimension::descriptor() {
  ::protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CapacityDimension& CapacityDimension::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_CapacityDimension.base);
  return *internal_default_instance();
}


void CapacityDimension::Clear() {
// @@protoc_insertion_point(message_clear_start:NDD.CapacityDimension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      units_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&slackmax_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&tardymax_) -
        reinterpret_cast<char*>(&slackmax_)) + sizeof(tardymax_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CapacityDimension::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NDD.CapacityDimension)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.CapacityDimension.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string units = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_units()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->units().data(), static_cast<int>(this->units().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.CapacityDimension.units");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float slackMax = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_slackmax();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &slackmax_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float tardyMax = 4 [default = 0];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_tardymax();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &tardymax_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NDD.CapacityDimension)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NDD.CapacityDimension)
  return false;
#undef DO_
}

void CapacityDimension::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NDD.CapacityDimension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.CapacityDimension.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required string units = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->units().data(), static_cast<int>(this->units().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.CapacityDimension.units");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->units(), output);
  }

  // optional float slackMax = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->slackmax(), output);
  }

  // optional float tardyMax = 4 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->tardymax(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NDD.CapacityDimension)
}

::google::protobuf::uint8* CapacityDimension::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NDD.CapacityDimension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.CapacityDimension.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required string units = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->units().data(), static_cast<int>(this->units().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.CapacityDimension.units");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->units(), target);
  }

  // optional float slackMax = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->slackmax(), target);
  }

  // optional float tardyMax = 4 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->tardymax(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NDD.CapacityDimension)
  return target;
}

size_t CapacityDimension::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:NDD.CapacityDimension)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_units()) {
    // required string units = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->units());
  }

  return total_size;
}
size_t CapacityDimension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NDD.CapacityDimension)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required string units = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->units());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 12u) {
    // optional float slackMax = 3 [default = 0];
    if (has_slackmax()) {
      total_size += 1 + 4;
    }

    // optional float tardyMax = 4 [default = 0];
    if (has_tardymax()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CapacityDimension::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NDD.CapacityDimension)
  GOOGLE_DCHECK_NE(&from, this);
  const CapacityDimension* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CapacityDimension>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NDD.CapacityDimension)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NDD.CapacityDimension)
    MergeFrom(*source);
  }
}

void CapacityDimension::MergeFrom(const CapacityDimension& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NDD.CapacityDimension)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_units();
      units_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.units_);
    }
    if (cached_has_bits & 0x00000004u) {
      slackmax_ = from.slackmax_;
    }
    if (cached_has_bits & 0x00000008u) {
      tardymax_ = from.tardymax_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CapacityDimension::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NDD.CapacityDimension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CapacityDimension::CopyFrom(const CapacityDimension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NDD.CapacityDimension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CapacityDimension::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void CapacityDimension::Swap(CapacityDimension* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CapacityDimension::InternalSwap(CapacityDimension* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  units_.Swap(&other->units_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(slackmax_, other->slackmax_);
  swap(tardymax_, other->tardymax_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CapacityDimension::GetMetadata() const {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DimensionConfiguration::InitAsDefaultInstance() {
  ::NDD::_DimensionConfiguration_default_instance_._instance.get_mutable()->timeconfig_ = const_cast< ::NDD::InternalDimension*>(
      ::NDD::InternalDimension::internal_default_instance());
  ::NDD::_DimensionConfiguration_default_instance_._instance.get_mutable()->distanceconfig_ = const_cast< ::NDD::InternalDimension*>(
      ::NDD::InternalDimension::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DimensionConfiguration::kTimeConfigFieldNumber;
const int DimensionConfiguration::kDistanceConfigFieldNumber;
const int DimensionConfiguration::kCapacityDimensionsFieldNumber;
const int DimensionConfiguration::kWeekLengthFieldNumber;
const int DimensionConfiguration::kPeriodLengthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DimensionConfiguration::DimensionConfiguration()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_DimensionConfiguration.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NDD.DimensionConfiguration)
}
DimensionConfiguration::DimensionConfiguration(const DimensionConfiguration& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      capacitydimensions_(from.capacitydimensions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_timeconfig()) {
    timeconfig_ = new ::NDD::InternalDimension(*from.timeconfig_);
  } else {
    timeconfig_ = NULL;
  }
  if (from.has_distanceconfig()) {
    distanceconfig_ = new ::NDD::InternalDimension(*from.distanceconfig_);
  } else {
    distanceconfig_ = NULL;
  }
  ::memcpy(&weeklength_, &from.weeklength_,
    static_cast<size_t>(reinterpret_cast<char*>(&periodlength_) -
    reinterpret_cast<char*>(&weeklength_)) + sizeof(periodlength_));
  // @@protoc_insertion_point(copy_constructor:NDD.DimensionConfiguration)
}

void DimensionConfiguration::SharedCtor() {
  ::memset(&timeconfig_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&periodlength_) -
      reinterpret_cast<char*>(&timeconfig_)) + sizeof(periodlength_));
}

DimensionConfiguration::~DimensionConfiguration() {
  // @@protoc_insertion_point(destructor:NDD.DimensionConfiguration)
  SharedDtor();
}

void DimensionConfiguration::SharedDtor() {
  if (this != internal_default_instance()) delete timeconfig_;
  if (this != internal_default_instance()) delete distanceconfig_;
}

void DimensionConfiguration::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DimensionConfiguration::descriptor() {
  ::protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DimensionConfiguration& DimensionConfiguration::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_DimensionConfiguration.base);
  return *internal_default_instance();
}


void DimensionConfiguration::Clear() {
// @@protoc_insertion_point(message_clear_start:NDD.DimensionConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  capacitydimensions_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(timeconfig_ != NULL);
      timeconfig_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(distanceconfig_ != NULL);
      distanceconfig_->Clear();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&weeklength_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&periodlength_) -
        reinterpret_cast<char*>(&weeklength_)) + sizeof(periodlength_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DimensionConfiguration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NDD.DimensionConfiguration)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .NDD.InternalDimension timeConfig = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timeconfig()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .NDD.InternalDimension distanceConfig = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_distanceconfig()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NDD.CapacityDimension capacityDimensions = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_capacitydimensions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 weekLength = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_weeklength();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &weeklength_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 periodLength = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_periodlength();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &periodlength_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NDD.DimensionConfiguration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NDD.DimensionConfiguration)
  return false;
#undef DO_
}

void DimensionConfiguration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NDD.DimensionConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .NDD.InternalDimension timeConfig = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_timeconfig(), output);
  }

  // optional .NDD.InternalDimension distanceConfig = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_distanceconfig(), output);
  }

  // repeated .NDD.CapacityDimension capacityDimensions = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->capacitydimensions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->capacitydimensions(static_cast<int>(i)),
      output);
  }

  // required int32 weekLength = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->weeklength(), output);
  }

  // required int32 periodLength = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->periodlength(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NDD.DimensionConfiguration)
}

::google::protobuf::uint8* DimensionConfiguration::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NDD.DimensionConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .NDD.InternalDimension timeConfig = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_timeconfig(), deterministic, target);
  }

  // optional .NDD.InternalDimension distanceConfig = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_distanceconfig(), deterministic, target);
  }

  // repeated .NDD.CapacityDimension capacityDimensions = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->capacitydimensions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->capacitydimensions(static_cast<int>(i)), deterministic, target);
  }

  // required int32 weekLength = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->weeklength(), target);
  }

  // required int32 periodLength = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->periodlength(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NDD.DimensionConfiguration)
  return target;
}

size_t DimensionConfiguration::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:NDD.DimensionConfiguration)
  size_t total_size = 0;

  if (has_weeklength()) {
    // required int32 weekLength = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->weeklength());
  }

  if (has_periodlength()) {
    // required int32 periodLength = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->periodlength());
  }

  return total_size;
}
size_t DimensionConfiguration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NDD.DimensionConfiguration)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000c) ^ 0x0000000c) == 0) {  // All required fields are present.
    // required int32 weekLength = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->weeklength());

    // required int32 periodLength = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->periodlength());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .NDD.CapacityDimension capacityDimensions = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->capacitydimensions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->capacitydimensions(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional .NDD.InternalDimension timeConfig = 1;
    if (has_timeconfig()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *timeconfig_);
    }

    // optional .NDD.InternalDimension distanceConfig = 2;
    if (has_distanceconfig()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *distanceconfig_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DimensionConfiguration::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NDD.DimensionConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  const DimensionConfiguration* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DimensionConfiguration>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NDD.DimensionConfiguration)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NDD.DimensionConfiguration)
    MergeFrom(*source);
  }
}

void DimensionConfiguration::MergeFrom(const DimensionConfiguration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NDD.DimensionConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  capacitydimensions_.MergeFrom(from.capacitydimensions_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_timeconfig()->::NDD::InternalDimension::MergeFrom(from.timeconfig());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_distanceconfig()->::NDD::InternalDimension::MergeFrom(from.distanceconfig());
    }
    if (cached_has_bits & 0x00000004u) {
      weeklength_ = from.weeklength_;
    }
    if (cached_has_bits & 0x00000008u) {
      periodlength_ = from.periodlength_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DimensionConfiguration::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NDD.DimensionConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DimensionConfiguration::CopyFrom(const DimensionConfiguration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NDD.DimensionConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DimensionConfiguration::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000c) != 0x0000000c) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->capacitydimensions())) return false;
  if (has_timeconfig()) {
    if (!this->timeconfig_->IsInitialized()) return false;
  }
  if (has_distanceconfig()) {
    if (!this->distanceconfig_->IsInitialized()) return false;
  }
  return true;
}

void DimensionConfiguration::Swap(DimensionConfiguration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DimensionConfiguration::InternalSwap(DimensionConfiguration* other) {
  using std::swap;
  CastToBase(&capacitydimensions_)->InternalSwap(CastToBase(&other->capacitydimensions_));
  swap(timeconfig_, other->timeconfig_);
  swap(distanceconfig_, other->distanceconfig_);
  swap(weeklength_, other->weeklength_);
  swap(periodlength_, other->periodlength_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DimensionConfiguration::GetMetadata() const {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Geocode::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Geocode::kLongitudeFieldNumber;
const int Geocode::kLatitudeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Geocode::Geocode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Geocode.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NDD.Geocode)
}
Geocode::Geocode(const Geocode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&longitude_, &from.longitude_,
    static_cast<size_t>(reinterpret_cast<char*>(&latitude_) -
    reinterpret_cast<char*>(&longitude_)) + sizeof(latitude_));
  // @@protoc_insertion_point(copy_constructor:NDD.Geocode)
}

void Geocode::SharedCtor() {
  ::memset(&longitude_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&latitude_) -
      reinterpret_cast<char*>(&longitude_)) + sizeof(latitude_));
}

Geocode::~Geocode() {
  // @@protoc_insertion_point(destructor:NDD.Geocode)
  SharedDtor();
}

void Geocode::SharedDtor() {
}

void Geocode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Geocode::descriptor() {
  ::protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Geocode& Geocode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Geocode.base);
  return *internal_default_instance();
}


void Geocode::Clear() {
// @@protoc_insertion_point(message_clear_start:NDD.Geocode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&longitude_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&latitude_) -
        reinterpret_cast<char*>(&longitude_)) + sizeof(latitude_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Geocode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NDD.Geocode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float longitude = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_longitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float latitude = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_latitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NDD.Geocode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NDD.Geocode)
  return false;
#undef DO_
}

void Geocode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NDD.Geocode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float longitude = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->longitude(), output);
  }

  // required float latitude = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->latitude(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NDD.Geocode)
}

::google::protobuf::uint8* Geocode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NDD.Geocode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float longitude = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->longitude(), target);
  }

  // required float latitude = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->latitude(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NDD.Geocode)
  return target;
}

size_t Geocode::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:NDD.Geocode)
  size_t total_size = 0;

  if (has_longitude()) {
    // required float longitude = 1;
    total_size += 1 + 4;
  }

  if (has_latitude()) {
    // required float latitude = 2;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t Geocode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NDD.Geocode)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required float longitude = 1;
    total_size += 1 + 4;

    // required float latitude = 2;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Geocode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NDD.Geocode)
  GOOGLE_DCHECK_NE(&from, this);
  const Geocode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Geocode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NDD.Geocode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NDD.Geocode)
    MergeFrom(*source);
  }
}

void Geocode::MergeFrom(const Geocode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NDD.Geocode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      longitude_ = from.longitude_;
    }
    if (cached_has_bits & 0x00000002u) {
      latitude_ = from.latitude_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Geocode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NDD.Geocode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Geocode::CopyFrom(const Geocode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NDD.Geocode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Geocode::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Geocode::Swap(Geocode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Geocode::InternalSwap(Geocode* other) {
  using std::swap;
  swap(longitude_, other->longitude_);
  swap(latitude_, other->latitude_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Geocode::GetMetadata() const {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Window::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Window::kStartFieldNumber;
const int Window::kEndFieldNumber;
const int Window::kSlackCostCoefFieldNumber;
const int Window::kTardyCostCoefFieldNumber;
const int Window::kSlackMaxFieldNumber;
const int Window::kTardyMaxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Window::Window()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Window.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NDD.Window)
}
Window::Window(const Window& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&start_, &from.start_,
    static_cast<size_t>(reinterpret_cast<char*>(&tardymax_) -
    reinterpret_cast<char*>(&start_)) + sizeof(tardymax_));
  // @@protoc_insertion_point(copy_constructor:NDD.Window)
}

void Window::SharedCtor() {
  ::memset(&start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tardycostcoef_) -
      reinterpret_cast<char*>(&start_)) + sizeof(tardycostcoef_));
  slackmax_ = -1;
  tardymax_ = -1;
}

Window::~Window() {
  // @@protoc_insertion_point(destructor:NDD.Window)
  SharedDtor();
}

void Window::SharedDtor() {
}

void Window::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Window::descriptor() {
  ::protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Window& Window::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Window.base);
  return *internal_default_instance();
}


void Window::Clear() {
// @@protoc_insertion_point(message_clear_start:NDD.Window)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&start_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&tardycostcoef_) -
        reinterpret_cast<char*>(&start_)) + sizeof(tardycostcoef_));
    slackmax_ = -1;
    tardymax_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Window::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NDD.Window)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float start = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_start();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float end = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_end();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float slackCostCoef = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_slackcostcoef();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &slackcostcoef_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float tardyCostCoef = 4 [default = 0];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_tardycostcoef();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &tardycostcoef_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float slackMax = 5 [default = -1];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_slackmax();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &slackmax_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float tardyMax = 6 [default = -1];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {
          set_has_tardymax();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &tardymax_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NDD.Window)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NDD.Window)
  return false;
#undef DO_
}

void Window::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NDD.Window)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float start = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->start(), output);
  }

  // required float end = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->end(), output);
  }

  // optional float slackCostCoef = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->slackcostcoef(), output);
  }

  // optional float tardyCostCoef = 4 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->tardycostcoef(), output);
  }

  // optional float slackMax = 5 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->slackmax(), output);
  }

  // optional float tardyMax = 6 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->tardymax(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NDD.Window)
}

::google::protobuf::uint8* Window::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NDD.Window)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float start = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->start(), target);
  }

  // required float end = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->end(), target);
  }

  // optional float slackCostCoef = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->slackcostcoef(), target);
  }

  // optional float tardyCostCoef = 4 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->tardycostcoef(), target);
  }

  // optional float slackMax = 5 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->slackmax(), target);
  }

  // optional float tardyMax = 6 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->tardymax(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NDD.Window)
  return target;
}

size_t Window::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:NDD.Window)
  size_t total_size = 0;

  if (has_start()) {
    // required float start = 1;
    total_size += 1 + 4;
  }

  if (has_end()) {
    // required float end = 2;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t Window::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NDD.Window)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required float start = 1;
    total_size += 1 + 4;

    // required float end = 2;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 60u) {
    // optional float slackCostCoef = 3 [default = 0];
    if (has_slackcostcoef()) {
      total_size += 1 + 4;
    }

    // optional float tardyCostCoef = 4 [default = 0];
    if (has_tardycostcoef()) {
      total_size += 1 + 4;
    }

    // optional float slackMax = 5 [default = -1];
    if (has_slackmax()) {
      total_size += 1 + 4;
    }

    // optional float tardyMax = 6 [default = -1];
    if (has_tardymax()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Window::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NDD.Window)
  GOOGLE_DCHECK_NE(&from, this);
  const Window* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Window>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NDD.Window)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NDD.Window)
    MergeFrom(*source);
  }
}

void Window::MergeFrom(const Window& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NDD.Window)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      start_ = from.start_;
    }
    if (cached_has_bits & 0x00000002u) {
      end_ = from.end_;
    }
    if (cached_has_bits & 0x00000004u) {
      slackcostcoef_ = from.slackcostcoef_;
    }
    if (cached_has_bits & 0x00000008u) {
      tardycostcoef_ = from.tardycostcoef_;
    }
    if (cached_has_bits & 0x00000010u) {
      slackmax_ = from.slackmax_;
    }
    if (cached_has_bits & 0x00000020u) {
      tardymax_ = from.tardymax_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Window::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NDD.Window)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Window::CopyFrom(const Window& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NDD.Window)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Window::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Window::Swap(Window* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Window::InternalSwap(Window* other) {
  using std::swap;
  swap(start_, other->start_);
  swap(end_, other->end_);
  swap(slackcostcoef_, other->slackcostcoef_);
  swap(tardycostcoef_, other->tardycostcoef_);
  swap(slackmax_, other->slackmax_);
  swap(tardymax_, other->tardymax_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Window::GetMetadata() const {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Location_Attribute::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Location_Attribute::kDimensionIdFieldNumber;
const int Location_Attribute::kVehicleIdFieldNumber;
const int Location_Attribute::kQuantityFieldNumber;
const int Location_Attribute::kArrivalWindowsFieldNumber;
const int Location_Attribute::kDepartureWindowsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Location_Attribute::Location_Attribute()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Location_Attribute.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NDD.Location.Attribute)
}
Location_Attribute::Location_Attribute(const Location_Attribute& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      arrivalwindows_(from.arrivalwindows_),
      departurewindows_(from.departurewindows_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dimensionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_dimensionid()) {
    dimensionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dimensionid_);
  }
  vehicleid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_vehicleid()) {
    vehicleid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vehicleid_);
  }
  quantity_ = from.quantity_;
  // @@protoc_insertion_point(copy_constructor:NDD.Location.Attribute)
}

void Location_Attribute::SharedCtor() {
  dimensionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vehicleid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  quantity_ = 0;
}

Location_Attribute::~Location_Attribute() {
  // @@protoc_insertion_point(destructor:NDD.Location.Attribute)
  SharedDtor();
}

void Location_Attribute::SharedDtor() {
  dimensionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vehicleid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Location_Attribute::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Location_Attribute::descriptor() {
  ::protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Location_Attribute& Location_Attribute::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Location_Attribute.base);
  return *internal_default_instance();
}


void Location_Attribute::Clear() {
// @@protoc_insertion_point(message_clear_start:NDD.Location.Attribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arrivalwindows_.Clear();
  departurewindows_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      dimensionid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      vehicleid_.ClearNonDefaultToEmptyNoArena();
    }
  }
  quantity_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Location_Attribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NDD.Location.Attribute)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string dimensionId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dimensionid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dimensionid().data(), static_cast<int>(this->dimensionid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.Location.Attribute.dimensionId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string vehicleId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vehicleid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->vehicleid().data(), static_cast<int>(this->vehicleid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.Location.Attribute.vehicleId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float quantity = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_quantity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &quantity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NDD.Window arrivalWindows = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_arrivalwindows()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NDD.Window departureWindows = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_departurewindows()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NDD.Location.Attribute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NDD.Location.Attribute)
  return false;
#undef DO_
}

void Location_Attribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NDD.Location.Attribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string dimensionId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dimensionid().data(), static_cast<int>(this->dimensionid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.Location.Attribute.dimensionId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->dimensionid(), output);
  }

  // optional string vehicleId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vehicleid().data(), static_cast<int>(this->vehicleid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.Location.Attribute.vehicleId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->vehicleid(), output);
  }

  // optional float quantity = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->quantity(), output);
  }

  // repeated .NDD.Window arrivalWindows = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arrivalwindows_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->arrivalwindows(static_cast<int>(i)),
      output);
  }

  // repeated .NDD.Window departureWindows = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->departurewindows_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->departurewindows(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NDD.Location.Attribute)
}

::google::protobuf::uint8* Location_Attribute::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NDD.Location.Attribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string dimensionId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dimensionid().data(), static_cast<int>(this->dimensionid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.Location.Attribute.dimensionId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->dimensionid(), target);
  }

  // optional string vehicleId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vehicleid().data(), static_cast<int>(this->vehicleid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.Location.Attribute.vehicleId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->vehicleid(), target);
  }

  // optional float quantity = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->quantity(), target);
  }

  // repeated .NDD.Window arrivalWindows = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arrivalwindows_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->arrivalwindows(static_cast<int>(i)), deterministic, target);
  }

  // repeated .NDD.Window departureWindows = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->departurewindows_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->departurewindows(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NDD.Location.Attribute)
  return target;
}

size_t Location_Attribute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NDD.Location.Attribute)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string dimensionId = 1;
  if (has_dimensionid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dimensionid());
  }
  // repeated .NDD.Window arrivalWindows = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->arrivalwindows_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->arrivalwindows(static_cast<int>(i)));
    }
  }

  // repeated .NDD.Window departureWindows = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->departurewindows_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->departurewindows(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 6u) {
    // optional string vehicleId = 2;
    if (has_vehicleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->vehicleid());
    }

    // optional float quantity = 3;
    if (has_quantity()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Location_Attribute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NDD.Location.Attribute)
  GOOGLE_DCHECK_NE(&from, this);
  const Location_Attribute* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Location_Attribute>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NDD.Location.Attribute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NDD.Location.Attribute)
    MergeFrom(*source);
  }
}

void Location_Attribute::MergeFrom(const Location_Attribute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NDD.Location.Attribute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arrivalwindows_.MergeFrom(from.arrivalwindows_);
  departurewindows_.MergeFrom(from.departurewindows_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_dimensionid();
      dimensionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dimensionid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_vehicleid();
      vehicleid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vehicleid_);
    }
    if (cached_has_bits & 0x00000004u) {
      quantity_ = from.quantity_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Location_Attribute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NDD.Location.Attribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Location_Attribute::CopyFrom(const Location_Attribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NDD.Location.Attribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Location_Attribute::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->arrivalwindows())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->departurewindows())) return false;
  return true;
}

void Location_Attribute::Swap(Location_Attribute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Location_Attribute::InternalSwap(Location_Attribute* other) {
  using std::swap;
  CastToBase(&arrivalwindows_)->InternalSwap(CastToBase(&other->arrivalwindows_));
  CastToBase(&departurewindows_)->InternalSwap(CastToBase(&other->departurewindows_));
  dimensionid_.Swap(&other->dimensionid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  vehicleid_.Swap(&other->vehicleid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(quantity_, other->quantity_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Location_Attribute::GetMetadata() const {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Location::InitAsDefaultInstance() {
  ::NDD::_Location_default_instance_._instance.get_mutable()->geocode_ = const_cast< ::NDD::Geocode*>(
      ::NDD::Geocode::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Location::kIdFieldNumber;
const int Location::kGeocodeFieldNumber;
const int Location::kAttributesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Location::Location()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Location.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NDD.Location)
}
Location::Location(const Location& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      attributes_(from.attributes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_geocode()) {
    geocode_ = new ::NDD::Geocode(*from.geocode_);
  } else {
    geocode_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NDD.Location)
}

void Location::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  geocode_ = NULL;
}

Location::~Location() {
  // @@protoc_insertion_point(destructor:NDD.Location)
  SharedDtor();
}

void Location::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete geocode_;
}

void Location::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Location::descriptor() {
  ::protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Location& Location::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Location.base);
  return *internal_default_instance();
}


void Location::Clear() {
// @@protoc_insertion_point(message_clear_start:NDD.Location)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attributes_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(geocode_ != NULL);
      geocode_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Location::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NDD.Location)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.Location.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .NDD.Geocode geocode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_geocode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NDD.Location.Attribute attributes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_attributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NDD.Location)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NDD.Location)
  return false;
#undef DO_
}

void Location::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NDD.Location)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.Location.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional .NDD.Geocode geocode = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_geocode(), output);
  }

  // repeated .NDD.Location.Attribute attributes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attributes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->attributes(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NDD.Location)
}

::google::protobuf::uint8* Location::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NDD.Location)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.Location.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional .NDD.Geocode geocode = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_geocode(), deterministic, target);
  }

  // repeated .NDD.Location.Attribute attributes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attributes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->attributes(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NDD.Location)
  return target;
}

size_t Location::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NDD.Location)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }
  // repeated .NDD.Location.Attribute attributes = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->attributes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->attributes(static_cast<int>(i)));
    }
  }

  // optional .NDD.Geocode geocode = 2;
  if (has_geocode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *geocode_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Location::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NDD.Location)
  GOOGLE_DCHECK_NE(&from, this);
  const Location* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Location>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NDD.Location)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NDD.Location)
    MergeFrom(*source);
  }
}

void Location::MergeFrom(const Location& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NDD.Location)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attributes_.MergeFrom(from.attributes_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_geocode()->::NDD::Geocode::MergeFrom(from.geocode());
    }
  }
}

void Location::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NDD.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Location::CopyFrom(const Location& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NDD.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Location::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->attributes())) return false;
  if (has_geocode()) {
    if (!this->geocode_->IsInitialized()) return false;
  }
  return true;
}

void Location::Swap(Location* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Location::InternalSwap(Location* other) {
  using std::swap;
  CastToBase(&attributes_)->InternalSwap(CastToBase(&other->attributes_));
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(geocode_, other->geocode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Location::GetMetadata() const {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Profile_customCycle::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Profile_customCycle::kVisitProfileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Profile_customCycle::Profile_customCycle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Profile_customCycle.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NDD.Profile.customCycle)
}
Profile_customCycle::Profile_customCycle(const Profile_customCycle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      visitprofile_(from.visitprofile_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NDD.Profile.customCycle)
}

void Profile_customCycle::SharedCtor() {
}

Profile_customCycle::~Profile_customCycle() {
  // @@protoc_insertion_point(destructor:NDD.Profile.customCycle)
  SharedDtor();
}

void Profile_customCycle::SharedDtor() {
}

void Profile_customCycle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Profile_customCycle::descriptor() {
  ::protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Profile_customCycle& Profile_customCycle::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Profile_customCycle.base);
  return *internal_default_instance();
}


void Profile_customCycle::Clear() {
// @@protoc_insertion_point(message_clear_start:NDD.Profile.customCycle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  visitprofile_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Profile_customCycle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NDD.Profile.customCycle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bool visitProfile = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 16u, input, this->mutable_visitprofile())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_visitprofile())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NDD.Profile.customCycle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NDD.Profile.customCycle)
  return false;
#undef DO_
}

void Profile_customCycle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NDD.Profile.customCycle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool visitProfile = 2;
  for (int i = 0, n = this->visitprofile_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
      2, this->visitprofile(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NDD.Profile.customCycle)
}

::google::protobuf::uint8* Profile_customCycle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NDD.Profile.customCycle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool visitProfile = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteBoolToArray(2, this->visitprofile_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NDD.Profile.customCycle)
  return target;
}

size_t Profile_customCycle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NDD.Profile.customCycle)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated bool visitProfile = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->visitprofile_size());
    size_t data_size = 1UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->visitprofile_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Profile_customCycle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NDD.Profile.customCycle)
  GOOGLE_DCHECK_NE(&from, this);
  const Profile_customCycle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Profile_customCycle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NDD.Profile.customCycle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NDD.Profile.customCycle)
    MergeFrom(*source);
  }
}

void Profile_customCycle::MergeFrom(const Profile_customCycle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NDD.Profile.customCycle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  visitprofile_.MergeFrom(from.visitprofile_);
}

void Profile_customCycle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NDD.Profile.customCycle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Profile_customCycle::CopyFrom(const Profile_customCycle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NDD.Profile.customCycle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Profile_customCycle::IsInitialized() const {
  return true;
}

void Profile_customCycle::Swap(Profile_customCycle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Profile_customCycle::InternalSwap(Profile_customCycle* other) {
  using std::swap;
  visitprofile_.InternalSwap(&other->visitprofile_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Profile_customCycle::GetMetadata() const {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Profile::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Profile::kFrequencyTypeFieldNumber;
const int Profile::kAllowableCyclesFieldNumber;
const int Profile::kNumVisitsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Profile::Profile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Profile.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NDD.Profile)
}
Profile::Profile(const Profile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      allowablecycles_(from.allowablecycles_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&frequencytype_, &from.frequencytype_,
    static_cast<size_t>(reinterpret_cast<char*>(&numvisits_) -
    reinterpret_cast<char*>(&frequencytype_)) + sizeof(numvisits_));
  // @@protoc_insertion_point(copy_constructor:NDD.Profile)
}

void Profile::SharedCtor() {
  ::memset(&frequencytype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&numvisits_) -
      reinterpret_cast<char*>(&frequencytype_)) + sizeof(numvisits_));
}

Profile::~Profile() {
  // @@protoc_insertion_point(destructor:NDD.Profile)
  SharedDtor();
}

void Profile::SharedDtor() {
}

void Profile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Profile::descriptor() {
  ::protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Profile& Profile::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Profile.base);
  return *internal_default_instance();
}


void Profile::Clear() {
// @@protoc_insertion_point(message_clear_start:NDD.Profile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  allowablecycles_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&frequencytype_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&numvisits_) -
        reinterpret_cast<char*>(&frequencytype_)) + sizeof(numvisits_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Profile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NDD.Profile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .NDD.Profile.eFrequency frequencyType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::NDD::Profile_eFrequency_IsValid(value)) {
            set_frequencytype(static_cast< ::NDD::Profile_eFrequency >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NDD.Profile.customCycle allowableCycles = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_allowablecycles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 numVisits = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_numvisits();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &numvisits_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NDD.Profile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NDD.Profile)
  return false;
#undef DO_
}

void Profile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NDD.Profile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .NDD.Profile.eFrequency frequencyType = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->frequencytype(), output);
  }

  // repeated .NDD.Profile.customCycle allowableCycles = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->allowablecycles_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->allowablecycles(static_cast<int>(i)),
      output);
  }

  // optional int32 numVisits = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->numvisits(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NDD.Profile)
}

::google::protobuf::uint8* Profile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NDD.Profile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .NDD.Profile.eFrequency frequencyType = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->frequencytype(), target);
  }

  // repeated .NDD.Profile.customCycle allowableCycles = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->allowablecycles_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->allowablecycles(static_cast<int>(i)), deterministic, target);
  }

  // optional int32 numVisits = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->numvisits(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NDD.Profile)
  return target;
}

size_t Profile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NDD.Profile)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .NDD.Profile.eFrequency frequencyType = 1;
  if (has_frequencytype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->frequencytype());
  }
  // repeated .NDD.Profile.customCycle allowableCycles = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->allowablecycles_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->allowablecycles(static_cast<int>(i)));
    }
  }

  // optional int32 numVisits = 3;
  if (has_numvisits()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->numvisits());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Profile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NDD.Profile)
  GOOGLE_DCHECK_NE(&from, this);
  const Profile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Profile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NDD.Profile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NDD.Profile)
    MergeFrom(*source);
  }
}

void Profile::MergeFrom(const Profile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NDD.Profile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  allowablecycles_.MergeFrom(from.allowablecycles_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      frequencytype_ = from.frequencytype_;
    }
    if (cached_has_bits & 0x00000002u) {
      numvisits_ = from.numvisits_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Profile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NDD.Profile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Profile::CopyFrom(const Profile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NDD.Profile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Profile::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Profile::Swap(Profile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Profile::InternalSwap(Profile* other) {
  using std::swap;
  CastToBase(&allowablecycles_)->InternalSwap(CastToBase(&other->allowablecycles_));
  swap(frequencytype_, other->frequencytype_);
  swap(numvisits_, other->numvisits_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Profile::GetMetadata() const {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Job_VehicleRelation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Job_VehicleRelation::kTypeFieldNumber;
const int Job_VehicleRelation::kVehicleIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Job_VehicleRelation::Job_VehicleRelation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Job_VehicleRelation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NDD.Job.VehicleRelation)
}
Job_VehicleRelation::Job_VehicleRelation(const Job_VehicleRelation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      vehicleids_(from.vehicleids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:NDD.Job.VehicleRelation)
}

void Job_VehicleRelation::SharedCtor() {
  type_ = 0;
}

Job_VehicleRelation::~Job_VehicleRelation() {
  // @@protoc_insertion_point(destructor:NDD.Job.VehicleRelation)
  SharedDtor();
}

void Job_VehicleRelation::SharedDtor() {
}

void Job_VehicleRelation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Job_VehicleRelation::descriptor() {
  ::protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Job_VehicleRelation& Job_VehicleRelation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Job_VehicleRelation.base);
  return *internal_default_instance();
}


void Job_VehicleRelation::Clear() {
// @@protoc_insertion_point(message_clear_start:NDD.Job.VehicleRelation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vehicleids_.Clear();
  type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Job_VehicleRelation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NDD.Job.VehicleRelation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .NDD.Job.VehicleRelation.Type type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::NDD::Job_VehicleRelation_Type_IsValid(value)) {
            set_type(static_cast< ::NDD::Job_VehicleRelation_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string vehicleIds = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_vehicleids()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->vehicleids(this->vehicleids_size() - 1).data(),
            static_cast<int>(this->vehicleids(this->vehicleids_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.Job.VehicleRelation.vehicleIds");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NDD.Job.VehicleRelation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NDD.Job.VehicleRelation)
  return false;
#undef DO_
}

void Job_VehicleRelation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NDD.Job.VehicleRelation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .NDD.Job.VehicleRelation.Type type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // repeated string vehicleIds = 2;
  for (int i = 0, n = this->vehicleids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vehicleids(i).data(), static_cast<int>(this->vehicleids(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.Job.VehicleRelation.vehicleIds");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->vehicleids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NDD.Job.VehicleRelation)
}

::google::protobuf::uint8* Job_VehicleRelation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NDD.Job.VehicleRelation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .NDD.Job.VehicleRelation.Type type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // repeated string vehicleIds = 2;
  for (int i = 0, n = this->vehicleids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vehicleids(i).data(), static_cast<int>(this->vehicleids(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.Job.VehicleRelation.vehicleIds");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->vehicleids(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NDD.Job.VehicleRelation)
  return target;
}

size_t Job_VehicleRelation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NDD.Job.VehicleRelation)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .NDD.Job.VehicleRelation.Type type = 1;
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }
  // repeated string vehicleIds = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->vehicleids_size());
  for (int i = 0, n = this->vehicleids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->vehicleids(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Job_VehicleRelation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NDD.Job.VehicleRelation)
  GOOGLE_DCHECK_NE(&from, this);
  const Job_VehicleRelation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Job_VehicleRelation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NDD.Job.VehicleRelation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NDD.Job.VehicleRelation)
    MergeFrom(*source);
  }
}

void Job_VehicleRelation::MergeFrom(const Job_VehicleRelation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NDD.Job.VehicleRelation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  vehicleids_.MergeFrom(from.vehicleids_);
  if (from.has_type()) {
    set_type(from.type());
  }
}

void Job_VehicleRelation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NDD.Job.VehicleRelation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Job_VehicleRelation::CopyFrom(const Job_VehicleRelation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NDD.Job.VehicleRelation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Job_VehicleRelation::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Job_VehicleRelation::Swap(Job_VehicleRelation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Job_VehicleRelation::InternalSwap(Job_VehicleRelation* other) {
  using std::swap;
  vehicleids_.InternalSwap(CastToBase(&other->vehicleids_));
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Job_VehicleRelation::GetMetadata() const {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Job_Task_Attribute::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Job_Task_Attribute::kDimensionIdFieldNumber;
const int Job_Task_Attribute::kQuantityFieldNumber;
const int Job_Task_Attribute::kWindowsFieldNumber;
const int Job_Task_Attribute::kVehicleIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Job_Task_Attribute::Job_Task_Attribute()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Job_Task_Attribute.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NDD.Job.Task.Attribute)
}
Job_Task_Attribute::Job_Task_Attribute(const Job_Task_Attribute& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      windows_(from.windows_),
      vehicleids_(from.vehicleids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dimensionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_dimensionid()) {
    dimensionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dimensionid_);
  }
  quantity_ = from.quantity_;
  // @@protoc_insertion_point(copy_constructor:NDD.Job.Task.Attribute)
}

void Job_Task_Attribute::SharedCtor() {
  dimensionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  quantity_ = 0;
}

Job_Task_Attribute::~Job_Task_Attribute() {
  // @@protoc_insertion_point(destructor:NDD.Job.Task.Attribute)
  SharedDtor();
}

void Job_Task_Attribute::SharedDtor() {
  dimensionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Job_Task_Attribute::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Job_Task_Attribute::descriptor() {
  ::protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Job_Task_Attribute& Job_Task_Attribute::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Job_Task_Attribute.base);
  return *internal_default_instance();
}


void Job_Task_Attribute::Clear() {
// @@protoc_insertion_point(message_clear_start:NDD.Job.Task.Attribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  windows_.Clear();
  vehicleids_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    dimensionid_.ClearNonDefaultToEmptyNoArena();
  }
  quantity_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Job_Task_Attribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NDD.Job.Task.Attribute)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string dimensionId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dimensionid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dimensionid().data(), static_cast<int>(this->dimensionid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.Job.Task.Attribute.dimensionId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float quantity = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_quantity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &quantity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NDD.Window windows = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_windows()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string vehicleIds = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_vehicleids()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->vehicleids(this->vehicleids_size() - 1).data(),
            static_cast<int>(this->vehicleids(this->vehicleids_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.Job.Task.Attribute.vehicleIds");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NDD.Job.Task.Attribute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NDD.Job.Task.Attribute)
  return false;
#undef DO_
}

void Job_Task_Attribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NDD.Job.Task.Attribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string dimensionId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dimensionid().data(), static_cast<int>(this->dimensionid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.Job.Task.Attribute.dimensionId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->dimensionid(), output);
  }

  // optional float quantity = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->quantity(), output);
  }

  // repeated .NDD.Window windows = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->windows_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->windows(static_cast<int>(i)),
      output);
  }

  // repeated string vehicleIds = 4;
  for (int i = 0, n = this->vehicleids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vehicleids(i).data(), static_cast<int>(this->vehicleids(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.Job.Task.Attribute.vehicleIds");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->vehicleids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NDD.Job.Task.Attribute)
}

::google::protobuf::uint8* Job_Task_Attribute::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NDD.Job.Task.Attribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string dimensionId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dimensionid().data(), static_cast<int>(this->dimensionid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.Job.Task.Attribute.dimensionId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->dimensionid(), target);
  }

  // optional float quantity = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->quantity(), target);
  }

  // repeated .NDD.Window windows = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->windows_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->windows(static_cast<int>(i)), deterministic, target);
  }

  // repeated string vehicleIds = 4;
  for (int i = 0, n = this->vehicleids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vehicleids(i).data(), static_cast<int>(this->vehicleids(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.Job.Task.Attribute.vehicleIds");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->vehicleids(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NDD.Job.Task.Attribute)
  return target;
}

size_t Job_Task_Attribute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NDD.Job.Task.Attribute)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string dimensionId = 1;
  if (has_dimensionid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dimensionid());
  }
  // repeated .NDD.Window windows = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->windows_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->windows(static_cast<int>(i)));
    }
  }

  // repeated string vehicleIds = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->vehicleids_size());
  for (int i = 0, n = this->vehicleids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->vehicleids(i));
  }

  // optional float quantity = 2;
  if (has_quantity()) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Job_Task_Attribute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NDD.Job.Task.Attribute)
  GOOGLE_DCHECK_NE(&from, this);
  const Job_Task_Attribute* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Job_Task_Attribute>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NDD.Job.Task.Attribute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NDD.Job.Task.Attribute)
    MergeFrom(*source);
  }
}

void Job_Task_Attribute::MergeFrom(const Job_Task_Attribute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NDD.Job.Task.Attribute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  windows_.MergeFrom(from.windows_);
  vehicleids_.MergeFrom(from.vehicleids_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_dimensionid();
      dimensionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dimensionid_);
    }
    if (cached_has_bits & 0x00000002u) {
      quantity_ = from.quantity_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Job_Task_Attribute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NDD.Job.Task.Attribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Job_Task_Attribute::CopyFrom(const Job_Task_Attribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NDD.Job.Task.Attribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Job_Task_Attribute::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->windows())) return false;
  return true;
}

void Job_Task_Attribute::Swap(Job_Task_Attribute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Job_Task_Attribute::InternalSwap(Job_Task_Attribute* other) {
  using std::swap;
  CastToBase(&windows_)->InternalSwap(CastToBase(&other->windows_));
  vehicleids_.InternalSwap(CastToBase(&other->vehicleids_));
  dimensionid_.Swap(&other->dimensionid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(quantity_, other->quantity_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Job_Task_Attribute::GetMetadata() const {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Job_Task::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Job_Task::kTaskIdFieldNumber;
const int Job_Task::kLocationIdFieldNumber;
const int Job_Task::kAttributesFieldNumber;
const int Job_Task::kTripConstraintsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Job_Task::Job_Task()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Job_Task.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NDD.Job.Task)
}
Job_Task::Job_Task(const Job_Task& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      attributes_(from.attributes_),
      tripconstraints_(from.tripconstraints_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  taskid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_taskid()) {
    taskid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskid_);
  }
  locationid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_locationid()) {
    locationid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.locationid_);
  }
  // @@protoc_insertion_point(copy_constructor:NDD.Job.Task)
}

void Job_Task::SharedCtor() {
  taskid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  locationid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Job_Task::~Job_Task() {
  // @@protoc_insertion_point(destructor:NDD.Job.Task)
  SharedDtor();
}

void Job_Task::SharedDtor() {
  taskid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  locationid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Job_Task::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Job_Task::descriptor() {
  ::protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Job_Task& Job_Task::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Job_Task.base);
  return *internal_default_instance();
}


void Job_Task::Clear() {
// @@protoc_insertion_point(message_clear_start:NDD.Job.Task)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attributes_.Clear();
  tripconstraints_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      taskid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      locationid_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Job_Task::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NDD.Job.Task)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string taskId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_taskid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->taskid().data(), static_cast<int>(this->taskid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.Job.Task.taskId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string locationId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_locationid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->locationid().data(), static_cast<int>(this->locationid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.Job.Task.locationId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NDD.Job.Task.Attribute attributes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_attributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NDD.Job.Task.TripConstraint tripConstraints = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::NDD::Job_Task_TripConstraint_IsValid(value)) {
            add_tripconstraints(static_cast< ::NDD::Job_Task_TripConstraint >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast< ::google::protobuf::uint64>(value));
          }
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 4,
                 ::NDD::Job_Task_TripConstraint_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_tripconstraints())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NDD.Job.Task)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NDD.Job.Task)
  return false;
#undef DO_
}

void Job_Task::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NDD.Job.Task)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string taskId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->taskid().data(), static_cast<int>(this->taskid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.Job.Task.taskId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->taskid(), output);
  }

  // required string locationId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->locationid().data(), static_cast<int>(this->locationid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.Job.Task.locationId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->locationid(), output);
  }

  // repeated .NDD.Job.Task.Attribute attributes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attributes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->attributes(static_cast<int>(i)),
      output);
  }

  // repeated .NDD.Job.Task.TripConstraint tripConstraints = 4;
  for (int i = 0, n = this->tripconstraints_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->tripconstraints(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NDD.Job.Task)
}

::google::protobuf::uint8* Job_Task::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NDD.Job.Task)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string taskId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->taskid().data(), static_cast<int>(this->taskid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.Job.Task.taskId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->taskid(), target);
  }

  // required string locationId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->locationid().data(), static_cast<int>(this->locationid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.Job.Task.locationId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->locationid(), target);
  }

  // repeated .NDD.Job.Task.Attribute attributes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attributes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->attributes(static_cast<int>(i)), deterministic, target);
  }

  // repeated .NDD.Job.Task.TripConstraint tripConstraints = 4;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    4, this->tripconstraints_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NDD.Job.Task)
  return target;
}

size_t Job_Task::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:NDD.Job.Task)
  size_t total_size = 0;

  if (has_taskid()) {
    // required string taskId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->taskid());
  }

  if (has_locationid()) {
    // required string locationId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->locationid());
  }

  return total_size;
}
size_t Job_Task::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NDD.Job.Task)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string taskId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->taskid());

    // required string locationId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->locationid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .NDD.Job.Task.Attribute attributes = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->attributes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->attributes(static_cast<int>(i)));
    }
  }

  // repeated .NDD.Job.Task.TripConstraint tripConstraints = 4;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->tripconstraints_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->tripconstraints(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Job_Task::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NDD.Job.Task)
  GOOGLE_DCHECK_NE(&from, this);
  const Job_Task* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Job_Task>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NDD.Job.Task)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NDD.Job.Task)
    MergeFrom(*source);
  }
}

void Job_Task::MergeFrom(const Job_Task& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NDD.Job.Task)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attributes_.MergeFrom(from.attributes_);
  tripconstraints_.MergeFrom(from.tripconstraints_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_taskid();
      taskid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_locationid();
      locationid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.locationid_);
    }
  }
}

void Job_Task::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NDD.Job.Task)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Job_Task::CopyFrom(const Job_Task& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NDD.Job.Task)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Job_Task::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->attributes())) return false;
  return true;
}

void Job_Task::Swap(Job_Task* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Job_Task::InternalSwap(Job_Task* other) {
  using std::swap;
  CastToBase(&attributes_)->InternalSwap(CastToBase(&other->attributes_));
  tripconstraints_.InternalSwap(&other->tripconstraints_);
  taskid_.Swap(&other->taskid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  locationid_.Swap(&other->locationid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Job_Task::GetMetadata() const {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Job::InitAsDefaultInstance() {
  ::NDD::_Job_default_instance_._instance.get_mutable()->pickuptask_ = const_cast< ::NDD::Job_Task*>(
      ::NDD::Job_Task::internal_default_instance());
  ::NDD::_Job_default_instance_._instance.get_mutable()->dropofftask_ = const_cast< ::NDD::Job_Task*>(
      ::NDD::Job_Task::internal_default_instance());
  ::NDD::_Job_default_instance_._instance.get_mutable()->vehiclerelations_ = const_cast< ::NDD::Job_VehicleRelation*>(
      ::NDD::Job_VehicleRelation::internal_default_instance());
  ::NDD::_Job_default_instance_._instance.get_mutable()->profile_ = const_cast< ::NDD::Profile*>(
      ::NDD::Profile::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Job::kIdFieldNumber;
const int Job::kPickupTaskFieldNumber;
const int Job::kDropoffTaskFieldNumber;
const int Job::kPenaltyFieldNumber;
const int Job::kVehicleRelationsFieldNumber;
const int Job::kProfileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Job::Job()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Job.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NDD.Job)
}
Job::Job(const Job& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_pickuptask()) {
    pickuptask_ = new ::NDD::Job_Task(*from.pickuptask_);
  } else {
    pickuptask_ = NULL;
  }
  if (from.has_dropofftask()) {
    dropofftask_ = new ::NDD::Job_Task(*from.dropofftask_);
  } else {
    dropofftask_ = NULL;
  }
  if (from.has_vehiclerelations()) {
    vehiclerelations_ = new ::NDD::Job_VehicleRelation(*from.vehiclerelations_);
  } else {
    vehiclerelations_ = NULL;
  }
  if (from.has_profile()) {
    profile_ = new ::NDD::Profile(*from.profile_);
  } else {
    profile_ = NULL;
  }
  penalty_ = from.penalty_;
  // @@protoc_insertion_point(copy_constructor:NDD.Job)
}

void Job::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pickuptask_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&penalty_) -
      reinterpret_cast<char*>(&pickuptask_)) + sizeof(penalty_));
}

Job::~Job() {
  // @@protoc_insertion_point(destructor:NDD.Job)
  SharedDtor();
}

void Job::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete pickuptask_;
  if (this != internal_default_instance()) delete dropofftask_;
  if (this != internal_default_instance()) delete vehiclerelations_;
  if (this != internal_default_instance()) delete profile_;
}

void Job::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Job::descriptor() {
  ::protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Job& Job::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Job.base);
  return *internal_default_instance();
}


void Job::Clear() {
// @@protoc_insertion_point(message_clear_start:NDD.Job)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(pickuptask_ != NULL);
      pickuptask_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(dropofftask_ != NULL);
      dropofftask_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(vehiclerelations_ != NULL);
      vehiclerelations_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(profile_ != NULL);
      profile_->Clear();
    }
  }
  penalty_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Job::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NDD.Job)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.Job.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .NDD.Job.Task pickupTask = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pickuptask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .NDD.Job.Task dropoffTask = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dropofftask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float penalty = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_penalty();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &penalty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .NDD.Job.VehicleRelation vehicleRelations = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vehiclerelations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .NDD.Profile profile = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_profile()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NDD.Job)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NDD.Job)
  return false;
#undef DO_
}

void Job::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NDD.Job)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.Job.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional .NDD.Job.Task pickupTask = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_pickuptask(), output);
  }

  // optional .NDD.Job.Task dropoffTask = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_dropofftask(), output);
  }

  // required float penalty = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->penalty(), output);
  }

  // optional .NDD.Job.VehicleRelation vehicleRelations = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_vehiclerelations(), output);
  }

  // required .NDD.Profile profile = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_profile(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NDD.Job)
}

::google::protobuf::uint8* Job::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NDD.Job)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.Job.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional .NDD.Job.Task pickupTask = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_pickuptask(), deterministic, target);
  }

  // optional .NDD.Job.Task dropoffTask = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_dropofftask(), deterministic, target);
  }

  // required float penalty = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->penalty(), target);
  }

  // optional .NDD.Job.VehicleRelation vehicleRelations = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_vehiclerelations(), deterministic, target);
  }

  // required .NDD.Profile profile = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_profile(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NDD.Job)
  return target;
}

size_t Job::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:NDD.Job)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_profile()) {
    // required .NDD.Profile profile = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *profile_);
  }

  if (has_penalty()) {
    // required float penalty = 4;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t Job::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NDD.Job)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000031) ^ 0x00000031) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required .NDD.Profile profile = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *profile_);

    // required float penalty = 4;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 14u) {
    // optional .NDD.Job.Task pickupTask = 2;
    if (has_pickuptask()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pickuptask_);
    }

    // optional .NDD.Job.Task dropoffTask = 3;
    if (has_dropofftask()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *dropofftask_);
    }

    // optional .NDD.Job.VehicleRelation vehicleRelations = 5;
    if (has_vehiclerelations()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *vehiclerelations_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Job::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NDD.Job)
  GOOGLE_DCHECK_NE(&from, this);
  const Job* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Job>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NDD.Job)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NDD.Job)
    MergeFrom(*source);
  }
}

void Job::MergeFrom(const Job& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NDD.Job)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_pickuptask()->::NDD::Job_Task::MergeFrom(from.pickuptask());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_dropofftask()->::NDD::Job_Task::MergeFrom(from.dropofftask());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_vehiclerelations()->::NDD::Job_VehicleRelation::MergeFrom(from.vehiclerelations());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_profile()->::NDD::Profile::MergeFrom(from.profile());
    }
    if (cached_has_bits & 0x00000020u) {
      penalty_ = from.penalty_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Job::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NDD.Job)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Job::CopyFrom(const Job& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NDD.Job)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Job::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000031) != 0x00000031) return false;
  if (has_pickuptask()) {
    if (!this->pickuptask_->IsInitialized()) return false;
  }
  if (has_dropofftask()) {
    if (!this->dropofftask_->IsInitialized()) return false;
  }
  if (has_vehiclerelations()) {
    if (!this->vehiclerelations_->IsInitialized()) return false;
  }
  if (has_profile()) {
    if (!this->profile_->IsInitialized()) return false;
  }
  return true;
}

void Job::Swap(Job* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Job::InternalSwap(Job* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pickuptask_, other->pickuptask_);
  swap(dropofftask_, other->dropofftask_);
  swap(vehiclerelations_, other->vehiclerelations_);
  swap(profile_, other->profile_);
  swap(penalty_, other->penalty_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Job::GetMetadata() const {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransitSet_TransitValue::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransitSet_TransitValue::kFromIdFieldNumber;
const int TransitSet_TransitValue::kToIdFieldNumber;
const int TransitSet_TransitValue::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransitSet_TransitValue::TransitSet_TransitValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_TransitSet_TransitValue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NDD.TransitSet.TransitValue)
}
TransitSet_TransitValue::TransitSet_TransitValue(const TransitSet_TransitValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_fromid()) {
    fromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fromid_);
  }
  toid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_toid()) {
    toid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.toid_);
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:NDD.TransitSet.TransitValue)
}

void TransitSet_TransitValue::SharedCtor() {
  fromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  toid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = 0;
}

TransitSet_TransitValue::~TransitSet_TransitValue() {
  // @@protoc_insertion_point(destructor:NDD.TransitSet.TransitValue)
  SharedDtor();
}

void TransitSet_TransitValue::SharedDtor() {
  fromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  toid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TransitSet_TransitValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TransitSet_TransitValue::descriptor() {
  ::protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransitSet_TransitValue& TransitSet_TransitValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_TransitSet_TransitValue.base);
  return *internal_default_instance();
}


void TransitSet_TransitValue::Clear() {
// @@protoc_insertion_point(message_clear_start:NDD.TransitSet.TransitValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      fromid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      toid_.ClearNonDefaultToEmptyNoArena();
    }
  }
  value_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TransitSet_TransitValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NDD.TransitSet.TransitValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string fromId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fromid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->fromid().data(), static_cast<int>(this->fromid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.TransitSet.TransitValue.fromId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string toId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_toid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->toid().data(), static_cast<int>(this->toid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.TransitSet.TransitValue.toId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NDD.TransitSet.TransitValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NDD.TransitSet.TransitValue)
  return false;
#undef DO_
}

void TransitSet_TransitValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NDD.TransitSet.TransitValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string fromId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fromid().data(), static_cast<int>(this->fromid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.TransitSet.TransitValue.fromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->fromid(), output);
  }

  // required string toId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->toid().data(), static_cast<int>(this->toid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.TransitSet.TransitValue.toId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->toid(), output);
  }

  // required float value = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NDD.TransitSet.TransitValue)
}

::google::protobuf::uint8* TransitSet_TransitValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NDD.TransitSet.TransitValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string fromId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fromid().data(), static_cast<int>(this->fromid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.TransitSet.TransitValue.fromId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->fromid(), target);
  }

  // required string toId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->toid().data(), static_cast<int>(this->toid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.TransitSet.TransitValue.toId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->toid(), target);
  }

  // required float value = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NDD.TransitSet.TransitValue)
  return target;
}

size_t TransitSet_TransitValue::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:NDD.TransitSet.TransitValue)
  size_t total_size = 0;

  if (has_fromid()) {
    // required string fromId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fromid());
  }

  if (has_toid()) {
    // required string toId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->toid());
  }

  if (has_value()) {
    // required float value = 3;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t TransitSet_TransitValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NDD.TransitSet.TransitValue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string fromId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fromid());

    // required string toId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->toid());

    // required float value = 3;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransitSet_TransitValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NDD.TransitSet.TransitValue)
  GOOGLE_DCHECK_NE(&from, this);
  const TransitSet_TransitValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransitSet_TransitValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NDD.TransitSet.TransitValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NDD.TransitSet.TransitValue)
    MergeFrom(*source);
  }
}

void TransitSet_TransitValue::MergeFrom(const TransitSet_TransitValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NDD.TransitSet.TransitValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_fromid();
      fromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fromid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_toid();
      toid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.toid_);
    }
    if (cached_has_bits & 0x00000004u) {
      value_ = from.value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TransitSet_TransitValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NDD.TransitSet.TransitValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransitSet_TransitValue::CopyFrom(const TransitSet_TransitValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NDD.TransitSet.TransitValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransitSet_TransitValue::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void TransitSet_TransitValue::Swap(TransitSet_TransitValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransitSet_TransitValue::InternalSwap(TransitSet_TransitValue* other) {
  using std::swap;
  fromid_.Swap(&other->fromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  toid_.Swap(&other->toid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(value_, other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TransitSet_TransitValue::GetMetadata() const {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransitSet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransitSet::kTransitsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransitSet::TransitSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_TransitSet.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NDD.TransitSet)
}
TransitSet::TransitSet(const TransitSet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      transits_(from.transits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NDD.TransitSet)
}

void TransitSet::SharedCtor() {
}

TransitSet::~TransitSet() {
  // @@protoc_insertion_point(destructor:NDD.TransitSet)
  SharedDtor();
}

void TransitSet::SharedDtor() {
}

void TransitSet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TransitSet::descriptor() {
  ::protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransitSet& TransitSet::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_TransitSet.base);
  return *internal_default_instance();
}


void TransitSet::Clear() {
// @@protoc_insertion_point(message_clear_start:NDD.TransitSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transits_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TransitSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NDD.TransitSet)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .NDD.TransitSet.TransitValue transits = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_transits()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NDD.TransitSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NDD.TransitSet)
  return false;
#undef DO_
}

void TransitSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NDD.TransitSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .NDD.TransitSet.TransitValue transits = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transits_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->transits(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NDD.TransitSet)
}

::google::protobuf::uint8* TransitSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NDD.TransitSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .NDD.TransitSet.TransitValue transits = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transits_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->transits(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NDD.TransitSet)
  return target;
}

size_t TransitSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NDD.TransitSet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .NDD.TransitSet.TransitValue transits = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->transits_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->transits(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransitSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NDD.TransitSet)
  GOOGLE_DCHECK_NE(&from, this);
  const TransitSet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransitSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NDD.TransitSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NDD.TransitSet)
    MergeFrom(*source);
  }
}

void TransitSet::MergeFrom(const TransitSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NDD.TransitSet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  transits_.MergeFrom(from.transits_);
}

void TransitSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NDD.TransitSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransitSet::CopyFrom(const TransitSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NDD.TransitSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransitSet::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->transits())) return false;
  return true;
}

void TransitSet::Swap(TransitSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransitSet::InternalSwap(TransitSet* other) {
  using std::swap;
  CastToBase(&transits_)->InternalSwap(CastToBase(&other->transits_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TransitSet::GetMetadata() const {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransitGenerator::InitAsDefaultInstance() {
  ::NDD::_TransitGenerator_default_instance_._instance.get_mutable()->transitset_ = const_cast< ::NDD::TransitSet*>(
      ::NDD::TransitSet::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransitGenerator::kIdFieldNumber;
const int TransitGenerator::kRequestIdFieldNumber;
const int TransitGenerator::kTransitSetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransitGenerator::TransitGenerator()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_TransitGenerator.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NDD.TransitGenerator)
}
TransitGenerator::TransitGenerator(const TransitGenerator& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  requestid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_requestid()) {
    requestid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.requestid_);
  }
  if (from.has_transitset()) {
    transitset_ = new ::NDD::TransitSet(*from.transitset_);
  } else {
    transitset_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NDD.TransitGenerator)
}

void TransitGenerator::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requestid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transitset_ = NULL;
}

TransitGenerator::~TransitGenerator() {
  // @@protoc_insertion_point(destructor:NDD.TransitGenerator)
  SharedDtor();
}

void TransitGenerator::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requestid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete transitset_;
}

void TransitGenerator::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TransitGenerator::descriptor() {
  ::protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransitGenerator& TransitGenerator::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_TransitGenerator.base);
  return *internal_default_instance();
}


void TransitGenerator::Clear() {
// @@protoc_insertion_point(message_clear_start:NDD.TransitGenerator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      requestid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(transitset_ != NULL);
      transitset_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TransitGenerator::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NDD.TransitGenerator)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.TransitGenerator.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string requestId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_requestid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->requestid().data(), static_cast<int>(this->requestid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.TransitGenerator.requestId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .NDD.TransitSet transitSet = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_transitset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NDD.TransitGenerator)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NDD.TransitGenerator)
  return false;
#undef DO_
}

void TransitGenerator::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NDD.TransitGenerator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.TransitGenerator.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional string requestId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->requestid().data(), static_cast<int>(this->requestid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.TransitGenerator.requestId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->requestid(), output);
  }

  // optional .NDD.TransitSet transitSet = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_transitset(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NDD.TransitGenerator)
}

::google::protobuf::uint8* TransitGenerator::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NDD.TransitGenerator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.TransitGenerator.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional string requestId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->requestid().data(), static_cast<int>(this->requestid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.TransitGenerator.requestId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->requestid(), target);
  }

  // optional .NDD.TransitSet transitSet = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_transitset(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NDD.TransitGenerator)
  return target;
}

size_t TransitGenerator::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NDD.TransitGenerator)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }
  if (_has_bits_[0 / 32] & 6u) {
    // optional string requestId = 2;
    if (has_requestid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->requestid());
    }

    // optional .NDD.TransitSet transitSet = 3;
    if (has_transitset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *transitset_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransitGenerator::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NDD.TransitGenerator)
  GOOGLE_DCHECK_NE(&from, this);
  const TransitGenerator* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransitGenerator>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NDD.TransitGenerator)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NDD.TransitGenerator)
    MergeFrom(*source);
  }
}

void TransitGenerator::MergeFrom(const TransitGenerator& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NDD.TransitGenerator)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_requestid();
      requestid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.requestid_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_transitset()->::NDD::TransitSet::MergeFrom(from.transitset());
    }
  }
}

void TransitGenerator::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NDD.TransitGenerator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransitGenerator::CopyFrom(const TransitGenerator& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NDD.TransitGenerator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransitGenerator::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_transitset()) {
    if (!this->transitset_->IsInitialized()) return false;
  }
  return true;
}

void TransitGenerator::Swap(TransitGenerator* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransitGenerator::InternalSwap(TransitGenerator* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  requestid_.Swap(&other->requestid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(transitset_, other->transitset_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TransitGenerator::GetMetadata() const {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VehicleClass_Attribute::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VehicleClass_Attribute::kDimensionIdFieldNumber;
const int VehicleClass_Attribute::kTransitGeneratorIdFieldNumber;
const int VehicleClass_Attribute::kTransitCoefFieldNumber;
const int VehicleClass_Attribute::kTaskCoefFieldNumber;
const int VehicleClass_Attribute::kLocationCoefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VehicleClass_Attribute::VehicleClass_Attribute()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_VehicleClass_Attribute.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NDD.VehicleClass.Attribute)
}
VehicleClass_Attribute::VehicleClass_Attribute(const VehicleClass_Attribute& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dimensionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_dimensionid()) {
    dimensionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dimensionid_);
  }
  transitgeneratorid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_transitgeneratorid()) {
    transitgeneratorid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transitgeneratorid_);
  }
  ::memcpy(&transitcoef_, &from.transitcoef_,
    static_cast<size_t>(reinterpret_cast<char*>(&locationcoef_) -
    reinterpret_cast<char*>(&transitcoef_)) + sizeof(locationcoef_));
  // @@protoc_insertion_point(copy_constructor:NDD.VehicleClass.Attribute)
}

void VehicleClass_Attribute::SharedCtor() {
  dimensionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transitgeneratorid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&transitcoef_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&locationcoef_) -
      reinterpret_cast<char*>(&transitcoef_)) + sizeof(locationcoef_));
}

VehicleClass_Attribute::~VehicleClass_Attribute() {
  // @@protoc_insertion_point(destructor:NDD.VehicleClass.Attribute)
  SharedDtor();
}

void VehicleClass_Attribute::SharedDtor() {
  dimensionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transitgeneratorid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VehicleClass_Attribute::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VehicleClass_Attribute::descriptor() {
  ::protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VehicleClass_Attribute& VehicleClass_Attribute::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_VehicleClass_Attribute.base);
  return *internal_default_instance();
}


void VehicleClass_Attribute::Clear() {
// @@protoc_insertion_point(message_clear_start:NDD.VehicleClass.Attribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      dimensionid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      transitgeneratorid_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 28u) {
    ::memset(&transitcoef_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&locationcoef_) -
        reinterpret_cast<char*>(&transitcoef_)) + sizeof(locationcoef_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VehicleClass_Attribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NDD.VehicleClass.Attribute)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string dimensionId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dimensionid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dimensionid().data(), static_cast<int>(this->dimensionid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.VehicleClass.Attribute.dimensionId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string transitGeneratorId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transitgeneratorid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->transitgeneratorid().data(), static_cast<int>(this->transitgeneratorid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.VehicleClass.Attribute.transitGeneratorId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float transitCoef = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_transitcoef();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &transitcoef_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float taskCoef = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_taskcoef();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &taskcoef_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float locationCoef = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_locationcoef();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &locationcoef_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NDD.VehicleClass.Attribute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NDD.VehicleClass.Attribute)
  return false;
#undef DO_
}

void VehicleClass_Attribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NDD.VehicleClass.Attribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string dimensionId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dimensionid().data(), static_cast<int>(this->dimensionid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.VehicleClass.Attribute.dimensionId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->dimensionid(), output);
  }

  // optional string transitGeneratorId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transitgeneratorid().data(), static_cast<int>(this->transitgeneratorid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.VehicleClass.Attribute.transitGeneratorId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->transitgeneratorid(), output);
  }

  // optional float transitCoef = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->transitcoef(), output);
  }

  // optional float taskCoef = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->taskcoef(), output);
  }

  // optional float locationCoef = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->locationcoef(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NDD.VehicleClass.Attribute)
}

::google::protobuf::uint8* VehicleClass_Attribute::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NDD.VehicleClass.Attribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string dimensionId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dimensionid().data(), static_cast<int>(this->dimensionid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.VehicleClass.Attribute.dimensionId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->dimensionid(), target);
  }

  // optional string transitGeneratorId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transitgeneratorid().data(), static_cast<int>(this->transitgeneratorid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.VehicleClass.Attribute.transitGeneratorId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->transitgeneratorid(), target);
  }

  // optional float transitCoef = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->transitcoef(), target);
  }

  // optional float taskCoef = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->taskcoef(), target);
  }

  // optional float locationCoef = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->locationcoef(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NDD.VehicleClass.Attribute)
  return target;
}

size_t VehicleClass_Attribute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NDD.VehicleClass.Attribute)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string dimensionId = 1;
  if (has_dimensionid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dimensionid());
  }
  if (_has_bits_[0 / 32] & 30u) {
    // optional string transitGeneratorId = 2;
    if (has_transitgeneratorid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->transitgeneratorid());
    }

    // optional float transitCoef = 3;
    if (has_transitcoef()) {
      total_size += 1 + 4;
    }

    // optional float taskCoef = 4;
    if (has_taskcoef()) {
      total_size += 1 + 4;
    }

    // optional float locationCoef = 5;
    if (has_locationcoef()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VehicleClass_Attribute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NDD.VehicleClass.Attribute)
  GOOGLE_DCHECK_NE(&from, this);
  const VehicleClass_Attribute* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VehicleClass_Attribute>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NDD.VehicleClass.Attribute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NDD.VehicleClass.Attribute)
    MergeFrom(*source);
  }
}

void VehicleClass_Attribute::MergeFrom(const VehicleClass_Attribute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NDD.VehicleClass.Attribute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_dimensionid();
      dimensionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dimensionid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_transitgeneratorid();
      transitgeneratorid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transitgeneratorid_);
    }
    if (cached_has_bits & 0x00000004u) {
      transitcoef_ = from.transitcoef_;
    }
    if (cached_has_bits & 0x00000008u) {
      taskcoef_ = from.taskcoef_;
    }
    if (cached_has_bits & 0x00000010u) {
      locationcoef_ = from.locationcoef_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VehicleClass_Attribute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NDD.VehicleClass.Attribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VehicleClass_Attribute::CopyFrom(const VehicleClass_Attribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NDD.VehicleClass.Attribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VehicleClass_Attribute::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void VehicleClass_Attribute::Swap(VehicleClass_Attribute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VehicleClass_Attribute::InternalSwap(VehicleClass_Attribute* other) {
  using std::swap;
  dimensionid_.Swap(&other->dimensionid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  transitgeneratorid_.Swap(&other->transitgeneratorid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(transitcoef_, other->transitcoef_);
  swap(taskcoef_, other->taskcoef_);
  swap(locationcoef_, other->locationcoef_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VehicleClass_Attribute::GetMetadata() const {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VehicleClass::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VehicleClass::kIdFieldNumber;
const int VehicleClass::kAttributesFieldNumber;
const int VehicleClass::kTransitRuleIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VehicleClass::VehicleClass()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_VehicleClass.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NDD.VehicleClass)
}
VehicleClass::VehicleClass(const VehicleClass& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      attributes_(from.attributes_),
      transitruleids_(from.transitruleids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:NDD.VehicleClass)
}

void VehicleClass::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

VehicleClass::~VehicleClass() {
  // @@protoc_insertion_point(destructor:NDD.VehicleClass)
  SharedDtor();
}

void VehicleClass::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VehicleClass::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VehicleClass::descriptor() {
  ::protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VehicleClass& VehicleClass::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_VehicleClass.base);
  return *internal_default_instance();
}


void VehicleClass::Clear() {
// @@protoc_insertion_point(message_clear_start:NDD.VehicleClass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attributes_.Clear();
  transitruleids_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    id_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VehicleClass::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NDD.VehicleClass)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.VehicleClass.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NDD.VehicleClass.Attribute attributes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_attributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string transitRuleIds = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_transitruleids()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->transitruleids(this->transitruleids_size() - 1).data(),
            static_cast<int>(this->transitruleids(this->transitruleids_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.VehicleClass.transitRuleIds");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NDD.VehicleClass)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NDD.VehicleClass)
  return false;
#undef DO_
}

void VehicleClass::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NDD.VehicleClass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.VehicleClass.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // repeated .NDD.VehicleClass.Attribute attributes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attributes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->attributes(static_cast<int>(i)),
      output);
  }

  // repeated string transitRuleIds = 3;
  for (int i = 0, n = this->transitruleids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transitruleids(i).data(), static_cast<int>(this->transitruleids(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.VehicleClass.transitRuleIds");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->transitruleids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NDD.VehicleClass)
}

::google::protobuf::uint8* VehicleClass::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NDD.VehicleClass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.VehicleClass.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // repeated .NDD.VehicleClass.Attribute attributes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attributes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->attributes(static_cast<int>(i)), deterministic, target);
  }

  // repeated string transitRuleIds = 3;
  for (int i = 0, n = this->transitruleids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transitruleids(i).data(), static_cast<int>(this->transitruleids(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.VehicleClass.transitRuleIds");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->transitruleids(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NDD.VehicleClass)
  return target;
}

size_t VehicleClass::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NDD.VehicleClass)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }
  // repeated .NDD.VehicleClass.Attribute attributes = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->attributes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->attributes(static_cast<int>(i)));
    }
  }

  // repeated string transitRuleIds = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->transitruleids_size());
  for (int i = 0, n = this->transitruleids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->transitruleids(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VehicleClass::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NDD.VehicleClass)
  GOOGLE_DCHECK_NE(&from, this);
  const VehicleClass* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VehicleClass>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NDD.VehicleClass)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NDD.VehicleClass)
    MergeFrom(*source);
  }
}

void VehicleClass::MergeFrom(const VehicleClass& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NDD.VehicleClass)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attributes_.MergeFrom(from.attributes_);
  transitruleids_.MergeFrom(from.transitruleids_);
  if (from.has_id()) {
    set_has_id();
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void VehicleClass::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NDD.VehicleClass)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VehicleClass::CopyFrom(const VehicleClass& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NDD.VehicleClass)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VehicleClass::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->attributes())) return false;
  return true;
}

void VehicleClass::Swap(VehicleClass* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VehicleClass::InternalSwap(VehicleClass* other) {
  using std::swap;
  CastToBase(&attributes_)->InternalSwap(CastToBase(&other->attributes_));
  transitruleids_.InternalSwap(CastToBase(&other->transitruleids_));
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VehicleClass::GetMetadata() const {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VehicleCostClass_Attribute::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VehicleCostClass_Attribute::kDimensionIdFieldNumber;
const int VehicleCostClass_Attribute::kTransitCostCoefFieldNumber;
const int VehicleCostClass_Attribute::kTaskCostCoefFieldNumber;
const int VehicleCostClass_Attribute::kLocationCostCoefFieldNumber;
const int VehicleCostClass_Attribute::kSlackCostCoefFieldNumber;
const int VehicleCostClass_Attribute::kTardyCostCoefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VehicleCostClass_Attribute::VehicleCostClass_Attribute()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_VehicleCostClass_Attribute.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NDD.VehicleCostClass.Attribute)
}
VehicleCostClass_Attribute::VehicleCostClass_Attribute(const VehicleCostClass_Attribute& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dimensionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_dimensionid()) {
    dimensionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dimensionid_);
  }
  ::memcpy(&transitcostcoef_, &from.transitcostcoef_,
    static_cast<size_t>(reinterpret_cast<char*>(&tardycostcoef_) -
    reinterpret_cast<char*>(&transitcostcoef_)) + sizeof(tardycostcoef_));
  // @@protoc_insertion_point(copy_constructor:NDD.VehicleCostClass.Attribute)
}

void VehicleCostClass_Attribute::SharedCtor() {
  dimensionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&transitcostcoef_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tardycostcoef_) -
      reinterpret_cast<char*>(&transitcostcoef_)) + sizeof(tardycostcoef_));
}

VehicleCostClass_Attribute::~VehicleCostClass_Attribute() {
  // @@protoc_insertion_point(destructor:NDD.VehicleCostClass.Attribute)
  SharedDtor();
}

void VehicleCostClass_Attribute::SharedDtor() {
  dimensionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VehicleCostClass_Attribute::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VehicleCostClass_Attribute::descriptor() {
  ::protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VehicleCostClass_Attribute& VehicleCostClass_Attribute::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_VehicleCostClass_Attribute.base);
  return *internal_default_instance();
}


void VehicleCostClass_Attribute::Clear() {
// @@protoc_insertion_point(message_clear_start:NDD.VehicleCostClass.Attribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    dimensionid_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 62u) {
    ::memset(&transitcostcoef_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&tardycostcoef_) -
        reinterpret_cast<char*>(&transitcostcoef_)) + sizeof(tardycostcoef_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VehicleCostClass_Attribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NDD.VehicleCostClass.Attribute)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string dimensionId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dimensionid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dimensionid().data(), static_cast<int>(this->dimensionid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.VehicleCostClass.Attribute.dimensionId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float transitCostCoef = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_transitcostcoef();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &transitcostcoef_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float taskCostCoef = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_taskcostcoef();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &taskcostcoef_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float locationCostCoef = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_locationcostcoef();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &locationcostcoef_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float slackCostCoef = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_slackcostcoef();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &slackcostcoef_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float tardyCostCoef = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {
          set_has_tardycostcoef();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &tardycostcoef_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NDD.VehicleCostClass.Attribute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NDD.VehicleCostClass.Attribute)
  return false;
#undef DO_
}

void VehicleCostClass_Attribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NDD.VehicleCostClass.Attribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string dimensionId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dimensionid().data(), static_cast<int>(this->dimensionid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.VehicleCostClass.Attribute.dimensionId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->dimensionid(), output);
  }

  // optional float transitCostCoef = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->transitcostcoef(), output);
  }

  // optional float taskCostCoef = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->taskcostcoef(), output);
  }

  // optional float locationCostCoef = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->locationcostcoef(), output);
  }

  // optional float slackCostCoef = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->slackcostcoef(), output);
  }

  // optional float tardyCostCoef = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->tardycostcoef(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NDD.VehicleCostClass.Attribute)
}

::google::protobuf::uint8* VehicleCostClass_Attribute::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NDD.VehicleCostClass.Attribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string dimensionId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dimensionid().data(), static_cast<int>(this->dimensionid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.VehicleCostClass.Attribute.dimensionId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->dimensionid(), target);
  }

  // optional float transitCostCoef = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->transitcostcoef(), target);
  }

  // optional float taskCostCoef = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->taskcostcoef(), target);
  }

  // optional float locationCostCoef = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->locationcostcoef(), target);
  }

  // optional float slackCostCoef = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->slackcostcoef(), target);
  }

  // optional float tardyCostCoef = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->tardycostcoef(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NDD.VehicleCostClass.Attribute)
  return target;
}

size_t VehicleCostClass_Attribute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NDD.VehicleCostClass.Attribute)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string dimensionId = 1;
  if (has_dimensionid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dimensionid());
  }
  if (_has_bits_[0 / 32] & 62u) {
    // optional float transitCostCoef = 2;
    if (has_transitcostcoef()) {
      total_size += 1 + 4;
    }

    // optional float taskCostCoef = 3;
    if (has_taskcostcoef()) {
      total_size += 1 + 4;
    }

    // optional float locationCostCoef = 4;
    if (has_locationcostcoef()) {
      total_size += 1 + 4;
    }

    // optional float slackCostCoef = 5;
    if (has_slackcostcoef()) {
      total_size += 1 + 4;
    }

    // optional float tardyCostCoef = 6;
    if (has_tardycostcoef()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VehicleCostClass_Attribute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NDD.VehicleCostClass.Attribute)
  GOOGLE_DCHECK_NE(&from, this);
  const VehicleCostClass_Attribute* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VehicleCostClass_Attribute>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NDD.VehicleCostClass.Attribute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NDD.VehicleCostClass.Attribute)
    MergeFrom(*source);
  }
}

void VehicleCostClass_Attribute::MergeFrom(const VehicleCostClass_Attribute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NDD.VehicleCostClass.Attribute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_dimensionid();
      dimensionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dimensionid_);
    }
    if (cached_has_bits & 0x00000002u) {
      transitcostcoef_ = from.transitcostcoef_;
    }
    if (cached_has_bits & 0x00000004u) {
      taskcostcoef_ = from.taskcostcoef_;
    }
    if (cached_has_bits & 0x00000008u) {
      locationcostcoef_ = from.locationcostcoef_;
    }
    if (cached_has_bits & 0x00000010u) {
      slackcostcoef_ = from.slackcostcoef_;
    }
    if (cached_has_bits & 0x00000020u) {
      tardycostcoef_ = from.tardycostcoef_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VehicleCostClass_Attribute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NDD.VehicleCostClass.Attribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VehicleCostClass_Attribute::CopyFrom(const VehicleCostClass_Attribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NDD.VehicleCostClass.Attribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VehicleCostClass_Attribute::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void VehicleCostClass_Attribute::Swap(VehicleCostClass_Attribute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VehicleCostClass_Attribute::InternalSwap(VehicleCostClass_Attribute* other) {
  using std::swap;
  dimensionid_.Swap(&other->dimensionid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(transitcostcoef_, other->transitcostcoef_);
  swap(taskcostcoef_, other->taskcostcoef_);
  swap(locationcostcoef_, other->locationcostcoef_);
  swap(slackcostcoef_, other->slackcostcoef_);
  swap(tardycostcoef_, other->tardycostcoef_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VehicleCostClass_Attribute::GetMetadata() const {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VehicleCostClass::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VehicleCostClass::kIdFieldNumber;
const int VehicleCostClass::kFixedCostFieldNumber;
const int VehicleCostClass::kAttributesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VehicleCostClass::VehicleCostClass()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_VehicleCostClass.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NDD.VehicleCostClass)
}
VehicleCostClass::VehicleCostClass(const VehicleCostClass& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      attributes_(from.attributes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  fixedcost_ = from.fixedcost_;
  // @@protoc_insertion_point(copy_constructor:NDD.VehicleCostClass)
}

void VehicleCostClass::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fixedcost_ = 0;
}

VehicleCostClass::~VehicleCostClass() {
  // @@protoc_insertion_point(destructor:NDD.VehicleCostClass)
  SharedDtor();
}

void VehicleCostClass::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VehicleCostClass::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VehicleCostClass::descriptor() {
  ::protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VehicleCostClass& VehicleCostClass::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_VehicleCostClass.base);
  return *internal_default_instance();
}


void VehicleCostClass::Clear() {
// @@protoc_insertion_point(message_clear_start:NDD.VehicleCostClass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attributes_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    id_.ClearNonDefaultToEmptyNoArena();
  }
  fixedcost_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VehicleCostClass::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NDD.VehicleCostClass)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.VehicleCostClass.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float fixedCost = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_fixedcost();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fixedcost_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NDD.VehicleCostClass.Attribute attributes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_attributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NDD.VehicleCostClass)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NDD.VehicleCostClass)
  return false;
#undef DO_
}

void VehicleCostClass::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NDD.VehicleCostClass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.VehicleCostClass.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required float fixedCost = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->fixedcost(), output);
  }

  // repeated .NDD.VehicleCostClass.Attribute attributes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attributes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->attributes(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NDD.VehicleCostClass)
}

::google::protobuf::uint8* VehicleCostClass::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NDD.VehicleCostClass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.VehicleCostClass.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required float fixedCost = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->fixedcost(), target);
  }

  // repeated .NDD.VehicleCostClass.Attribute attributes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attributes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->attributes(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NDD.VehicleCostClass)
  return target;
}

size_t VehicleCostClass::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:NDD.VehicleCostClass)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_fixedcost()) {
    // required float fixedCost = 2;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t VehicleCostClass::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NDD.VehicleCostClass)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required float fixedCost = 2;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .NDD.VehicleCostClass.Attribute attributes = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->attributes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->attributes(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VehicleCostClass::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NDD.VehicleCostClass)
  GOOGLE_DCHECK_NE(&from, this);
  const VehicleCostClass* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VehicleCostClass>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NDD.VehicleCostClass)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NDD.VehicleCostClass)
    MergeFrom(*source);
  }
}

void VehicleCostClass::MergeFrom(const VehicleCostClass& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NDD.VehicleCostClass)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attributes_.MergeFrom(from.attributes_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      fixedcost_ = from.fixedcost_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VehicleCostClass::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NDD.VehicleCostClass)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VehicleCostClass::CopyFrom(const VehicleCostClass& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NDD.VehicleCostClass)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VehicleCostClass::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->attributes())) return false;
  return true;
}

void VehicleCostClass::Swap(VehicleCostClass* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VehicleCostClass::InternalSwap(VehicleCostClass* other) {
  using std::swap;
  CastToBase(&attributes_)->InternalSwap(CastToBase(&other->attributes_));
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(fixedcost_, other->fixedcost_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VehicleCostClass::GetMetadata() const {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Vehicle_Task_Attribute::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vehicle_Task_Attribute::kDimensionIdFieldNumber;
const int Vehicle_Task_Attribute::kQuantityFieldNumber;
const int Vehicle_Task_Attribute::kWindowsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vehicle_Task_Attribute::Vehicle_Task_Attribute()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Vehicle_Task_Attribute.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NDD.Vehicle.Task.Attribute)
}
Vehicle_Task_Attribute::Vehicle_Task_Attribute(const Vehicle_Task_Attribute& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      windows_(from.windows_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dimensionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_dimensionid()) {
    dimensionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dimensionid_);
  }
  quantity_ = from.quantity_;
  // @@protoc_insertion_point(copy_constructor:NDD.Vehicle.Task.Attribute)
}

void Vehicle_Task_Attribute::SharedCtor() {
  dimensionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  quantity_ = 0;
}

Vehicle_Task_Attribute::~Vehicle_Task_Attribute() {
  // @@protoc_insertion_point(destructor:NDD.Vehicle.Task.Attribute)
  SharedDtor();
}

void Vehicle_Task_Attribute::SharedDtor() {
  dimensionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Vehicle_Task_Attribute::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Vehicle_Task_Attribute::descriptor() {
  ::protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vehicle_Task_Attribute& Vehicle_Task_Attribute::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Vehicle_Task_Attribute.base);
  return *internal_default_instance();
}


void Vehicle_Task_Attribute::Clear() {
// @@protoc_insertion_point(message_clear_start:NDD.Vehicle.Task.Attribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  windows_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    dimensionid_.ClearNonDefaultToEmptyNoArena();
  }
  quantity_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Vehicle_Task_Attribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NDD.Vehicle.Task.Attribute)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string dimensionId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dimensionid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dimensionid().data(), static_cast<int>(this->dimensionid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.Vehicle.Task.Attribute.dimensionId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float quantity = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_quantity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &quantity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NDD.Window windows = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_windows()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NDD.Vehicle.Task.Attribute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NDD.Vehicle.Task.Attribute)
  return false;
#undef DO_
}

void Vehicle_Task_Attribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NDD.Vehicle.Task.Attribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string dimensionId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dimensionid().data(), static_cast<int>(this->dimensionid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.Vehicle.Task.Attribute.dimensionId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->dimensionid(), output);
  }

  // optional float quantity = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->quantity(), output);
  }

  // repeated .NDD.Window windows = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->windows_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->windows(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NDD.Vehicle.Task.Attribute)
}

::google::protobuf::uint8* Vehicle_Task_Attribute::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NDD.Vehicle.Task.Attribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string dimensionId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dimensionid().data(), static_cast<int>(this->dimensionid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.Vehicle.Task.Attribute.dimensionId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->dimensionid(), target);
  }

  // optional float quantity = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->quantity(), target);
  }

  // repeated .NDD.Window windows = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->windows_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->windows(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NDD.Vehicle.Task.Attribute)
  return target;
}

size_t Vehicle_Task_Attribute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NDD.Vehicle.Task.Attribute)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string dimensionId = 1;
  if (has_dimensionid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dimensionid());
  }
  // repeated .NDD.Window windows = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->windows_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->windows(static_cast<int>(i)));
    }
  }

  // optional float quantity = 2;
  if (has_quantity()) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vehicle_Task_Attribute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NDD.Vehicle.Task.Attribute)
  GOOGLE_DCHECK_NE(&from, this);
  const Vehicle_Task_Attribute* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vehicle_Task_Attribute>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NDD.Vehicle.Task.Attribute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NDD.Vehicle.Task.Attribute)
    MergeFrom(*source);
  }
}

void Vehicle_Task_Attribute::MergeFrom(const Vehicle_Task_Attribute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NDD.Vehicle.Task.Attribute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  windows_.MergeFrom(from.windows_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_dimensionid();
      dimensionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dimensionid_);
    }
    if (cached_has_bits & 0x00000002u) {
      quantity_ = from.quantity_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Vehicle_Task_Attribute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NDD.Vehicle.Task.Attribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vehicle_Task_Attribute::CopyFrom(const Vehicle_Task_Attribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NDD.Vehicle.Task.Attribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vehicle_Task_Attribute::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->windows())) return false;
  return true;
}

void Vehicle_Task_Attribute::Swap(Vehicle_Task_Attribute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vehicle_Task_Attribute::InternalSwap(Vehicle_Task_Attribute* other) {
  using std::swap;
  CastToBase(&windows_)->InternalSwap(CastToBase(&other->windows_));
  dimensionid_.Swap(&other->dimensionid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(quantity_, other->quantity_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Vehicle_Task_Attribute::GetMetadata() const {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Vehicle_Task::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vehicle_Task::kLocationIdFieldNumber;
const int Vehicle_Task::kAttributesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vehicle_Task::Vehicle_Task()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Vehicle_Task.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NDD.Vehicle.Task)
}
Vehicle_Task::Vehicle_Task(const Vehicle_Task& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      attributes_(from.attributes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  locationid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_locationid()) {
    locationid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.locationid_);
  }
  // @@protoc_insertion_point(copy_constructor:NDD.Vehicle.Task)
}

void Vehicle_Task::SharedCtor() {
  locationid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Vehicle_Task::~Vehicle_Task() {
  // @@protoc_insertion_point(destructor:NDD.Vehicle.Task)
  SharedDtor();
}

void Vehicle_Task::SharedDtor() {
  locationid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Vehicle_Task::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Vehicle_Task::descriptor() {
  ::protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vehicle_Task& Vehicle_Task::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Vehicle_Task.base);
  return *internal_default_instance();
}


void Vehicle_Task::Clear() {
// @@protoc_insertion_point(message_clear_start:NDD.Vehicle.Task)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attributes_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    locationid_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Vehicle_Task::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NDD.Vehicle.Task)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string locationId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_locationid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->locationid().data(), static_cast<int>(this->locationid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.Vehicle.Task.locationId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NDD.Vehicle.Task.Attribute attributes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_attributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NDD.Vehicle.Task)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NDD.Vehicle.Task)
  return false;
#undef DO_
}

void Vehicle_Task::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NDD.Vehicle.Task)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string locationId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->locationid().data(), static_cast<int>(this->locationid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.Vehicle.Task.locationId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->locationid(), output);
  }

  // repeated .NDD.Vehicle.Task.Attribute attributes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attributes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->attributes(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NDD.Vehicle.Task)
}

::google::protobuf::uint8* Vehicle_Task::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NDD.Vehicle.Task)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string locationId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->locationid().data(), static_cast<int>(this->locationid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.Vehicle.Task.locationId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->locationid(), target);
  }

  // repeated .NDD.Vehicle.Task.Attribute attributes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attributes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->attributes(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NDD.Vehicle.Task)
  return target;
}

size_t Vehicle_Task::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NDD.Vehicle.Task)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string locationId = 1;
  if (has_locationid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->locationid());
  }
  // repeated .NDD.Vehicle.Task.Attribute attributes = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->attributes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->attributes(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vehicle_Task::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NDD.Vehicle.Task)
  GOOGLE_DCHECK_NE(&from, this);
  const Vehicle_Task* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vehicle_Task>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NDD.Vehicle.Task)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NDD.Vehicle.Task)
    MergeFrom(*source);
  }
}

void Vehicle_Task::MergeFrom(const Vehicle_Task& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NDD.Vehicle.Task)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attributes_.MergeFrom(from.attributes_);
  if (from.has_locationid()) {
    set_has_locationid();
    locationid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.locationid_);
  }
}

void Vehicle_Task::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NDD.Vehicle.Task)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vehicle_Task::CopyFrom(const Vehicle_Task& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NDD.Vehicle.Task)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vehicle_Task::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->attributes())) return false;
  return true;
}

void Vehicle_Task::Swap(Vehicle_Task* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vehicle_Task::InternalSwap(Vehicle_Task* other) {
  using std::swap;
  CastToBase(&attributes_)->InternalSwap(CastToBase(&other->attributes_));
  locationid_.Swap(&other->locationid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Vehicle_Task::GetMetadata() const {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Vehicle_Shift::InitAsDefaultInstance() {
  ::NDD::_Vehicle_Shift_default_instance_._instance.get_mutable()->shiftstart_ = const_cast< ::NDD::Vehicle_Task*>(
      ::NDD::Vehicle_Task::internal_default_instance());
  ::NDD::_Vehicle_Shift_default_instance_._instance.get_mutable()->shiftend_ = const_cast< ::NDD::Vehicle_Task*>(
      ::NDD::Vehicle_Task::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vehicle_Shift::kShiftStartFieldNumber;
const int Vehicle_Shift::kShiftEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vehicle_Shift::Vehicle_Shift()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Vehicle_Shift.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NDD.Vehicle.Shift)
}
Vehicle_Shift::Vehicle_Shift(const Vehicle_Shift& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_shiftstart()) {
    shiftstart_ = new ::NDD::Vehicle_Task(*from.shiftstart_);
  } else {
    shiftstart_ = NULL;
  }
  if (from.has_shiftend()) {
    shiftend_ = new ::NDD::Vehicle_Task(*from.shiftend_);
  } else {
    shiftend_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NDD.Vehicle.Shift)
}

void Vehicle_Shift::SharedCtor() {
  ::memset(&shiftstart_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shiftend_) -
      reinterpret_cast<char*>(&shiftstart_)) + sizeof(shiftend_));
}

Vehicle_Shift::~Vehicle_Shift() {
  // @@protoc_insertion_point(destructor:NDD.Vehicle.Shift)
  SharedDtor();
}

void Vehicle_Shift::SharedDtor() {
  if (this != internal_default_instance()) delete shiftstart_;
  if (this != internal_default_instance()) delete shiftend_;
}

void Vehicle_Shift::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Vehicle_Shift::descriptor() {
  ::protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vehicle_Shift& Vehicle_Shift::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Vehicle_Shift.base);
  return *internal_default_instance();
}


void Vehicle_Shift::Clear() {
// @@protoc_insertion_point(message_clear_start:NDD.Vehicle.Shift)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(shiftstart_ != NULL);
      shiftstart_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(shiftend_ != NULL);
      shiftend_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Vehicle_Shift::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NDD.Vehicle.Shift)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .NDD.Vehicle.Task shiftStart = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_shiftstart()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .NDD.Vehicle.Task shiftEnd = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_shiftend()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NDD.Vehicle.Shift)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NDD.Vehicle.Shift)
  return false;
#undef DO_
}

void Vehicle_Shift::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NDD.Vehicle.Shift)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .NDD.Vehicle.Task shiftStart = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_shiftstart(), output);
  }

  // optional .NDD.Vehicle.Task shiftEnd = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_shiftend(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NDD.Vehicle.Shift)
}

::google::protobuf::uint8* Vehicle_Shift::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NDD.Vehicle.Shift)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .NDD.Vehicle.Task shiftStart = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_shiftstart(), deterministic, target);
  }

  // optional .NDD.Vehicle.Task shiftEnd = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_shiftend(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NDD.Vehicle.Shift)
  return target;
}

size_t Vehicle_Shift::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NDD.Vehicle.Shift)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .NDD.Vehicle.Task shiftStart = 1;
  if (has_shiftstart()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *shiftstart_);
  }
  // optional .NDD.Vehicle.Task shiftEnd = 2;
  if (has_shiftend()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *shiftend_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vehicle_Shift::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NDD.Vehicle.Shift)
  GOOGLE_DCHECK_NE(&from, this);
  const Vehicle_Shift* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vehicle_Shift>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NDD.Vehicle.Shift)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NDD.Vehicle.Shift)
    MergeFrom(*source);
  }
}

void Vehicle_Shift::MergeFrom(const Vehicle_Shift& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NDD.Vehicle.Shift)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_shiftstart()->::NDD::Vehicle_Task::MergeFrom(from.shiftstart());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_shiftend()->::NDD::Vehicle_Task::MergeFrom(from.shiftend());
    }
  }
}

void Vehicle_Shift::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NDD.Vehicle.Shift)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vehicle_Shift::CopyFrom(const Vehicle_Shift& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NDD.Vehicle.Shift)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vehicle_Shift::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_shiftstart()) {
    if (!this->shiftstart_->IsInitialized()) return false;
  }
  if (has_shiftend()) {
    if (!this->shiftend_->IsInitialized()) return false;
  }
  return true;
}

void Vehicle_Shift::Swap(Vehicle_Shift* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vehicle_Shift::InternalSwap(Vehicle_Shift* other) {
  using std::swap;
  swap(shiftstart_, other->shiftstart_);
  swap(shiftend_, other->shiftend_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Vehicle_Shift::GetMetadata() const {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Vehicle_Capacity::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vehicle_Capacity::kDimensionIdFieldNumber;
const int Vehicle_Capacity::kCapacityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vehicle_Capacity::Vehicle_Capacity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Vehicle_Capacity.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NDD.Vehicle.Capacity)
}
Vehicle_Capacity::Vehicle_Capacity(const Vehicle_Capacity& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dimensionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_dimensionid()) {
    dimensionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dimensionid_);
  }
  capacity_ = from.capacity_;
  // @@protoc_insertion_point(copy_constructor:NDD.Vehicle.Capacity)
}

void Vehicle_Capacity::SharedCtor() {
  dimensionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  capacity_ = 0;
}

Vehicle_Capacity::~Vehicle_Capacity() {
  // @@protoc_insertion_point(destructor:NDD.Vehicle.Capacity)
  SharedDtor();
}

void Vehicle_Capacity::SharedDtor() {
  dimensionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Vehicle_Capacity::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Vehicle_Capacity::descriptor() {
  ::protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vehicle_Capacity& Vehicle_Capacity::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Vehicle_Capacity.base);
  return *internal_default_instance();
}


void Vehicle_Capacity::Clear() {
// @@protoc_insertion_point(message_clear_start:NDD.Vehicle.Capacity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    dimensionid_.ClearNonDefaultToEmptyNoArena();
  }
  capacity_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Vehicle_Capacity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NDD.Vehicle.Capacity)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string dimensionId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dimensionid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dimensionid().data(), static_cast<int>(this->dimensionid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.Vehicle.Capacity.dimensionId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float capacity = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_capacity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &capacity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NDD.Vehicle.Capacity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NDD.Vehicle.Capacity)
  return false;
#undef DO_
}

void Vehicle_Capacity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NDD.Vehicle.Capacity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string dimensionId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dimensionid().data(), static_cast<int>(this->dimensionid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.Vehicle.Capacity.dimensionId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->dimensionid(), output);
  }

  // required float capacity = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->capacity(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NDD.Vehicle.Capacity)
}

::google::protobuf::uint8* Vehicle_Capacity::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NDD.Vehicle.Capacity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string dimensionId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dimensionid().data(), static_cast<int>(this->dimensionid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.Vehicle.Capacity.dimensionId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->dimensionid(), target);
  }

  // required float capacity = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->capacity(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NDD.Vehicle.Capacity)
  return target;
}

size_t Vehicle_Capacity::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:NDD.Vehicle.Capacity)
  size_t total_size = 0;

  if (has_dimensionid()) {
    // required string dimensionId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dimensionid());
  }

  if (has_capacity()) {
    // required float capacity = 2;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t Vehicle_Capacity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NDD.Vehicle.Capacity)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string dimensionId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dimensionid());

    // required float capacity = 2;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vehicle_Capacity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NDD.Vehicle.Capacity)
  GOOGLE_DCHECK_NE(&from, this);
  const Vehicle_Capacity* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vehicle_Capacity>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NDD.Vehicle.Capacity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NDD.Vehicle.Capacity)
    MergeFrom(*source);
  }
}

void Vehicle_Capacity::MergeFrom(const Vehicle_Capacity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NDD.Vehicle.Capacity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_dimensionid();
      dimensionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dimensionid_);
    }
    if (cached_has_bits & 0x00000002u) {
      capacity_ = from.capacity_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Vehicle_Capacity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NDD.Vehicle.Capacity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vehicle_Capacity::CopyFrom(const Vehicle_Capacity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NDD.Vehicle.Capacity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vehicle_Capacity::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Vehicle_Capacity::Swap(Vehicle_Capacity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vehicle_Capacity::InternalSwap(Vehicle_Capacity* other) {
  using std::swap;
  dimensionid_.Swap(&other->dimensionid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(capacity_, other->capacity_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Vehicle_Capacity::GetMetadata() const {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Vehicle::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vehicle::kIdFieldNumber;
const int Vehicle::kClassIdFieldNumber;
const int Vehicle::kCostClassIdFieldNumber;
const int Vehicle::kShiftFieldNumber;
const int Vehicle::kCapacitiesFieldNumber;
const int Vehicle::kTransitRuleIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vehicle::Vehicle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Vehicle.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NDD.Vehicle)
}
Vehicle::Vehicle(const Vehicle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      shift_(from.shift_),
      capacities_(from.capacities_),
      transitruleids_(from.transitruleids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  classid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_classid()) {
    classid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.classid_);
  }
  costclassid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_costclassid()) {
    costclassid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.costclassid_);
  }
  // @@protoc_insertion_point(copy_constructor:NDD.Vehicle)
}

void Vehicle::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  classid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  costclassid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Vehicle::~Vehicle() {
  // @@protoc_insertion_point(destructor:NDD.Vehicle)
  SharedDtor();
}

void Vehicle::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  classid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  costclassid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Vehicle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Vehicle::descriptor() {
  ::protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vehicle& Vehicle::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Vehicle.base);
  return *internal_default_instance();
}


void Vehicle::Clear() {
// @@protoc_insertion_point(message_clear_start:NDD.Vehicle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shift_.Clear();
  capacities_.Clear();
  transitruleids_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      classid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      costclassid_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Vehicle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NDD.Vehicle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.Vehicle.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string classId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_classid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->classid().data(), static_cast<int>(this->classid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.Vehicle.classId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string costClassId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_costclassid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->costclassid().data(), static_cast<int>(this->costclassid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.Vehicle.costClassId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NDD.Vehicle.Shift shift = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_shift()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NDD.Vehicle.Capacity capacities = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_capacities()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string transitRuleIds = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_transitruleids()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->transitruleids(this->transitruleids_size() - 1).data(),
            static_cast<int>(this->transitruleids(this->transitruleids_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.Vehicle.transitRuleIds");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NDD.Vehicle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NDD.Vehicle)
  return false;
#undef DO_
}

void Vehicle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NDD.Vehicle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.Vehicle.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required string classId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->classid().data(), static_cast<int>(this->classid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.Vehicle.classId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->classid(), output);
  }

  // required string costClassId = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->costclassid().data(), static_cast<int>(this->costclassid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.Vehicle.costClassId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->costclassid(), output);
  }

  // repeated .NDD.Vehicle.Shift shift = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->shift_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->shift(static_cast<int>(i)),
      output);
  }

  // repeated .NDD.Vehicle.Capacity capacities = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->capacities_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->capacities(static_cast<int>(i)),
      output);
  }

  // repeated string transitRuleIds = 6;
  for (int i = 0, n = this->transitruleids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transitruleids(i).data(), static_cast<int>(this->transitruleids(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.Vehicle.transitRuleIds");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->transitruleids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NDD.Vehicle)
}

::google::protobuf::uint8* Vehicle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NDD.Vehicle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.Vehicle.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required string classId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->classid().data(), static_cast<int>(this->classid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.Vehicle.classId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->classid(), target);
  }

  // required string costClassId = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->costclassid().data(), static_cast<int>(this->costclassid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.Vehicle.costClassId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->costclassid(), target);
  }

  // repeated .NDD.Vehicle.Shift shift = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->shift_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->shift(static_cast<int>(i)), deterministic, target);
  }

  // repeated .NDD.Vehicle.Capacity capacities = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->capacities_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->capacities(static_cast<int>(i)), deterministic, target);
  }

  // repeated string transitRuleIds = 6;
  for (int i = 0, n = this->transitruleids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transitruleids(i).data(), static_cast<int>(this->transitruleids(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.Vehicle.transitRuleIds");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->transitruleids(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NDD.Vehicle)
  return target;
}

size_t Vehicle::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:NDD.Vehicle)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_classid()) {
    // required string classId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->classid());
  }

  if (has_costclassid()) {
    // required string costClassId = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->costclassid());
  }

  return total_size;
}
size_t Vehicle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NDD.Vehicle)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required string classId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->classid());

    // required string costClassId = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->costclassid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .NDD.Vehicle.Shift shift = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->shift_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->shift(static_cast<int>(i)));
    }
  }

  // repeated .NDD.Vehicle.Capacity capacities = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->capacities_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->capacities(static_cast<int>(i)));
    }
  }

  // repeated string transitRuleIds = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->transitruleids_size());
  for (int i = 0, n = this->transitruleids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->transitruleids(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vehicle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NDD.Vehicle)
  GOOGLE_DCHECK_NE(&from, this);
  const Vehicle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vehicle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NDD.Vehicle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NDD.Vehicle)
    MergeFrom(*source);
  }
}

void Vehicle::MergeFrom(const Vehicle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NDD.Vehicle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  shift_.MergeFrom(from.shift_);
  capacities_.MergeFrom(from.capacities_);
  transitruleids_.MergeFrom(from.transitruleids_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_classid();
      classid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.classid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_costclassid();
      costclassid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.costclassid_);
    }
  }
}

void Vehicle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NDD.Vehicle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vehicle::CopyFrom(const Vehicle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NDD.Vehicle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vehicle::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->shift())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->capacities())) return false;
  return true;
}

void Vehicle::Swap(Vehicle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vehicle::InternalSwap(Vehicle* other) {
  using std::swap;
  CastToBase(&shift_)->InternalSwap(CastToBase(&other->shift_));
  CastToBase(&capacities_)->InternalSwap(CastToBase(&other->capacities_));
  transitruleids_.InternalSwap(CastToBase(&other->transitruleids_));
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  classid_.Swap(&other->classid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  costclassid_.Swap(&other->costclassid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Vehicle::GetMetadata() const {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TaskSequence::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskSequence::kVehicleIdFieldNumber;
const int TaskSequence::kDayIndexFieldNumber;
const int TaskSequence::kTaskIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskSequence::TaskSequence()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_TaskSequence.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NDD.TaskSequence)
}
TaskSequence::TaskSequence(const TaskSequence& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      taskid_(from.taskid_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vehicleid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_vehicleid()) {
    vehicleid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vehicleid_);
  }
  dayindex_ = from.dayindex_;
  // @@protoc_insertion_point(copy_constructor:NDD.TaskSequence)
}

void TaskSequence::SharedCtor() {
  vehicleid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dayindex_ = 0;
}

TaskSequence::~TaskSequence() {
  // @@protoc_insertion_point(destructor:NDD.TaskSequence)
  SharedDtor();
}

void TaskSequence::SharedDtor() {
  vehicleid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TaskSequence::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TaskSequence::descriptor() {
  ::protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TaskSequence& TaskSequence::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_TaskSequence.base);
  return *internal_default_instance();
}


void TaskSequence::Clear() {
// @@protoc_insertion_point(message_clear_start:NDD.TaskSequence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  taskid_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    vehicleid_.ClearNonDefaultToEmptyNoArena();
  }
  dayindex_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TaskSequence::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NDD.TaskSequence)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string vehicleId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vehicleid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->vehicleid().data(), static_cast<int>(this->vehicleid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.TaskSequence.vehicleId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 dayIndex = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_dayindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dayindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string taskId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_taskid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->taskid(this->taskid_size() - 1).data(),
            static_cast<int>(this->taskid(this->taskid_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.TaskSequence.taskId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NDD.TaskSequence)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NDD.TaskSequence)
  return false;
#undef DO_
}

void TaskSequence::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NDD.TaskSequence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string vehicleId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vehicleid().data(), static_cast<int>(this->vehicleid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.TaskSequence.vehicleId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->vehicleid(), output);
  }

  // required int32 dayIndex = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->dayindex(), output);
  }

  // repeated string taskId = 3;
  for (int i = 0, n = this->taskid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->taskid(i).data(), static_cast<int>(this->taskid(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.TaskSequence.taskId");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->taskid(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NDD.TaskSequence)
}

::google::protobuf::uint8* TaskSequence::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NDD.TaskSequence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string vehicleId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vehicleid().data(), static_cast<int>(this->vehicleid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.TaskSequence.vehicleId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->vehicleid(), target);
  }

  // required int32 dayIndex = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->dayindex(), target);
  }

  // repeated string taskId = 3;
  for (int i = 0, n = this->taskid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->taskid(i).data(), static_cast<int>(this->taskid(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.TaskSequence.taskId");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->taskid(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NDD.TaskSequence)
  return target;
}

size_t TaskSequence::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:NDD.TaskSequence)
  size_t total_size = 0;

  if (has_vehicleid()) {
    // required string vehicleId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vehicleid());
  }

  if (has_dayindex()) {
    // required int32 dayIndex = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dayindex());
  }

  return total_size;
}
size_t TaskSequence::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NDD.TaskSequence)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string vehicleId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vehicleid());

    // required int32 dayIndex = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dayindex());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated string taskId = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->taskid_size());
  for (int i = 0, n = this->taskid_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->taskid(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TaskSequence::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NDD.TaskSequence)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskSequence* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TaskSequence>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NDD.TaskSequence)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NDD.TaskSequence)
    MergeFrom(*source);
  }
}

void TaskSequence::MergeFrom(const TaskSequence& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NDD.TaskSequence)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  taskid_.MergeFrom(from.taskid_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_vehicleid();
      vehicleid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vehicleid_);
    }
    if (cached_has_bits & 0x00000002u) {
      dayindex_ = from.dayindex_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TaskSequence::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NDD.TaskSequence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskSequence::CopyFrom(const TaskSequence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NDD.TaskSequence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskSequence::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void TaskSequence::Swap(TaskSequence* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskSequence::InternalSwap(TaskSequence* other) {
  using std::swap;
  taskid_.InternalSwap(CastToBase(&other->taskid_));
  vehicleid_.Swap(&other->vehicleid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(dayindex_, other->dayindex_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TaskSequence::GetMetadata() const {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransitRule_Trigger::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransitRule_Trigger::kValueFieldNumber;
const int TransitRule_Trigger::kQuantityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransitRule_Trigger::TransitRule_Trigger()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_TransitRule_Trigger.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NDD.TransitRule.Trigger)
}
TransitRule_Trigger::TransitRule_Trigger(const TransitRule_Trigger& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&value_, &from.value_,
    static_cast<size_t>(reinterpret_cast<char*>(&quantity_) -
    reinterpret_cast<char*>(&value_)) + sizeof(quantity_));
  // @@protoc_insertion_point(copy_constructor:NDD.TransitRule.Trigger)
}

void TransitRule_Trigger::SharedCtor() {
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&quantity_) -
      reinterpret_cast<char*>(&value_)) + sizeof(quantity_));
}

TransitRule_Trigger::~TransitRule_Trigger() {
  // @@protoc_insertion_point(destructor:NDD.TransitRule.Trigger)
  SharedDtor();
}

void TransitRule_Trigger::SharedDtor() {
}

void TransitRule_Trigger::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TransitRule_Trigger::descriptor() {
  ::protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransitRule_Trigger& TransitRule_Trigger::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_TransitRule_Trigger.base);
  return *internal_default_instance();
}


void TransitRule_Trigger::Clear() {
// @@protoc_insertion_point(message_clear_start:NDD.TransitRule.Trigger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&value_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&quantity_) -
        reinterpret_cast<char*>(&value_)) + sizeof(quantity_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TransitRule_Trigger::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NDD.TransitRule.Trigger)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float quantity = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_quantity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &quantity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NDD.TransitRule.Trigger)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NDD.TransitRule.Trigger)
  return false;
#undef DO_
}

void TransitRule_Trigger::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NDD.TransitRule.Trigger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->value(), output);
  }

  // required float quantity = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->quantity(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NDD.TransitRule.Trigger)
}

::google::protobuf::uint8* TransitRule_Trigger::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NDD.TransitRule.Trigger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float value = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->value(), target);
  }

  // required float quantity = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->quantity(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NDD.TransitRule.Trigger)
  return target;
}

size_t TransitRule_Trigger::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:NDD.TransitRule.Trigger)
  size_t total_size = 0;

  if (has_value()) {
    // required float value = 1;
    total_size += 1 + 4;
  }

  if (has_quantity()) {
    // required float quantity = 2;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t TransitRule_Trigger::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NDD.TransitRule.Trigger)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required float value = 1;
    total_size += 1 + 4;

    // required float quantity = 2;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransitRule_Trigger::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NDD.TransitRule.Trigger)
  GOOGLE_DCHECK_NE(&from, this);
  const TransitRule_Trigger* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransitRule_Trigger>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NDD.TransitRule.Trigger)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NDD.TransitRule.Trigger)
    MergeFrom(*source);
  }
}

void TransitRule_Trigger::MergeFrom(const TransitRule_Trigger& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NDD.TransitRule.Trigger)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      value_ = from.value_;
    }
    if (cached_has_bits & 0x00000002u) {
      quantity_ = from.quantity_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TransitRule_Trigger::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NDD.TransitRule.Trigger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransitRule_Trigger::CopyFrom(const TransitRule_Trigger& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NDD.TransitRule.Trigger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransitRule_Trigger::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void TransitRule_Trigger::Swap(TransitRule_Trigger* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransitRule_Trigger::InternalSwap(TransitRule_Trigger* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(quantity_, other->quantity_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TransitRule_Trigger::GetMetadata() const {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransitRule::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransitRule::kIdFieldNumber;
const int TransitRule::kDimensionIdFieldNumber;
const int TransitRule::kUseStandingStateFieldNumber;
const int TransitRule::kUseTransitStateFieldNumber;
const int TransitRule::kRuleIdPrefixFieldNumber;
const int TransitRule::kTriggersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransitRule::TransitRule()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_TransitRule.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NDD.TransitRule)
}
TransitRule::TransitRule(const TransitRule& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      triggers_(from.triggers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  dimensionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_dimensionid()) {
    dimensionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dimensionid_);
  }
  ruleidprefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ruleidprefix()) {
    ruleidprefix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ruleidprefix_);
  }
  ::memcpy(&usetransitstate_, &from.usetransitstate_,
    static_cast<size_t>(reinterpret_cast<char*>(&usestandingstate_) -
    reinterpret_cast<char*>(&usetransitstate_)) + sizeof(usestandingstate_));
  // @@protoc_insertion_point(copy_constructor:NDD.TransitRule)
}

void TransitRule::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dimensionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ruleidprefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usetransitstate_ = false;
  usestandingstate_ = true;
}

TransitRule::~TransitRule() {
  // @@protoc_insertion_point(destructor:NDD.TransitRule)
  SharedDtor();
}

void TransitRule::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dimensionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ruleidprefix_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TransitRule::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TransitRule::descriptor() {
  ::protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransitRule& TransitRule::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_TransitRule.base);
  return *internal_default_instance();
}


void TransitRule::Clear() {
// @@protoc_insertion_point(message_clear_start:NDD.TransitRule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  triggers_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      dimensionid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      ruleidprefix_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 24u) {
    usetransitstate_ = false;
    usestandingstate_ = true;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TransitRule::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NDD.TransitRule)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.TransitRule.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string dimensionId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dimensionid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dimensionid().data(), static_cast<int>(this->dimensionid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.TransitRule.dimensionId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool useStandingState = 3 [default = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_usestandingstate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &usestandingstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool useTransitState = 4 [default = false];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_usetransitstate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &usetransitstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string ruleIdPrefix = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ruleidprefix()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ruleidprefix().data(), static_cast<int>(this->ruleidprefix().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.TransitRule.ruleIdPrefix");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NDD.TransitRule.Trigger triggers = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_triggers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NDD.TransitRule)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NDD.TransitRule)
  return false;
#undef DO_
}

void TransitRule::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NDD.TransitRule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.TransitRule.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required string dimensionId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dimensionid().data(), static_cast<int>(this->dimensionid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.TransitRule.dimensionId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->dimensionid(), output);
  }

  // optional bool useStandingState = 3 [default = true];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->usestandingstate(), output);
  }

  // optional bool useTransitState = 4 [default = false];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->usetransitstate(), output);
  }

  // required string ruleIdPrefix = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ruleidprefix().data(), static_cast<int>(this->ruleidprefix().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.TransitRule.ruleIdPrefix");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->ruleidprefix(), output);
  }

  // repeated .NDD.TransitRule.Trigger triggers = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->triggers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->triggers(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NDD.TransitRule)
}

::google::protobuf::uint8* TransitRule::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NDD.TransitRule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.TransitRule.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required string dimensionId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dimensionid().data(), static_cast<int>(this->dimensionid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.TransitRule.dimensionId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->dimensionid(), target);
  }

  // optional bool useStandingState = 3 [default = true];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->usestandingstate(), target);
  }

  // optional bool useTransitState = 4 [default = false];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->usetransitstate(), target);
  }

  // required string ruleIdPrefix = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ruleidprefix().data(), static_cast<int>(this->ruleidprefix().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.TransitRule.ruleIdPrefix");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->ruleidprefix(), target);
  }

  // repeated .NDD.TransitRule.Trigger triggers = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->triggers_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->triggers(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NDD.TransitRule)
  return target;
}

size_t TransitRule::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:NDD.TransitRule)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_dimensionid()) {
    // required string dimensionId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dimensionid());
  }

  if (has_ruleidprefix()) {
    // required string ruleIdPrefix = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ruleidprefix());
  }

  return total_size;
}
size_t TransitRule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NDD.TransitRule)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required string dimensionId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dimensionid());

    // required string ruleIdPrefix = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ruleidprefix());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .NDD.TransitRule.Trigger triggers = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->triggers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->triggers(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 24u) {
    // optional bool useTransitState = 4 [default = false];
    if (has_usetransitstate()) {
      total_size += 1 + 1;
    }

    // optional bool useStandingState = 3 [default = true];
    if (has_usestandingstate()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransitRule::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NDD.TransitRule)
  GOOGLE_DCHECK_NE(&from, this);
  const TransitRule* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransitRule>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NDD.TransitRule)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NDD.TransitRule)
    MergeFrom(*source);
  }
}

void TransitRule::MergeFrom(const TransitRule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NDD.TransitRule)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  triggers_.MergeFrom(from.triggers_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_dimensionid();
      dimensionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dimensionid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_ruleidprefix();
      ruleidprefix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ruleidprefix_);
    }
    if (cached_has_bits & 0x00000008u) {
      usetransitstate_ = from.usetransitstate_;
    }
    if (cached_has_bits & 0x00000010u) {
      usestandingstate_ = from.usestandingstate_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TransitRule::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NDD.TransitRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransitRule::CopyFrom(const TransitRule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NDD.TransitRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransitRule::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->triggers())) return false;
  return true;
}

void TransitRule::Swap(TransitRule* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransitRule::InternalSwap(TransitRule* other) {
  using std::swap;
  CastToBase(&triggers_)->InternalSwap(CastToBase(&other->triggers_));
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  dimensionid_.Swap(&other->dimensionid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ruleidprefix_.Swap(&other->ruleidprefix_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(usetransitstate_, other->usetransitstate_);
  swap(usestandingstate_, other->usestandingstate_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TransitRule::GetMetadata() const {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Model::InitAsDefaultInstance() {
  ::NDD::_Model_default_instance_._instance.get_mutable()->dimensions_ = const_cast< ::NDD::DimensionConfiguration*>(
      ::NDD::DimensionConfiguration::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Model::kDimensionsFieldNumber;
const int Model::kLocationsFieldNumber;
const int Model::kJobsFieldNumber;
const int Model::kVehiclesFieldNumber;
const int Model::kVehicleClassesFieldNumber;
const int Model::kVehicleCostClassesFieldNumber;
const int Model::kTransitRulesFieldNumber;
const int Model::kTransitGeneratorsFieldNumber;
const int Model::kTaskSequenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Model::Model()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Model.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NDD.Model)
}
Model::Model(const Model& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      locations_(from.locations_),
      jobs_(from.jobs_),
      vehicles_(from.vehicles_),
      vehicleclasses_(from.vehicleclasses_),
      vehiclecostclasses_(from.vehiclecostclasses_),
      transitrules_(from.transitrules_),
      transitgenerators_(from.transitgenerators_),
      tasksequence_(from.tasksequence_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_dimensions()) {
    dimensions_ = new ::NDD::DimensionConfiguration(*from.dimensions_);
  } else {
    dimensions_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NDD.Model)
}

void Model::SharedCtor() {
  dimensions_ = NULL;
}

Model::~Model() {
  // @@protoc_insertion_point(destructor:NDD.Model)
  SharedDtor();
}

void Model::SharedDtor() {
  if (this != internal_default_instance()) delete dimensions_;
}

void Model::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Model::descriptor() {
  ::protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Model& Model::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_Model.base);
  return *internal_default_instance();
}


void Model::Clear() {
// @@protoc_insertion_point(message_clear_start:NDD.Model)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  locations_.Clear();
  jobs_.Clear();
  vehicles_.Clear();
  vehicleclasses_.Clear();
  vehiclecostclasses_.Clear();
  transitrules_.Clear();
  transitgenerators_.Clear();
  tasksequence_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(dimensions_ != NULL);
    dimensions_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Model::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NDD.Model)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .NDD.DimensionConfiguration dimensions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dimensions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NDD.Location locations = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_locations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NDD.Job jobs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_jobs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NDD.Vehicle vehicles = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_vehicles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NDD.VehicleClass vehicleClasses = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_vehicleclasses()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NDD.VehicleCostClass vehicleCostClasses = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_vehiclecostclasses()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NDD.TransitRule transitRules = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_transitrules()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NDD.TransitGenerator transitGenerators = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_transitgenerators()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NDD.TaskSequence taskSequence = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tasksequence()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NDD.Model)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NDD.Model)
  return false;
#undef DO_
}

void Model::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NDD.Model)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .NDD.DimensionConfiguration dimensions = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_dimensions(), output);
  }

  // repeated .NDD.Location locations = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->locations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->locations(static_cast<int>(i)),
      output);
  }

  // repeated .NDD.Job jobs = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->jobs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->jobs(static_cast<int>(i)),
      output);
  }

  // repeated .NDD.Vehicle vehicles = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vehicles_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->vehicles(static_cast<int>(i)),
      output);
  }

  // repeated .NDD.VehicleClass vehicleClasses = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vehicleclasses_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->vehicleclasses(static_cast<int>(i)),
      output);
  }

  // repeated .NDD.VehicleCostClass vehicleCostClasses = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vehiclecostclasses_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->vehiclecostclasses(static_cast<int>(i)),
      output);
  }

  // repeated .NDD.TransitRule transitRules = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transitrules_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->transitrules(static_cast<int>(i)),
      output);
  }

  // repeated .NDD.TransitGenerator transitGenerators = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transitgenerators_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->transitgenerators(static_cast<int>(i)),
      output);
  }

  // repeated .NDD.TaskSequence taskSequence = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tasksequence_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->tasksequence(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NDD.Model)
}

::google::protobuf::uint8* Model::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NDD.Model)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .NDD.DimensionConfiguration dimensions = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_dimensions(), deterministic, target);
  }

  // repeated .NDD.Location locations = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->locations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->locations(static_cast<int>(i)), deterministic, target);
  }

  // repeated .NDD.Job jobs = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->jobs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->jobs(static_cast<int>(i)), deterministic, target);
  }

  // repeated .NDD.Vehicle vehicles = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vehicles_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->vehicles(static_cast<int>(i)), deterministic, target);
  }

  // repeated .NDD.VehicleClass vehicleClasses = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vehicleclasses_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->vehicleclasses(static_cast<int>(i)), deterministic, target);
  }

  // repeated .NDD.VehicleCostClass vehicleCostClasses = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vehiclecostclasses_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->vehiclecostclasses(static_cast<int>(i)), deterministic, target);
  }

  // repeated .NDD.TransitRule transitRules = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transitrules_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->transitrules(static_cast<int>(i)), deterministic, target);
  }

  // repeated .NDD.TransitGenerator transitGenerators = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transitgenerators_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->transitgenerators(static_cast<int>(i)), deterministic, target);
  }

  // repeated .NDD.TaskSequence taskSequence = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tasksequence_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->tasksequence(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NDD.Model)
  return target;
}

size_t Model::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NDD.Model)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .NDD.DimensionConfiguration dimensions = 1;
  if (has_dimensions()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *dimensions_);
  }
  // repeated .NDD.Location locations = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->locations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->locations(static_cast<int>(i)));
    }
  }

  // repeated .NDD.Job jobs = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->jobs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->jobs(static_cast<int>(i)));
    }
  }

  // repeated .NDD.Vehicle vehicles = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->vehicles_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->vehicles(static_cast<int>(i)));
    }
  }

  // repeated .NDD.VehicleClass vehicleClasses = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->vehicleclasses_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->vehicleclasses(static_cast<int>(i)));
    }
  }

  // repeated .NDD.VehicleCostClass vehicleCostClasses = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->vehiclecostclasses_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->vehiclecostclasses(static_cast<int>(i)));
    }
  }

  // repeated .NDD.TransitRule transitRules = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->transitrules_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->transitrules(static_cast<int>(i)));
    }
  }

  // repeated .NDD.TransitGenerator transitGenerators = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->transitgenerators_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->transitgenerators(static_cast<int>(i)));
    }
  }

  // repeated .NDD.TaskSequence taskSequence = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->tasksequence_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tasksequence(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Model::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NDD.Model)
  GOOGLE_DCHECK_NE(&from, this);
  const Model* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Model>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NDD.Model)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NDD.Model)
    MergeFrom(*source);
  }
}

void Model::MergeFrom(const Model& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NDD.Model)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  locations_.MergeFrom(from.locations_);
  jobs_.MergeFrom(from.jobs_);
  vehicles_.MergeFrom(from.vehicles_);
  vehicleclasses_.MergeFrom(from.vehicleclasses_);
  vehiclecostclasses_.MergeFrom(from.vehiclecostclasses_);
  transitrules_.MergeFrom(from.transitrules_);
  transitgenerators_.MergeFrom(from.transitgenerators_);
  tasksequence_.MergeFrom(from.tasksequence_);
  if (from.has_dimensions()) {
    mutable_dimensions()->::NDD::DimensionConfiguration::MergeFrom(from.dimensions());
  }
}

void Model::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NDD.Model)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Model::CopyFrom(const Model& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NDD.Model)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Model::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->locations())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->jobs())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->vehicles())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->vehicleclasses())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->vehiclecostclasses())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->transitrules())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->transitgenerators())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->tasksequence())) return false;
  if (has_dimensions()) {
    if (!this->dimensions_->IsInitialized()) return false;
  }
  return true;
}

void Model::Swap(Model* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Model::InternalSwap(Model* other) {
  using std::swap;
  CastToBase(&locations_)->InternalSwap(CastToBase(&other->locations_));
  CastToBase(&jobs_)->InternalSwap(CastToBase(&other->jobs_));
  CastToBase(&vehicles_)->InternalSwap(CastToBase(&other->vehicles_));
  CastToBase(&vehicleclasses_)->InternalSwap(CastToBase(&other->vehicleclasses_));
  CastToBase(&vehiclecostclasses_)->InternalSwap(CastToBase(&other->vehiclecostclasses_));
  CastToBase(&transitrules_)->InternalSwap(CastToBase(&other->transitrules_));
  CastToBase(&transitgenerators_)->InternalSwap(CastToBase(&other->transitgenerators_));
  CastToBase(&tasksequence_)->InternalSwap(CastToBase(&other->tasksequence_));
  swap(dimensions_, other->dimensions_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Model::GetMetadata() const {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SolveRequest::InitAsDefaultInstance() {
  ::NDD::_SolveRequest_default_instance_._instance.get_mutable()->model_ = const_cast< ::NDD::Model*>(
      ::NDD::Model::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SolveRequest::kModelFieldNumber;
const int SolveRequest::kModelIDFieldNumber;
const int SolveRequest::kRoutesFieldNumber;
const int SolveRequest::kSolveTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SolveRequest::SolveRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_SolveRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NDD.SolveRequest)
}
SolveRequest::SolveRequest(const SolveRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      routes_(from.routes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  modelid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_modelid()) {
    modelid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modelid_);
  }
  if (from.has_model()) {
    model_ = new ::NDD::Model(*from.model_);
  } else {
    model_ = NULL;
  }
  solvetype_ = from.solvetype_;
  // @@protoc_insertion_point(copy_constructor:NDD.SolveRequest)
}

void SolveRequest::SharedCtor() {
  modelid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&model_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&solvetype_) -
      reinterpret_cast<char*>(&model_)) + sizeof(solvetype_));
}

SolveRequest::~SolveRequest() {
  // @@protoc_insertion_point(destructor:NDD.SolveRequest)
  SharedDtor();
}

void SolveRequest::SharedDtor() {
  modelid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete model_;
}

void SolveRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SolveRequest::descriptor() {
  ::protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SolveRequest& SolveRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_SolveRequest.base);
  return *internal_default_instance();
}


void SolveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:NDD.SolveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  routes_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      modelid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(model_ != NULL);
      model_->Clear();
    }
  }
  solvetype_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SolveRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NDD.SolveRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .NDD.Model model = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_model()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string modelID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_modelid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->modelid().data(), static_cast<int>(this->modelid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.SolveRequest.modelID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NDD.TaskSequence routes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_routes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .NDD.SolveRequest.SolveType solveType = 4 [default = Optimise];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::NDD::SolveRequest_SolveType_IsValid(value)) {
            set_solvetype(static_cast< ::NDD::SolveRequest_SolveType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NDD.SolveRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NDD.SolveRequest)
  return false;
#undef DO_
}

void SolveRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NDD.SolveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .NDD.Model model = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_model(), output);
  }

  // optional string modelID = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->modelid().data(), static_cast<int>(this->modelid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.SolveRequest.modelID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->modelid(), output);
  }

  // repeated .NDD.TaskSequence routes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->routes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->routes(static_cast<int>(i)),
      output);
  }

  // optional .NDD.SolveRequest.SolveType solveType = 4 [default = Optimise];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->solvetype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NDD.SolveRequest)
}

::google::protobuf::uint8* SolveRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NDD.SolveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .NDD.Model model = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_model(), deterministic, target);
  }

  // optional string modelID = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->modelid().data(), static_cast<int>(this->modelid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.SolveRequest.modelID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->modelid(), target);
  }

  // repeated .NDD.TaskSequence routes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->routes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->routes(static_cast<int>(i)), deterministic, target);
  }

  // optional .NDD.SolveRequest.SolveType solveType = 4 [default = Optimise];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->solvetype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NDD.SolveRequest)
  return target;
}

size_t SolveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NDD.SolveRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .NDD.TaskSequence routes = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->routes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->routes(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional string modelID = 2;
    if (has_modelid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->modelid());
    }

    // optional .NDD.Model model = 1;
    if (has_model()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *model_);
    }

    // optional .NDD.SolveRequest.SolveType solveType = 4 [default = Optimise];
    if (has_solvetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->solvetype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SolveRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NDD.SolveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SolveRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SolveRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NDD.SolveRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NDD.SolveRequest)
    MergeFrom(*source);
  }
}

void SolveRequest::MergeFrom(const SolveRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NDD.SolveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  routes_.MergeFrom(from.routes_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_modelid();
      modelid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modelid_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_model()->::NDD::Model::MergeFrom(from.model());
    }
    if (cached_has_bits & 0x00000004u) {
      solvetype_ = from.solvetype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SolveRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NDD.SolveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SolveRequest::CopyFrom(const SolveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NDD.SolveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SolveRequest::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->routes())) return false;
  if (has_model()) {
    if (!this->model_->IsInitialized()) return false;
  }
  return true;
}

void SolveRequest::Swap(SolveRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SolveRequest::InternalSwap(SolveRequest* other) {
  using std::swap;
  CastToBase(&routes_)->InternalSwap(CastToBase(&other->routes_));
  modelid_.Swap(&other->modelid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(model_, other->model_);
  swap(solvetype_, other->solvetype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SolveRequest::GetMetadata() const {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SolutionResponse_StopAttribute::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SolutionResponse_StopAttribute::kDimIdFieldNumber;
const int SolutionResponse_StopAttribute::kStartValueFieldNumber;
const int SolutionResponse_StopAttribute::kEndValueFieldNumber;
const int SolutionResponse_StopAttribute::kCostFieldNumber;
const int SolutionResponse_StopAttribute::kSlackValueFieldNumber;
const int SolutionResponse_StopAttribute::kSlackCostFieldNumber;
const int SolutionResponse_StopAttribute::kTardyValueFieldNumber;
const int SolutionResponse_StopAttribute::kTardyCostFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SolutionResponse_StopAttribute::SolutionResponse_StopAttribute()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_SolutionResponse_StopAttribute.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NDD.SolutionResponse.StopAttribute)
}
SolutionResponse_StopAttribute::SolutionResponse_StopAttribute(const SolutionResponse_StopAttribute& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dimid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_dimid()) {
    dimid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dimid_);
  }
  ::memcpy(&startvalue_, &from.startvalue_,
    static_cast<size_t>(reinterpret_cast<char*>(&tardycost_) -
    reinterpret_cast<char*>(&startvalue_)) + sizeof(tardycost_));
  // @@protoc_insertion_point(copy_constructor:NDD.SolutionResponse.StopAttribute)
}

void SolutionResponse_StopAttribute::SharedCtor() {
  dimid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&startvalue_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tardycost_) -
      reinterpret_cast<char*>(&startvalue_)) + sizeof(tardycost_));
}

SolutionResponse_StopAttribute::~SolutionResponse_StopAttribute() {
  // @@protoc_insertion_point(destructor:NDD.SolutionResponse.StopAttribute)
  SharedDtor();
}

void SolutionResponse_StopAttribute::SharedDtor() {
  dimid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SolutionResponse_StopAttribute::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SolutionResponse_StopAttribute::descriptor() {
  ::protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SolutionResponse_StopAttribute& SolutionResponse_StopAttribute::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_SolutionResponse_StopAttribute.base);
  return *internal_default_instance();
}


void SolutionResponse_StopAttribute::Clear() {
// @@protoc_insertion_point(message_clear_start:NDD.SolutionResponse.StopAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    dimid_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 254u) {
    ::memset(&startvalue_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&tardycost_) -
        reinterpret_cast<char*>(&startvalue_)) + sizeof(tardycost_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SolutionResponse_StopAttribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NDD.SolutionResponse.StopAttribute)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string dimId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dimid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dimid().data(), static_cast<int>(this->dimid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.SolutionResponse.StopAttribute.dimId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float startValue = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_startvalue();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &startvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float endValue = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_endvalue();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &endvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float cost = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_cost();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cost_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float slackValue = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_slackvalue();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &slackvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float slackCost = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {
          set_has_slackcost();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &slackcost_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float tardyValue = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {
          set_has_tardyvalue();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &tardyvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float tardyCost = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {
          set_has_tardycost();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &tardycost_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NDD.SolutionResponse.StopAttribute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NDD.SolutionResponse.StopAttribute)
  return false;
#undef DO_
}

void SolutionResponse_StopAttribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NDD.SolutionResponse.StopAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string dimId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dimid().data(), static_cast<int>(this->dimid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.SolutionResponse.StopAttribute.dimId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->dimid(), output);
  }

  // required float startValue = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->startvalue(), output);
  }

  // required float endValue = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->endvalue(), output);
  }

  // required float cost = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->cost(), output);
  }

  // required float slackValue = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->slackvalue(), output);
  }

  // required float slackCost = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->slackcost(), output);
  }

  // required float tardyValue = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->tardyvalue(), output);
  }

  // required float tardyCost = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->tardycost(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NDD.SolutionResponse.StopAttribute)
}

::google::protobuf::uint8* SolutionResponse_StopAttribute::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NDD.SolutionResponse.StopAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string dimId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dimid().data(), static_cast<int>(this->dimid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.SolutionResponse.StopAttribute.dimId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->dimid(), target);
  }

  // required float startValue = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->startvalue(), target);
  }

  // required float endValue = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->endvalue(), target);
  }

  // required float cost = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->cost(), target);
  }

  // required float slackValue = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->slackvalue(), target);
  }

  // required float slackCost = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->slackcost(), target);
  }

  // required float tardyValue = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->tardyvalue(), target);
  }

  // required float tardyCost = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->tardycost(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NDD.SolutionResponse.StopAttribute)
  return target;
}

size_t SolutionResponse_StopAttribute::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:NDD.SolutionResponse.StopAttribute)
  size_t total_size = 0;

  if (has_dimid()) {
    // required string dimId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dimid());
  }

  if (has_startvalue()) {
    // required float startValue = 2;
    total_size += 1 + 4;
  }

  if (has_endvalue()) {
    // required float endValue = 3;
    total_size += 1 + 4;
  }

  if (has_cost()) {
    // required float cost = 4;
    total_size += 1 + 4;
  }

  if (has_slackvalue()) {
    // required float slackValue = 5;
    total_size += 1 + 4;
  }

  if (has_slackcost()) {
    // required float slackCost = 6;
    total_size += 1 + 4;
  }

  if (has_tardyvalue()) {
    // required float tardyValue = 7;
    total_size += 1 + 4;
  }

  if (has_tardycost()) {
    // required float tardyCost = 8;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t SolutionResponse_StopAttribute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NDD.SolutionResponse.StopAttribute)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x000000ff) ^ 0x000000ff) == 0) {  // All required fields are present.
    // required string dimId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dimid());

    // required float startValue = 2;
    total_size += 1 + 4;

    // required float endValue = 3;
    total_size += 1 + 4;

    // required float cost = 4;
    total_size += 1 + 4;

    // required float slackValue = 5;
    total_size += 1 + 4;

    // required float slackCost = 6;
    total_size += 1 + 4;

    // required float tardyValue = 7;
    total_size += 1 + 4;

    // required float tardyCost = 8;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SolutionResponse_StopAttribute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NDD.SolutionResponse.StopAttribute)
  GOOGLE_DCHECK_NE(&from, this);
  const SolutionResponse_StopAttribute* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SolutionResponse_StopAttribute>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NDD.SolutionResponse.StopAttribute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NDD.SolutionResponse.StopAttribute)
    MergeFrom(*source);
  }
}

void SolutionResponse_StopAttribute::MergeFrom(const SolutionResponse_StopAttribute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NDD.SolutionResponse.StopAttribute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_dimid();
      dimid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dimid_);
    }
    if (cached_has_bits & 0x00000002u) {
      startvalue_ = from.startvalue_;
    }
    if (cached_has_bits & 0x00000004u) {
      endvalue_ = from.endvalue_;
    }
    if (cached_has_bits & 0x00000008u) {
      cost_ = from.cost_;
    }
    if (cached_has_bits & 0x00000010u) {
      slackvalue_ = from.slackvalue_;
    }
    if (cached_has_bits & 0x00000020u) {
      slackcost_ = from.slackcost_;
    }
    if (cached_has_bits & 0x00000040u) {
      tardyvalue_ = from.tardyvalue_;
    }
    if (cached_has_bits & 0x00000080u) {
      tardycost_ = from.tardycost_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SolutionResponse_StopAttribute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NDD.SolutionResponse.StopAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SolutionResponse_StopAttribute::CopyFrom(const SolutionResponse_StopAttribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NDD.SolutionResponse.StopAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SolutionResponse_StopAttribute::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000ff) != 0x000000ff) return false;
  return true;
}

void SolutionResponse_StopAttribute::Swap(SolutionResponse_StopAttribute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SolutionResponse_StopAttribute::InternalSwap(SolutionResponse_StopAttribute* other) {
  using std::swap;
  dimid_.Swap(&other->dimid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(startvalue_, other->startvalue_);
  swap(endvalue_, other->endvalue_);
  swap(cost_, other->cost_);
  swap(slackvalue_, other->slackvalue_);
  swap(slackcost_, other->slackcost_);
  swap(tardyvalue_, other->tardyvalue_);
  swap(tardycost_, other->tardycost_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SolutionResponse_StopAttribute::GetMetadata() const {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SolutionResponse_InterStopAttribute::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SolutionResponse_InterStopAttribute::kDimIdFieldNumber;
const int SolutionResponse_InterStopAttribute::kStartValueFieldNumber;
const int SolutionResponse_InterStopAttribute::kEndValueFieldNumber;
const int SolutionResponse_InterStopAttribute::kCostFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SolutionResponse_InterStopAttribute::SolutionResponse_InterStopAttribute()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_SolutionResponse_InterStopAttribute.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NDD.SolutionResponse.InterStopAttribute)
}
SolutionResponse_InterStopAttribute::SolutionResponse_InterStopAttribute(const SolutionResponse_InterStopAttribute& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dimid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_dimid()) {
    dimid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dimid_);
  }
  ::memcpy(&startvalue_, &from.startvalue_,
    static_cast<size_t>(reinterpret_cast<char*>(&cost_) -
    reinterpret_cast<char*>(&startvalue_)) + sizeof(cost_));
  // @@protoc_insertion_point(copy_constructor:NDD.SolutionResponse.InterStopAttribute)
}

void SolutionResponse_InterStopAttribute::SharedCtor() {
  dimid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&startvalue_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cost_) -
      reinterpret_cast<char*>(&startvalue_)) + sizeof(cost_));
}

SolutionResponse_InterStopAttribute::~SolutionResponse_InterStopAttribute() {
  // @@protoc_insertion_point(destructor:NDD.SolutionResponse.InterStopAttribute)
  SharedDtor();
}

void SolutionResponse_InterStopAttribute::SharedDtor() {
  dimid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SolutionResponse_InterStopAttribute::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SolutionResponse_InterStopAttribute::descriptor() {
  ::protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SolutionResponse_InterStopAttribute& SolutionResponse_InterStopAttribute::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_SolutionResponse_InterStopAttribute.base);
  return *internal_default_instance();
}


void SolutionResponse_InterStopAttribute::Clear() {
// @@protoc_insertion_point(message_clear_start:NDD.SolutionResponse.InterStopAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    dimid_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&startvalue_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&cost_) -
        reinterpret_cast<char*>(&startvalue_)) + sizeof(cost_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SolutionResponse_InterStopAttribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NDD.SolutionResponse.InterStopAttribute)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string dimId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dimid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dimid().data(), static_cast<int>(this->dimid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.SolutionResponse.InterStopAttribute.dimId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float startValue = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_startvalue();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &startvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float endValue = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_endvalue();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &endvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float cost = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_cost();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cost_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NDD.SolutionResponse.InterStopAttribute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NDD.SolutionResponse.InterStopAttribute)
  return false;
#undef DO_
}

void SolutionResponse_InterStopAttribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NDD.SolutionResponse.InterStopAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string dimId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dimid().data(), static_cast<int>(this->dimid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.SolutionResponse.InterStopAttribute.dimId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->dimid(), output);
  }

  // required float startValue = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->startvalue(), output);
  }

  // required float endValue = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->endvalue(), output);
  }

  // required float cost = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->cost(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NDD.SolutionResponse.InterStopAttribute)
}

::google::protobuf::uint8* SolutionResponse_InterStopAttribute::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NDD.SolutionResponse.InterStopAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string dimId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dimid().data(), static_cast<int>(this->dimid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.SolutionResponse.InterStopAttribute.dimId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->dimid(), target);
  }

  // required float startValue = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->startvalue(), target);
  }

  // required float endValue = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->endvalue(), target);
  }

  // required float cost = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->cost(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NDD.SolutionResponse.InterStopAttribute)
  return target;
}

size_t SolutionResponse_InterStopAttribute::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:NDD.SolutionResponse.InterStopAttribute)
  size_t total_size = 0;

  if (has_dimid()) {
    // required string dimId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dimid());
  }

  if (has_startvalue()) {
    // required float startValue = 2;
    total_size += 1 + 4;
  }

  if (has_endvalue()) {
    // required float endValue = 3;
    total_size += 1 + 4;
  }

  if (has_cost()) {
    // required float cost = 4;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t SolutionResponse_InterStopAttribute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NDD.SolutionResponse.InterStopAttribute)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string dimId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dimid());

    // required float startValue = 2;
    total_size += 1 + 4;

    // required float endValue = 3;
    total_size += 1 + 4;

    // required float cost = 4;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SolutionResponse_InterStopAttribute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NDD.SolutionResponse.InterStopAttribute)
  GOOGLE_DCHECK_NE(&from, this);
  const SolutionResponse_InterStopAttribute* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SolutionResponse_InterStopAttribute>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NDD.SolutionResponse.InterStopAttribute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NDD.SolutionResponse.InterStopAttribute)
    MergeFrom(*source);
  }
}

void SolutionResponse_InterStopAttribute::MergeFrom(const SolutionResponse_InterStopAttribute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NDD.SolutionResponse.InterStopAttribute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_dimid();
      dimid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dimid_);
    }
    if (cached_has_bits & 0x00000002u) {
      startvalue_ = from.startvalue_;
    }
    if (cached_has_bits & 0x00000004u) {
      endvalue_ = from.endvalue_;
    }
    if (cached_has_bits & 0x00000008u) {
      cost_ = from.cost_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SolutionResponse_InterStopAttribute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NDD.SolutionResponse.InterStopAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SolutionResponse_InterStopAttribute::CopyFrom(const SolutionResponse_InterStopAttribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NDD.SolutionResponse.InterStopAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SolutionResponse_InterStopAttribute::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void SolutionResponse_InterStopAttribute::Swap(SolutionResponse_InterStopAttribute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SolutionResponse_InterStopAttribute::InternalSwap(SolutionResponse_InterStopAttribute* other) {
  using std::swap;
  dimid_.Swap(&other->dimid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(startvalue_, other->startvalue_);
  swap(endvalue_, other->endvalue_);
  swap(cost_, other->cost_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SolutionResponse_InterStopAttribute::GetMetadata() const {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SolutionResponse_Stop::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SolutionResponse_Stop::kIdFieldNumber;
const int SolutionResponse_Stop::kSequenceFieldNumber;
const int SolutionResponse_Stop::kLocationIdFieldNumber;
const int SolutionResponse_Stop::kTaskIdFieldNumber;
const int SolutionResponse_Stop::kJobIdFieldNumber;
const int SolutionResponse_Stop::kAttributesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SolutionResponse_Stop::SolutionResponse_Stop()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_SolutionResponse_Stop.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NDD.SolutionResponse.Stop)
}
SolutionResponse_Stop::SolutionResponse_Stop(const SolutionResponse_Stop& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      attributes_(from.attributes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  locationid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_locationid()) {
    locationid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.locationid_);
  }
  taskid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_taskid()) {
    taskid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskid_);
  }
  jobid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_jobid()) {
    jobid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jobid_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&sequence_) -
    reinterpret_cast<char*>(&id_)) + sizeof(sequence_));
  // @@protoc_insertion_point(copy_constructor:NDD.SolutionResponse.Stop)
}

void SolutionResponse_Stop::SharedCtor() {
  locationid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taskid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jobid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sequence_) -
      reinterpret_cast<char*>(&id_)) + sizeof(sequence_));
}

SolutionResponse_Stop::~SolutionResponse_Stop() {
  // @@protoc_insertion_point(destructor:NDD.SolutionResponse.Stop)
  SharedDtor();
}

void SolutionResponse_Stop::SharedDtor() {
  locationid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taskid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jobid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SolutionResponse_Stop::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SolutionResponse_Stop::descriptor() {
  ::protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SolutionResponse_Stop& SolutionResponse_Stop::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_SolutionResponse_Stop.base);
  return *internal_default_instance();
}


void SolutionResponse_Stop::Clear() {
// @@protoc_insertion_point(message_clear_start:NDD.SolutionResponse.Stop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attributes_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      locationid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      taskid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      jobid_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 24u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&sequence_) -
        reinterpret_cast<char*>(&id_)) + sizeof(sequence_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SolutionResponse_Stop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NDD.SolutionResponse.Stop)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 sequence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_sequence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sequence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string locationId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_locationid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->locationid().data(), static_cast<int>(this->locationid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.SolutionResponse.Stop.locationId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string taskId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_taskid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->taskid().data(), static_cast<int>(this->taskid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.SolutionResponse.Stop.taskId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string jobId = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_jobid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->jobid().data(), static_cast<int>(this->jobid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.SolutionResponse.Stop.jobId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NDD.SolutionResponse.StopAttribute attributes = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_attributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NDD.SolutionResponse.Stop)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NDD.SolutionResponse.Stop)
  return false;
#undef DO_
}

void SolutionResponse_Stop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NDD.SolutionResponse.Stop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int32 sequence = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sequence(), output);
  }

  // required string locationId = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->locationid().data(), static_cast<int>(this->locationid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.SolutionResponse.Stop.locationId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->locationid(), output);
  }

  // required string taskId = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->taskid().data(), static_cast<int>(this->taskid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.SolutionResponse.Stop.taskId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->taskid(), output);
  }

  // required string jobId = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->jobid().data(), static_cast<int>(this->jobid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.SolutionResponse.Stop.jobId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->jobid(), output);
  }

  // repeated .NDD.SolutionResponse.StopAttribute attributes = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attributes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->attributes(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NDD.SolutionResponse.Stop)
}

::google::protobuf::uint8* SolutionResponse_Stop::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NDD.SolutionResponse.Stop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int32 sequence = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sequence(), target);
  }

  // required string locationId = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->locationid().data(), static_cast<int>(this->locationid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.SolutionResponse.Stop.locationId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->locationid(), target);
  }

  // required string taskId = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->taskid().data(), static_cast<int>(this->taskid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.SolutionResponse.Stop.taskId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->taskid(), target);
  }

  // required string jobId = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->jobid().data(), static_cast<int>(this->jobid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.SolutionResponse.Stop.jobId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->jobid(), target);
  }

  // repeated .NDD.SolutionResponse.StopAttribute attributes = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attributes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->attributes(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NDD.SolutionResponse.Stop)
  return target;
}

size_t SolutionResponse_Stop::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:NDD.SolutionResponse.Stop)
  size_t total_size = 0;

  if (has_locationid()) {
    // required string locationId = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->locationid());
  }

  if (has_taskid()) {
    // required string taskId = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->taskid());
  }

  if (has_jobid()) {
    // required string jobId = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->jobid());
  }

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_sequence()) {
    // required int32 sequence = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sequence());
  }

  return total_size;
}
size_t SolutionResponse_Stop::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NDD.SolutionResponse.Stop)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required string locationId = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->locationid());

    // required string taskId = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->taskid());

    // required string jobId = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->jobid());

    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 sequence = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sequence());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .NDD.SolutionResponse.StopAttribute attributes = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->attributes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->attributes(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SolutionResponse_Stop::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NDD.SolutionResponse.Stop)
  GOOGLE_DCHECK_NE(&from, this);
  const SolutionResponse_Stop* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SolutionResponse_Stop>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NDD.SolutionResponse.Stop)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NDD.SolutionResponse.Stop)
    MergeFrom(*source);
  }
}

void SolutionResponse_Stop::MergeFrom(const SolutionResponse_Stop& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NDD.SolutionResponse.Stop)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attributes_.MergeFrom(from.attributes_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_locationid();
      locationid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.locationid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_taskid();
      taskid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_jobid();
      jobid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jobid_);
    }
    if (cached_has_bits & 0x00000008u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000010u) {
      sequence_ = from.sequence_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SolutionResponse_Stop::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NDD.SolutionResponse.Stop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SolutionResponse_Stop::CopyFrom(const SolutionResponse_Stop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NDD.SolutionResponse.Stop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SolutionResponse_Stop::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->attributes())) return false;
  return true;
}

void SolutionResponse_Stop::Swap(SolutionResponse_Stop* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SolutionResponse_Stop::InternalSwap(SolutionResponse_Stop* other) {
  using std::swap;
  CastToBase(&attributes_)->InternalSwap(CastToBase(&other->attributes_));
  locationid_.Swap(&other->locationid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  taskid_.Swap(&other->taskid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  jobid_.Swap(&other->jobid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(sequence_, other->sequence_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SolutionResponse_Stop::GetMetadata() const {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SolutionResponse_InterStop::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SolutionResponse_InterStop::kFromStopIdFieldNumber;
const int SolutionResponse_InterStop::kToStopIdFieldNumber;
const int SolutionResponse_InterStop::kAttributesFieldNumber;
const int SolutionResponse_InterStop::kRouteSegmentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SolutionResponse_InterStop::SolutionResponse_InterStop()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_SolutionResponse_InterStop.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NDD.SolutionResponse.InterStop)
}
SolutionResponse_InterStop::SolutionResponse_InterStop(const SolutionResponse_InterStop& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      attributes_(from.attributes_),
      routesegments_(from.routesegments_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&fromstopid_, &from.fromstopid_,
    static_cast<size_t>(reinterpret_cast<char*>(&tostopid_) -
    reinterpret_cast<char*>(&fromstopid_)) + sizeof(tostopid_));
  // @@protoc_insertion_point(copy_constructor:NDD.SolutionResponse.InterStop)
}

void SolutionResponse_InterStop::SharedCtor() {
  ::memset(&fromstopid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tostopid_) -
      reinterpret_cast<char*>(&fromstopid_)) + sizeof(tostopid_));
}

SolutionResponse_InterStop::~SolutionResponse_InterStop() {
  // @@protoc_insertion_point(destructor:NDD.SolutionResponse.InterStop)
  SharedDtor();
}

void SolutionResponse_InterStop::SharedDtor() {
}

void SolutionResponse_InterStop::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SolutionResponse_InterStop::descriptor() {
  ::protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SolutionResponse_InterStop& SolutionResponse_InterStop::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_SolutionResponse_InterStop.base);
  return *internal_default_instance();
}


void SolutionResponse_InterStop::Clear() {
// @@protoc_insertion_point(message_clear_start:NDD.SolutionResponse.InterStop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attributes_.Clear();
  routesegments_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&fromstopid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&tostopid_) -
        reinterpret_cast<char*>(&fromstopid_)) + sizeof(tostopid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SolutionResponse_InterStop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NDD.SolutionResponse.InterStop)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 fromStopId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_fromstopid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fromstopid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 toStopId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_tostopid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tostopid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NDD.SolutionResponse.InterStopAttribute attributes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_attributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NDD.Geocode routeSegments = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_routesegments()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NDD.SolutionResponse.InterStop)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NDD.SolutionResponse.InterStop)
  return false;
#undef DO_
}

void SolutionResponse_InterStop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NDD.SolutionResponse.InterStop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 fromStopId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fromstopid(), output);
  }

  // required int32 toStopId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->tostopid(), output);
  }

  // repeated .NDD.SolutionResponse.InterStopAttribute attributes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attributes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->attributes(static_cast<int>(i)),
      output);
  }

  // repeated .NDD.Geocode routeSegments = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->routesegments_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->routesegments(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NDD.SolutionResponse.InterStop)
}

::google::protobuf::uint8* SolutionResponse_InterStop::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NDD.SolutionResponse.InterStop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 fromStopId = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fromstopid(), target);
  }

  // required int32 toStopId = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->tostopid(), target);
  }

  // repeated .NDD.SolutionResponse.InterStopAttribute attributes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attributes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->attributes(static_cast<int>(i)), deterministic, target);
  }

  // repeated .NDD.Geocode routeSegments = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->routesegments_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->routesegments(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NDD.SolutionResponse.InterStop)
  return target;
}

size_t SolutionResponse_InterStop::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:NDD.SolutionResponse.InterStop)
  size_t total_size = 0;

  if (has_fromstopid()) {
    // required int32 fromStopId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fromstopid());
  }

  if (has_tostopid()) {
    // required int32 toStopId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tostopid());
  }

  return total_size;
}
size_t SolutionResponse_InterStop::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NDD.SolutionResponse.InterStop)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 fromStopId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fromstopid());

    // required int32 toStopId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tostopid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .NDD.SolutionResponse.InterStopAttribute attributes = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->attributes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->attributes(static_cast<int>(i)));
    }
  }

  // repeated .NDD.Geocode routeSegments = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->routesegments_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->routesegments(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SolutionResponse_InterStop::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NDD.SolutionResponse.InterStop)
  GOOGLE_DCHECK_NE(&from, this);
  const SolutionResponse_InterStop* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SolutionResponse_InterStop>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NDD.SolutionResponse.InterStop)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NDD.SolutionResponse.InterStop)
    MergeFrom(*source);
  }
}

void SolutionResponse_InterStop::MergeFrom(const SolutionResponse_InterStop& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NDD.SolutionResponse.InterStop)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attributes_.MergeFrom(from.attributes_);
  routesegments_.MergeFrom(from.routesegments_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      fromstopid_ = from.fromstopid_;
    }
    if (cached_has_bits & 0x00000002u) {
      tostopid_ = from.tostopid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SolutionResponse_InterStop::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NDD.SolutionResponse.InterStop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SolutionResponse_InterStop::CopyFrom(const SolutionResponse_InterStop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NDD.SolutionResponse.InterStop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SolutionResponse_InterStop::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->attributes())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->routesegments())) return false;
  return true;
}

void SolutionResponse_InterStop::Swap(SolutionResponse_InterStop* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SolutionResponse_InterStop::InternalSwap(SolutionResponse_InterStop* other) {
  using std::swap;
  CastToBase(&attributes_)->InternalSwap(CastToBase(&other->attributes_));
  CastToBase(&routesegments_)->InternalSwap(CastToBase(&other->routesegments_));
  swap(fromstopid_, other->fromstopid_);
  swap(tostopid_, other->tostopid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SolutionResponse_InterStop::GetMetadata() const {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SolutionResponse_TransitRuleAttribute::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SolutionResponse_TransitRuleAttribute::kRuleIdFieldNumber;
const int SolutionResponse_TransitRuleAttribute::kDimIdFieldNumber;
const int SolutionResponse_TransitRuleAttribute::kFromStopIdFieldNumber;
const int SolutionResponse_TransitRuleAttribute::kToStopIdFieldNumber;
const int SolutionResponse_TransitRuleAttribute::kStartValueFieldNumber;
const int SolutionResponse_TransitRuleAttribute::kEndValueFieldNumber;
const int SolutionResponse_TransitRuleAttribute::kCostFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SolutionResponse_TransitRuleAttribute::SolutionResponse_TransitRuleAttribute()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_SolutionResponse_TransitRuleAttribute.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NDD.SolutionResponse.TransitRuleAttribute)
}
SolutionResponse_TransitRuleAttribute::SolutionResponse_TransitRuleAttribute(const SolutionResponse_TransitRuleAttribute& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ruleid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ruleid()) {
    ruleid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ruleid_);
  }
  dimid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_dimid()) {
    dimid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dimid_);
  }
  ::memcpy(&fromstopid_, &from.fromstopid_,
    static_cast<size_t>(reinterpret_cast<char*>(&cost_) -
    reinterpret_cast<char*>(&fromstopid_)) + sizeof(cost_));
  // @@protoc_insertion_point(copy_constructor:NDD.SolutionResponse.TransitRuleAttribute)
}

void SolutionResponse_TransitRuleAttribute::SharedCtor() {
  ruleid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dimid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&fromstopid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cost_) -
      reinterpret_cast<char*>(&fromstopid_)) + sizeof(cost_));
}

SolutionResponse_TransitRuleAttribute::~SolutionResponse_TransitRuleAttribute() {
  // @@protoc_insertion_point(destructor:NDD.SolutionResponse.TransitRuleAttribute)
  SharedDtor();
}

void SolutionResponse_TransitRuleAttribute::SharedDtor() {
  ruleid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dimid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SolutionResponse_TransitRuleAttribute::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SolutionResponse_TransitRuleAttribute::descriptor() {
  ::protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SolutionResponse_TransitRuleAttribute& SolutionResponse_TransitRuleAttribute::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_SolutionResponse_TransitRuleAttribute.base);
  return *internal_default_instance();
}


void SolutionResponse_TransitRuleAttribute::Clear() {
// @@protoc_insertion_point(message_clear_start:NDD.SolutionResponse.TransitRuleAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      ruleid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      dimid_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 124u) {
    ::memset(&fromstopid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&cost_) -
        reinterpret_cast<char*>(&fromstopid_)) + sizeof(cost_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SolutionResponse_TransitRuleAttribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NDD.SolutionResponse.TransitRuleAttribute)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string ruleId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ruleid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ruleid().data(), static_cast<int>(this->ruleid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.SolutionResponse.TransitRuleAttribute.ruleId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string dimId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dimid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dimid().data(), static_cast<int>(this->dimid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.SolutionResponse.TransitRuleAttribute.dimId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 fromStopId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_fromstopid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fromstopid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 toStopId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_tostopid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tostopid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float startValue = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_startvalue();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &startvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float endValue = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {
          set_has_endvalue();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &endvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float cost = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {
          set_has_cost();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cost_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NDD.SolutionResponse.TransitRuleAttribute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NDD.SolutionResponse.TransitRuleAttribute)
  return false;
#undef DO_
}

void SolutionResponse_TransitRuleAttribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NDD.SolutionResponse.TransitRuleAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string ruleId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ruleid().data(), static_cast<int>(this->ruleid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.SolutionResponse.TransitRuleAttribute.ruleId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ruleid(), output);
  }

  // required string dimId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dimid().data(), static_cast<int>(this->dimid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.SolutionResponse.TransitRuleAttribute.dimId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->dimid(), output);
  }

  // required int32 fromStopId = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->fromstopid(), output);
  }

  // required int32 toStopId = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->tostopid(), output);
  }

  // required float startValue = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->startvalue(), output);
  }

  // required float endValue = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->endvalue(), output);
  }

  // required float cost = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->cost(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NDD.SolutionResponse.TransitRuleAttribute)
}

::google::protobuf::uint8* SolutionResponse_TransitRuleAttribute::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NDD.SolutionResponse.TransitRuleAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string ruleId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ruleid().data(), static_cast<int>(this->ruleid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.SolutionResponse.TransitRuleAttribute.ruleId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ruleid(), target);
  }

  // required string dimId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dimid().data(), static_cast<int>(this->dimid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.SolutionResponse.TransitRuleAttribute.dimId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->dimid(), target);
  }

  // required int32 fromStopId = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->fromstopid(), target);
  }

  // required int32 toStopId = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->tostopid(), target);
  }

  // required float startValue = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->startvalue(), target);
  }

  // required float endValue = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->endvalue(), target);
  }

  // required float cost = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->cost(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NDD.SolutionResponse.TransitRuleAttribute)
  return target;
}

size_t SolutionResponse_TransitRuleAttribute::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:NDD.SolutionResponse.TransitRuleAttribute)
  size_t total_size = 0;

  if (has_ruleid()) {
    // required string ruleId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ruleid());
  }

  if (has_dimid()) {
    // required string dimId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dimid());
  }

  if (has_fromstopid()) {
    // required int32 fromStopId = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fromstopid());
  }

  if (has_tostopid()) {
    // required int32 toStopId = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tostopid());
  }

  if (has_startvalue()) {
    // required float startValue = 5;
    total_size += 1 + 4;
  }

  if (has_endvalue()) {
    // required float endValue = 6;
    total_size += 1 + 4;
  }

  if (has_cost()) {
    // required float cost = 7;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t SolutionResponse_TransitRuleAttribute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NDD.SolutionResponse.TransitRuleAttribute)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000007f) ^ 0x0000007f) == 0) {  // All required fields are present.
    // required string ruleId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ruleid());

    // required string dimId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dimid());

    // required int32 fromStopId = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fromstopid());

    // required int32 toStopId = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tostopid());

    // required float startValue = 5;
    total_size += 1 + 4;

    // required float endValue = 6;
    total_size += 1 + 4;

    // required float cost = 7;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SolutionResponse_TransitRuleAttribute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NDD.SolutionResponse.TransitRuleAttribute)
  GOOGLE_DCHECK_NE(&from, this);
  const SolutionResponse_TransitRuleAttribute* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SolutionResponse_TransitRuleAttribute>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NDD.SolutionResponse.TransitRuleAttribute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NDD.SolutionResponse.TransitRuleAttribute)
    MergeFrom(*source);
  }
}

void SolutionResponse_TransitRuleAttribute::MergeFrom(const SolutionResponse_TransitRuleAttribute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NDD.SolutionResponse.TransitRuleAttribute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_ruleid();
      ruleid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ruleid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_dimid();
      dimid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dimid_);
    }
    if (cached_has_bits & 0x00000004u) {
      fromstopid_ = from.fromstopid_;
    }
    if (cached_has_bits & 0x00000008u) {
      tostopid_ = from.tostopid_;
    }
    if (cached_has_bits & 0x00000010u) {
      startvalue_ = from.startvalue_;
    }
    if (cached_has_bits & 0x00000020u) {
      endvalue_ = from.endvalue_;
    }
    if (cached_has_bits & 0x00000040u) {
      cost_ = from.cost_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SolutionResponse_TransitRuleAttribute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NDD.SolutionResponse.TransitRuleAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SolutionResponse_TransitRuleAttribute::CopyFrom(const SolutionResponse_TransitRuleAttribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NDD.SolutionResponse.TransitRuleAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SolutionResponse_TransitRuleAttribute::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;
  return true;
}

void SolutionResponse_TransitRuleAttribute::Swap(SolutionResponse_TransitRuleAttribute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SolutionResponse_TransitRuleAttribute::InternalSwap(SolutionResponse_TransitRuleAttribute* other) {
  using std::swap;
  ruleid_.Swap(&other->ruleid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  dimid_.Swap(&other->dimid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(fromstopid_, other->fromstopid_);
  swap(tostopid_, other->tostopid_);
  swap(startvalue_, other->startvalue_);
  swap(endvalue_, other->endvalue_);
  swap(cost_, other->cost_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SolutionResponse_TransitRuleAttribute::GetMetadata() const {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SolutionResponse_Route::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SolutionResponse_Route::kVehicleIdFieldNumber;
const int SolutionResponse_Route::kStopsFieldNumber;
const int SolutionResponse_Route::kInterStopsFieldNumber;
const int SolutionResponse_Route::kFixedCostFieldNumber;
const int SolutionResponse_Route::kTransitRuleAttributesFieldNumber;
const int SolutionResponse_Route::kDayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SolutionResponse_Route::SolutionResponse_Route()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_SolutionResponse_Route.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NDD.SolutionResponse.Route)
}
SolutionResponse_Route::SolutionResponse_Route(const SolutionResponse_Route& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      stops_(from.stops_),
      interstops_(from.interstops_),
      fixedcost_(from.fixedcost_),
      transitruleattributes_(from.transitruleattributes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vehicleid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_vehicleid()) {
    vehicleid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vehicleid_);
  }
  day_ = from.day_;
  // @@protoc_insertion_point(copy_constructor:NDD.SolutionResponse.Route)
}

void SolutionResponse_Route::SharedCtor() {
  vehicleid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  day_ = 0;
}

SolutionResponse_Route::~SolutionResponse_Route() {
  // @@protoc_insertion_point(destructor:NDD.SolutionResponse.Route)
  SharedDtor();
}

void SolutionResponse_Route::SharedDtor() {
  vehicleid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SolutionResponse_Route::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SolutionResponse_Route::descriptor() {
  ::protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SolutionResponse_Route& SolutionResponse_Route::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_SolutionResponse_Route.base);
  return *internal_default_instance();
}


void SolutionResponse_Route::Clear() {
// @@protoc_insertion_point(message_clear_start:NDD.SolutionResponse.Route)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stops_.Clear();
  interstops_.Clear();
  fixedcost_.Clear();
  transitruleattributes_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    vehicleid_.ClearNonDefaultToEmptyNoArena();
  }
  day_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SolutionResponse_Route::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NDD.SolutionResponse.Route)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string vehicleId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vehicleid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->vehicleid().data(), static_cast<int>(this->vehicleid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.SolutionResponse.Route.vehicleId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NDD.SolutionResponse.Stop stops = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_stops()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NDD.SolutionResponse.InterStop interStops = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_interstops()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float fixedCost = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 37u, input, this->mutable_fixedcost())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_fixedcost())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NDD.SolutionResponse.TransitRuleAttribute transitRuleAttributes = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_transitruleattributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 day = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_day();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &day_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NDD.SolutionResponse.Route)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NDD.SolutionResponse.Route)
  return false;
#undef DO_
}

void SolutionResponse_Route::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NDD.SolutionResponse.Route)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string vehicleId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vehicleid().data(), static_cast<int>(this->vehicleid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.SolutionResponse.Route.vehicleId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->vehicleid(), output);
  }

  // repeated .NDD.SolutionResponse.Stop stops = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stops_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->stops(static_cast<int>(i)),
      output);
  }

  // repeated .NDD.SolutionResponse.InterStop interStops = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->interstops_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->interstops(static_cast<int>(i)),
      output);
  }

  // repeated float fixedCost = 4;
  for (int i = 0, n = this->fixedcost_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      4, this->fixedcost(i), output);
  }

  // repeated .NDD.SolutionResponse.TransitRuleAttribute transitRuleAttributes = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transitruleattributes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->transitruleattributes(static_cast<int>(i)),
      output);
  }

  // required int32 day = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->day(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NDD.SolutionResponse.Route)
}

::google::protobuf::uint8* SolutionResponse_Route::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NDD.SolutionResponse.Route)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string vehicleId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vehicleid().data(), static_cast<int>(this->vehicleid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.SolutionResponse.Route.vehicleId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->vehicleid(), target);
  }

  // repeated .NDD.SolutionResponse.Stop stops = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stops_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->stops(static_cast<int>(i)), deterministic, target);
  }

  // repeated .NDD.SolutionResponse.InterStop interStops = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->interstops_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->interstops(static_cast<int>(i)), deterministic, target);
  }

  // repeated float fixedCost = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(4, this->fixedcost_, target);

  // repeated .NDD.SolutionResponse.TransitRuleAttribute transitRuleAttributes = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transitruleattributes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->transitruleattributes(static_cast<int>(i)), deterministic, target);
  }

  // required int32 day = 6;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->day(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NDD.SolutionResponse.Route)
  return target;
}

size_t SolutionResponse_Route::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:NDD.SolutionResponse.Route)
  size_t total_size = 0;

  if (has_vehicleid()) {
    // required string vehicleId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vehicleid());
  }

  if (has_day()) {
    // required int32 day = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->day());
  }

  return total_size;
}
size_t SolutionResponse_Route::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NDD.SolutionResponse.Route)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string vehicleId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vehicleid());

    // required int32 day = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->day());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .NDD.SolutionResponse.Stop stops = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->stops_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stops(static_cast<int>(i)));
    }
  }

  // repeated .NDD.SolutionResponse.InterStop interStops = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->interstops_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->interstops(static_cast<int>(i)));
    }
  }

  // repeated float fixedCost = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->fixedcost_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->fixedcost_size());
    total_size += data_size;
  }

  // repeated .NDD.SolutionResponse.TransitRuleAttribute transitRuleAttributes = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->transitruleattributes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->transitruleattributes(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SolutionResponse_Route::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NDD.SolutionResponse.Route)
  GOOGLE_DCHECK_NE(&from, this);
  const SolutionResponse_Route* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SolutionResponse_Route>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NDD.SolutionResponse.Route)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NDD.SolutionResponse.Route)
    MergeFrom(*source);
  }
}

void SolutionResponse_Route::MergeFrom(const SolutionResponse_Route& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NDD.SolutionResponse.Route)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stops_.MergeFrom(from.stops_);
  interstops_.MergeFrom(from.interstops_);
  fixedcost_.MergeFrom(from.fixedcost_);
  transitruleattributes_.MergeFrom(from.transitruleattributes_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_vehicleid();
      vehicleid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vehicleid_);
    }
    if (cached_has_bits & 0x00000002u) {
      day_ = from.day_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SolutionResponse_Route::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NDD.SolutionResponse.Route)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SolutionResponse_Route::CopyFrom(const SolutionResponse_Route& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NDD.SolutionResponse.Route)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SolutionResponse_Route::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->stops())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->interstops())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->transitruleattributes())) return false;
  return true;
}

void SolutionResponse_Route::Swap(SolutionResponse_Route* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SolutionResponse_Route::InternalSwap(SolutionResponse_Route* other) {
  using std::swap;
  CastToBase(&stops_)->InternalSwap(CastToBase(&other->stops_));
  CastToBase(&interstops_)->InternalSwap(CastToBase(&other->interstops_));
  fixedcost_.InternalSwap(&other->fixedcost_);
  CastToBase(&transitruleattributes_)->InternalSwap(CastToBase(&other->transitruleattributes_));
  vehicleid_.Swap(&other->vehicleid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(day_, other->day_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SolutionResponse_Route::GetMetadata() const {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SolutionResponse_Infeasibility_Info::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SolutionResponse_Infeasibility_Info::kMessageFieldNumber;
const int SolutionResponse_Infeasibility_Info::kDimIdFieldNumber;
const int SolutionResponse_Infeasibility_Info::kLimitFieldNumber;
const int SolutionResponse_Infeasibility_Info::kValueFieldNumber;
const int SolutionResponse_Infeasibility_Info::kCountFieldNumber;
const int SolutionResponse_Infeasibility_Info::kConstrainingTaskIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SolutionResponse_Infeasibility_Info::SolutionResponse_Infeasibility_Info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_SolutionResponse_Infeasibility_Info.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NDD.SolutionResponse.Infeasibility.Info)
}
SolutionResponse_Infeasibility_Info::SolutionResponse_Infeasibility_Info(const SolutionResponse_Infeasibility_Info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      constrainingtaskids_(from.constrainingtaskids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  dimid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_dimid()) {
    dimid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dimid_);
  }
  ::memcpy(&limit_, &from.limit_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&limit_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:NDD.SolutionResponse.Infeasibility.Info)
}

void SolutionResponse_Infeasibility_Info::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dimid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&limit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&limit_)) + sizeof(count_));
}

SolutionResponse_Infeasibility_Info::~SolutionResponse_Infeasibility_Info() {
  // @@protoc_insertion_point(destructor:NDD.SolutionResponse.Infeasibility.Info)
  SharedDtor();
}

void SolutionResponse_Infeasibility_Info::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dimid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SolutionResponse_Infeasibility_Info::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SolutionResponse_Infeasibility_Info::descriptor() {
  ::protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SolutionResponse_Infeasibility_Info& SolutionResponse_Infeasibility_Info::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_SolutionResponse_Infeasibility_Info.base);
  return *internal_default_instance();
}


void SolutionResponse_Infeasibility_Info::Clear() {
// @@protoc_insertion_point(message_clear_start:NDD.SolutionResponse.Infeasibility.Info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  constrainingtaskids_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      message_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      dimid_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 28u) {
    ::memset(&limit_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&count_) -
        reinterpret_cast<char*>(&limit_)) + sizeof(count_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SolutionResponse_Infeasibility_Info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NDD.SolutionResponse.Infeasibility.Info)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.SolutionResponse.Infeasibility.Info.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string dimId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dimid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dimid().data(), static_cast<int>(this->dimid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.SolutionResponse.Infeasibility.Info.dimId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float limit = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_limit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 count = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string constrainingTaskIds = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_constrainingtaskids()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->constrainingtaskids(this->constrainingtaskids_size() - 1).data(),
            static_cast<int>(this->constrainingtaskids(this->constrainingtaskids_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.SolutionResponse.Infeasibility.Info.constrainingTaskIds");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NDD.SolutionResponse.Infeasibility.Info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NDD.SolutionResponse.Infeasibility.Info)
  return false;
#undef DO_
}

void SolutionResponse_Infeasibility_Info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NDD.SolutionResponse.Infeasibility.Info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.SolutionResponse.Infeasibility.Info.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  // optional string dimId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dimid().data(), static_cast<int>(this->dimid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.SolutionResponse.Infeasibility.Info.dimId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->dimid(), output);
  }

  // optional float limit = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->limit(), output);
  }

  // optional float value = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->value(), output);
  }

  // optional int64 count = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->count(), output);
  }

  // repeated string constrainingTaskIds = 6;
  for (int i = 0, n = this->constrainingtaskids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->constrainingtaskids(i).data(), static_cast<int>(this->constrainingtaskids(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.SolutionResponse.Infeasibility.Info.constrainingTaskIds");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->constrainingtaskids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NDD.SolutionResponse.Infeasibility.Info)
}

::google::protobuf::uint8* SolutionResponse_Infeasibility_Info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NDD.SolutionResponse.Infeasibility.Info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.SolutionResponse.Infeasibility.Info.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  // optional string dimId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dimid().data(), static_cast<int>(this->dimid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.SolutionResponse.Infeasibility.Info.dimId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->dimid(), target);
  }

  // optional float limit = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->limit(), target);
  }

  // optional float value = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->value(), target);
  }

  // optional int64 count = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->count(), target);
  }

  // repeated string constrainingTaskIds = 6;
  for (int i = 0, n = this->constrainingtaskids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->constrainingtaskids(i).data(), static_cast<int>(this->constrainingtaskids(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.SolutionResponse.Infeasibility.Info.constrainingTaskIds");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->constrainingtaskids(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NDD.SolutionResponse.Infeasibility.Info)
  return target;
}

size_t SolutionResponse_Infeasibility_Info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NDD.SolutionResponse.Infeasibility.Info)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string message = 1;
  if (has_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }
  // repeated string constrainingTaskIds = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->constrainingtaskids_size());
  for (int i = 0, n = this->constrainingtaskids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->constrainingtaskids(i));
  }

  if (_has_bits_[0 / 32] & 30u) {
    // optional string dimId = 2;
    if (has_dimid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->dimid());
    }

    // optional float limit = 3;
    if (has_limit()) {
      total_size += 1 + 4;
    }

    // optional float value = 4;
    if (has_value()) {
      total_size += 1 + 4;
    }

    // optional int64 count = 5;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->count());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SolutionResponse_Infeasibility_Info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NDD.SolutionResponse.Infeasibility.Info)
  GOOGLE_DCHECK_NE(&from, this);
  const SolutionResponse_Infeasibility_Info* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SolutionResponse_Infeasibility_Info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NDD.SolutionResponse.Infeasibility.Info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NDD.SolutionResponse.Infeasibility.Info)
    MergeFrom(*source);
  }
}

void SolutionResponse_Infeasibility_Info::MergeFrom(const SolutionResponse_Infeasibility_Info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NDD.SolutionResponse.Infeasibility.Info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  constrainingtaskids_.MergeFrom(from.constrainingtaskids_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_message();
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_dimid();
      dimid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dimid_);
    }
    if (cached_has_bits & 0x00000004u) {
      limit_ = from.limit_;
    }
    if (cached_has_bits & 0x00000008u) {
      value_ = from.value_;
    }
    if (cached_has_bits & 0x00000010u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SolutionResponse_Infeasibility_Info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NDD.SolutionResponse.Infeasibility.Info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SolutionResponse_Infeasibility_Info::CopyFrom(const SolutionResponse_Infeasibility_Info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NDD.SolutionResponse.Infeasibility.Info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SolutionResponse_Infeasibility_Info::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void SolutionResponse_Infeasibility_Info::Swap(SolutionResponse_Infeasibility_Info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SolutionResponse_Infeasibility_Info::InternalSwap(SolutionResponse_Infeasibility_Info* other) {
  using std::swap;
  constrainingtaskids_.InternalSwap(CastToBase(&other->constrainingtaskids_));
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  dimid_.Swap(&other->dimid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(limit_, other->limit_);
  swap(value_, other->value_);
  swap(count_, other->count_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SolutionResponse_Infeasibility_Info::GetMetadata() const {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SolutionResponse_Infeasibility::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SolutionResponse_Infeasibility::kTaskIdFieldNumber;
const int SolutionResponse_Infeasibility::kInfeasibilityInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SolutionResponse_Infeasibility::SolutionResponse_Infeasibility()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_SolutionResponse_Infeasibility.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NDD.SolutionResponse.Infeasibility)
}
SolutionResponse_Infeasibility::SolutionResponse_Infeasibility(const SolutionResponse_Infeasibility& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      infeasibilityinfo_(from.infeasibilityinfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  taskid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_taskid()) {
    taskid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskid_);
  }
  // @@protoc_insertion_point(copy_constructor:NDD.SolutionResponse.Infeasibility)
}

void SolutionResponse_Infeasibility::SharedCtor() {
  taskid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SolutionResponse_Infeasibility::~SolutionResponse_Infeasibility() {
  // @@protoc_insertion_point(destructor:NDD.SolutionResponse.Infeasibility)
  SharedDtor();
}

void SolutionResponse_Infeasibility::SharedDtor() {
  taskid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SolutionResponse_Infeasibility::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SolutionResponse_Infeasibility::descriptor() {
  ::protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SolutionResponse_Infeasibility& SolutionResponse_Infeasibility::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_SolutionResponse_Infeasibility.base);
  return *internal_default_instance();
}


void SolutionResponse_Infeasibility::Clear() {
// @@protoc_insertion_point(message_clear_start:NDD.SolutionResponse.Infeasibility)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  infeasibilityinfo_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    taskid_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SolutionResponse_Infeasibility::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NDD.SolutionResponse.Infeasibility)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string taskId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_taskid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->taskid().data(), static_cast<int>(this->taskid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.SolutionResponse.Infeasibility.taskId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NDD.SolutionResponse.Infeasibility.Info infeasibilityInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_infeasibilityinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NDD.SolutionResponse.Infeasibility)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NDD.SolutionResponse.Infeasibility)
  return false;
#undef DO_
}

void SolutionResponse_Infeasibility::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NDD.SolutionResponse.Infeasibility)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string taskId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->taskid().data(), static_cast<int>(this->taskid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.SolutionResponse.Infeasibility.taskId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->taskid(), output);
  }

  // repeated .NDD.SolutionResponse.Infeasibility.Info infeasibilityInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->infeasibilityinfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->infeasibilityinfo(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NDD.SolutionResponse.Infeasibility)
}

::google::protobuf::uint8* SolutionResponse_Infeasibility::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NDD.SolutionResponse.Infeasibility)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string taskId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->taskid().data(), static_cast<int>(this->taskid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.SolutionResponse.Infeasibility.taskId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->taskid(), target);
  }

  // repeated .NDD.SolutionResponse.Infeasibility.Info infeasibilityInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->infeasibilityinfo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->infeasibilityinfo(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NDD.SolutionResponse.Infeasibility)
  return target;
}

size_t SolutionResponse_Infeasibility::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NDD.SolutionResponse.Infeasibility)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string taskId = 1;
  if (has_taskid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->taskid());
  }
  // repeated .NDD.SolutionResponse.Infeasibility.Info infeasibilityInfo = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->infeasibilityinfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->infeasibilityinfo(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SolutionResponse_Infeasibility::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NDD.SolutionResponse.Infeasibility)
  GOOGLE_DCHECK_NE(&from, this);
  const SolutionResponse_Infeasibility* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SolutionResponse_Infeasibility>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NDD.SolutionResponse.Infeasibility)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NDD.SolutionResponse.Infeasibility)
    MergeFrom(*source);
  }
}

void SolutionResponse_Infeasibility::MergeFrom(const SolutionResponse_Infeasibility& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NDD.SolutionResponse.Infeasibility)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  infeasibilityinfo_.MergeFrom(from.infeasibilityinfo_);
  if (from.has_taskid()) {
    set_has_taskid();
    taskid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskid_);
  }
}

void SolutionResponse_Infeasibility::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NDD.SolutionResponse.Infeasibility)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SolutionResponse_Infeasibility::CopyFrom(const SolutionResponse_Infeasibility& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NDD.SolutionResponse.Infeasibility)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SolutionResponse_Infeasibility::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->infeasibilityinfo())) return false;
  return true;
}

void SolutionResponse_Infeasibility::Swap(SolutionResponse_Infeasibility* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SolutionResponse_Infeasibility::InternalSwap(SolutionResponse_Infeasibility* other) {
  using std::swap;
  CastToBase(&infeasibilityinfo_)->InternalSwap(CastToBase(&other->infeasibilityinfo_));
  taskid_.Swap(&other->taskid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SolutionResponse_Infeasibility::GetMetadata() const {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SolutionResponse_CompactSolution::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SolutionResponse_CompactSolution::kTaskSequenceFieldNumber;
const int SolutionResponse_CompactSolution::kObjectivesFieldNumber;
const int SolutionResponse_CompactSolution::kObjectiveNamesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SolutionResponse_CompactSolution::SolutionResponse_CompactSolution()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_SolutionResponse_CompactSolution.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NDD.SolutionResponse.CompactSolution)
}
SolutionResponse_CompactSolution::SolutionResponse_CompactSolution(const SolutionResponse_CompactSolution& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      tasksequence_(from.tasksequence_),
      objectives_(from.objectives_),
      objectivenames_(from.objectivenames_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NDD.SolutionResponse.CompactSolution)
}

void SolutionResponse_CompactSolution::SharedCtor() {
}

SolutionResponse_CompactSolution::~SolutionResponse_CompactSolution() {
  // @@protoc_insertion_point(destructor:NDD.SolutionResponse.CompactSolution)
  SharedDtor();
}

void SolutionResponse_CompactSolution::SharedDtor() {
}

void SolutionResponse_CompactSolution::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SolutionResponse_CompactSolution::descriptor() {
  ::protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SolutionResponse_CompactSolution& SolutionResponse_CompactSolution::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_SolutionResponse_CompactSolution.base);
  return *internal_default_instance();
}


void SolutionResponse_CompactSolution::Clear() {
// @@protoc_insertion_point(message_clear_start:NDD.SolutionResponse.CompactSolution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tasksequence_.Clear();
  objectives_.Clear();
  objectivenames_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SolutionResponse_CompactSolution::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NDD.SolutionResponse.CompactSolution)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .NDD.TaskSequence taskSequence = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tasksequence()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float objectives = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 21u, input, this->mutable_objectives())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_objectives())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string objectiveNames = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_objectivenames()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->objectivenames(this->objectivenames_size() - 1).data(),
            static_cast<int>(this->objectivenames(this->objectivenames_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NDD.SolutionResponse.CompactSolution.objectiveNames");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NDD.SolutionResponse.CompactSolution)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NDD.SolutionResponse.CompactSolution)
  return false;
#undef DO_
}

void SolutionResponse_CompactSolution::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NDD.SolutionResponse.CompactSolution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .NDD.TaskSequence taskSequence = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tasksequence_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->tasksequence(static_cast<int>(i)),
      output);
  }

  // repeated float objectives = 2;
  for (int i = 0, n = this->objectives_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      2, this->objectives(i), output);
  }

  // repeated string objectiveNames = 3;
  for (int i = 0, n = this->objectivenames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->objectivenames(i).data(), static_cast<int>(this->objectivenames(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.SolutionResponse.CompactSolution.objectiveNames");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->objectivenames(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NDD.SolutionResponse.CompactSolution)
}

::google::protobuf::uint8* SolutionResponse_CompactSolution::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NDD.SolutionResponse.CompactSolution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .NDD.TaskSequence taskSequence = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tasksequence_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->tasksequence(static_cast<int>(i)), deterministic, target);
  }

  // repeated float objectives = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(2, this->objectives_, target);

  // repeated string objectiveNames = 3;
  for (int i = 0, n = this->objectivenames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->objectivenames(i).data(), static_cast<int>(this->objectivenames(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NDD.SolutionResponse.CompactSolution.objectiveNames");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->objectivenames(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NDD.SolutionResponse.CompactSolution)
  return target;
}

size_t SolutionResponse_CompactSolution::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NDD.SolutionResponse.CompactSolution)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .NDD.TaskSequence taskSequence = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->tasksequence_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tasksequence(static_cast<int>(i)));
    }
  }

  // repeated float objectives = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->objectives_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->objectives_size());
    total_size += data_size;
  }

  // repeated string objectiveNames = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->objectivenames_size());
  for (int i = 0, n = this->objectivenames_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->objectivenames(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SolutionResponse_CompactSolution::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NDD.SolutionResponse.CompactSolution)
  GOOGLE_DCHECK_NE(&from, this);
  const SolutionResponse_CompactSolution* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SolutionResponse_CompactSolution>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NDD.SolutionResponse.CompactSolution)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NDD.SolutionResponse.CompactSolution)
    MergeFrom(*source);
  }
}

void SolutionResponse_CompactSolution::MergeFrom(const SolutionResponse_CompactSolution& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NDD.SolutionResponse.CompactSolution)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tasksequence_.MergeFrom(from.tasksequence_);
  objectives_.MergeFrom(from.objectives_);
  objectivenames_.MergeFrom(from.objectivenames_);
}

void SolutionResponse_CompactSolution::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NDD.SolutionResponse.CompactSolution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SolutionResponse_CompactSolution::CopyFrom(const SolutionResponse_CompactSolution& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NDD.SolutionResponse.CompactSolution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SolutionResponse_CompactSolution::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->tasksequence())) return false;
  return true;
}

void SolutionResponse_CompactSolution::Swap(SolutionResponse_CompactSolution* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SolutionResponse_CompactSolution::InternalSwap(SolutionResponse_CompactSolution* other) {
  using std::swap;
  CastToBase(&tasksequence_)->InternalSwap(CastToBase(&other->tasksequence_));
  objectives_.InternalSwap(&other->objectives_);
  objectivenames_.InternalSwap(CastToBase(&other->objectivenames_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SolutionResponse_CompactSolution::GetMetadata() const {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SolutionResponse_SolutionInstance::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SolutionResponse_SolutionInstance::kRoutesFieldNumber;
const int SolutionResponse_SolutionInstance::kInfeasibilitiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SolutionResponse_SolutionInstance::SolutionResponse_SolutionInstance()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_SolutionResponse_SolutionInstance.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NDD.SolutionResponse.SolutionInstance)
}
SolutionResponse_SolutionInstance::SolutionResponse_SolutionInstance(const SolutionResponse_SolutionInstance& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      routes_(from.routes_),
      infeasibilities_(from.infeasibilities_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NDD.SolutionResponse.SolutionInstance)
}

void SolutionResponse_SolutionInstance::SharedCtor() {
}

SolutionResponse_SolutionInstance::~SolutionResponse_SolutionInstance() {
  // @@protoc_insertion_point(destructor:NDD.SolutionResponse.SolutionInstance)
  SharedDtor();
}

void SolutionResponse_SolutionInstance::SharedDtor() {
}

void SolutionResponse_SolutionInstance::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SolutionResponse_SolutionInstance::descriptor() {
  ::protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SolutionResponse_SolutionInstance& SolutionResponse_SolutionInstance::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_SolutionResponse_SolutionInstance.base);
  return *internal_default_instance();
}


void SolutionResponse_SolutionInstance::Clear() {
// @@protoc_insertion_point(message_clear_start:NDD.SolutionResponse.SolutionInstance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  routes_.Clear();
  infeasibilities_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SolutionResponse_SolutionInstance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NDD.SolutionResponse.SolutionInstance)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .NDD.SolutionResponse.Route routes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_routes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NDD.SolutionResponse.Infeasibility infeasibilities = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_infeasibilities()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NDD.SolutionResponse.SolutionInstance)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NDD.SolutionResponse.SolutionInstance)
  return false;
#undef DO_
}

void SolutionResponse_SolutionInstance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NDD.SolutionResponse.SolutionInstance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .NDD.SolutionResponse.Route routes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->routes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->routes(static_cast<int>(i)),
      output);
  }

  // repeated .NDD.SolutionResponse.Infeasibility infeasibilities = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->infeasibilities_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->infeasibilities(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NDD.SolutionResponse.SolutionInstance)
}

::google::protobuf::uint8* SolutionResponse_SolutionInstance::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NDD.SolutionResponse.SolutionInstance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .NDD.SolutionResponse.Route routes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->routes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->routes(static_cast<int>(i)), deterministic, target);
  }

  // repeated .NDD.SolutionResponse.Infeasibility infeasibilities = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->infeasibilities_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->infeasibilities(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NDD.SolutionResponse.SolutionInstance)
  return target;
}

size_t SolutionResponse_SolutionInstance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NDD.SolutionResponse.SolutionInstance)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .NDD.SolutionResponse.Route routes = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->routes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->routes(static_cast<int>(i)));
    }
  }

  // repeated .NDD.SolutionResponse.Infeasibility infeasibilities = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->infeasibilities_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->infeasibilities(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SolutionResponse_SolutionInstance::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NDD.SolutionResponse.SolutionInstance)
  GOOGLE_DCHECK_NE(&from, this);
  const SolutionResponse_SolutionInstance* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SolutionResponse_SolutionInstance>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NDD.SolutionResponse.SolutionInstance)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NDD.SolutionResponse.SolutionInstance)
    MergeFrom(*source);
  }
}

void SolutionResponse_SolutionInstance::MergeFrom(const SolutionResponse_SolutionInstance& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NDD.SolutionResponse.SolutionInstance)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  routes_.MergeFrom(from.routes_);
  infeasibilities_.MergeFrom(from.infeasibilities_);
}

void SolutionResponse_SolutionInstance::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NDD.SolutionResponse.SolutionInstance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SolutionResponse_SolutionInstance::CopyFrom(const SolutionResponse_SolutionInstance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NDD.SolutionResponse.SolutionInstance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SolutionResponse_SolutionInstance::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->routes())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->infeasibilities())) return false;
  return true;
}

void SolutionResponse_SolutionInstance::Swap(SolutionResponse_SolutionInstance* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SolutionResponse_SolutionInstance::InternalSwap(SolutionResponse_SolutionInstance* other) {
  using std::swap;
  CastToBase(&routes_)->InternalSwap(CastToBase(&other->routes_));
  CastToBase(&infeasibilities_)->InternalSwap(CastToBase(&other->infeasibilities_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SolutionResponse_SolutionInstance::GetMetadata() const {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SolutionResponse::InitAsDefaultInstance() {
  ::NDD::_SolutionResponse_default_instance_._instance.get_mutable()->instance_ = const_cast< ::NDD::SolutionResponse_SolutionInstance*>(
      ::NDD::SolutionResponse_SolutionInstance::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SolutionResponse::kFrontierFieldNumber;
const int SolutionResponse::kInstanceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SolutionResponse::SolutionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_SolutionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NDD.SolutionResponse)
}
SolutionResponse::SolutionResponse(const SolutionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      frontier_(from.frontier_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_instance()) {
    instance_ = new ::NDD::SolutionResponse_SolutionInstance(*from.instance_);
  } else {
    instance_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NDD.SolutionResponse)
}

void SolutionResponse::SharedCtor() {
  instance_ = NULL;
}

SolutionResponse::~SolutionResponse() {
  // @@protoc_insertion_point(destructor:NDD.SolutionResponse)
  SharedDtor();
}

void SolutionResponse::SharedDtor() {
  if (this != internal_default_instance()) delete instance_;
}

void SolutionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SolutionResponse::descriptor() {
  ::protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SolutionResponse& SolutionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ndd_2dcmibu6krtqja_2eproto::scc_info_SolutionResponse.base);
  return *internal_default_instance();
}


void SolutionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:NDD.SolutionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  frontier_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(instance_ != NULL);
    instance_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SolutionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NDD.SolutionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .NDD.SolutionResponse.CompactSolution frontier = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_frontier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .NDD.SolutionResponse.SolutionInstance instance = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instance()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NDD.SolutionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NDD.SolutionResponse)
  return false;
#undef DO_
}

void SolutionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NDD.SolutionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .NDD.SolutionResponse.CompactSolution frontier = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->frontier_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->frontier(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional .NDD.SolutionResponse.SolutionInstance instance = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_instance(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NDD.SolutionResponse)
}

::google::protobuf::uint8* SolutionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NDD.SolutionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .NDD.SolutionResponse.CompactSolution frontier = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->frontier_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->frontier(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .NDD.SolutionResponse.SolutionInstance instance = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_instance(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NDD.SolutionResponse)
  return target;
}

size_t SolutionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NDD.SolutionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .NDD.SolutionResponse.CompactSolution frontier = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->frontier_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->frontier(static_cast<int>(i)));
    }
  }

  // optional .NDD.SolutionResponse.SolutionInstance instance = 2;
  if (has_instance()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *instance_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SolutionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NDD.SolutionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SolutionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SolutionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NDD.SolutionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NDD.SolutionResponse)
    MergeFrom(*source);
  }
}

void SolutionResponse::MergeFrom(const SolutionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NDD.SolutionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  frontier_.MergeFrom(from.frontier_);
  if (from.has_instance()) {
    mutable_instance()->::NDD::SolutionResponse_SolutionInstance::MergeFrom(from.instance());
  }
}

void SolutionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NDD.SolutionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SolutionResponse::CopyFrom(const SolutionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NDD.SolutionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SolutionResponse::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->frontier())) return false;
  if (has_instance()) {
    if (!this->instance_->IsInitialized()) return false;
  }
  return true;
}

void SolutionResponse::Swap(SolutionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SolutionResponse::InternalSwap(SolutionResponse* other) {
  using std::swap;
  CastToBase(&frontier_)->InternalSwap(CastToBase(&other->frontier_));
  swap(instance_, other->instance_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SolutionResponse::GetMetadata() const {
  protobuf_ndd_2dcmibu6krtqja_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ndd_2dcmibu6krtqja_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace NDD
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NDD::InternalDimension* Arena::CreateMaybeMessage< ::NDD::InternalDimension >(Arena* arena) {
  return Arena::CreateInternal< ::NDD::InternalDimension >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NDD::CapacityDimension* Arena::CreateMaybeMessage< ::NDD::CapacityDimension >(Arena* arena) {
  return Arena::CreateInternal< ::NDD::CapacityDimension >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NDD::DimensionConfiguration* Arena::CreateMaybeMessage< ::NDD::DimensionConfiguration >(Arena* arena) {
  return Arena::CreateInternal< ::NDD::DimensionConfiguration >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NDD::Geocode* Arena::CreateMaybeMessage< ::NDD::Geocode >(Arena* arena) {
  return Arena::CreateInternal< ::NDD::Geocode >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NDD::Window* Arena::CreateMaybeMessage< ::NDD::Window >(Arena* arena) {
  return Arena::CreateInternal< ::NDD::Window >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NDD::Location_Attribute* Arena::CreateMaybeMessage< ::NDD::Location_Attribute >(Arena* arena) {
  return Arena::CreateInternal< ::NDD::Location_Attribute >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NDD::Location* Arena::CreateMaybeMessage< ::NDD::Location >(Arena* arena) {
  return Arena::CreateInternal< ::NDD::Location >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NDD::Profile_customCycle* Arena::CreateMaybeMessage< ::NDD::Profile_customCycle >(Arena* arena) {
  return Arena::CreateInternal< ::NDD::Profile_customCycle >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NDD::Profile* Arena::CreateMaybeMessage< ::NDD::Profile >(Arena* arena) {
  return Arena::CreateInternal< ::NDD::Profile >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NDD::Job_VehicleRelation* Arena::CreateMaybeMessage< ::NDD::Job_VehicleRelation >(Arena* arena) {
  return Arena::CreateInternal< ::NDD::Job_VehicleRelation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NDD::Job_Task_Attribute* Arena::CreateMaybeMessage< ::NDD::Job_Task_Attribute >(Arena* arena) {
  return Arena::CreateInternal< ::NDD::Job_Task_Attribute >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NDD::Job_Task* Arena::CreateMaybeMessage< ::NDD::Job_Task >(Arena* arena) {
  return Arena::CreateInternal< ::NDD::Job_Task >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NDD::Job* Arena::CreateMaybeMessage< ::NDD::Job >(Arena* arena) {
  return Arena::CreateInternal< ::NDD::Job >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NDD::TransitSet_TransitValue* Arena::CreateMaybeMessage< ::NDD::TransitSet_TransitValue >(Arena* arena) {
  return Arena::CreateInternal< ::NDD::TransitSet_TransitValue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NDD::TransitSet* Arena::CreateMaybeMessage< ::NDD::TransitSet >(Arena* arena) {
  return Arena::CreateInternal< ::NDD::TransitSet >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NDD::TransitGenerator* Arena::CreateMaybeMessage< ::NDD::TransitGenerator >(Arena* arena) {
  return Arena::CreateInternal< ::NDD::TransitGenerator >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NDD::VehicleClass_Attribute* Arena::CreateMaybeMessage< ::NDD::VehicleClass_Attribute >(Arena* arena) {
  return Arena::CreateInternal< ::NDD::VehicleClass_Attribute >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NDD::VehicleClass* Arena::CreateMaybeMessage< ::NDD::VehicleClass >(Arena* arena) {
  return Arena::CreateInternal< ::NDD::VehicleClass >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NDD::VehicleCostClass_Attribute* Arena::CreateMaybeMessage< ::NDD::VehicleCostClass_Attribute >(Arena* arena) {
  return Arena::CreateInternal< ::NDD::VehicleCostClass_Attribute >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NDD::VehicleCostClass* Arena::CreateMaybeMessage< ::NDD::VehicleCostClass >(Arena* arena) {
  return Arena::CreateInternal< ::NDD::VehicleCostClass >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NDD::Vehicle_Task_Attribute* Arena::CreateMaybeMessage< ::NDD::Vehicle_Task_Attribute >(Arena* arena) {
  return Arena::CreateInternal< ::NDD::Vehicle_Task_Attribute >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NDD::Vehicle_Task* Arena::CreateMaybeMessage< ::NDD::Vehicle_Task >(Arena* arena) {
  return Arena::CreateInternal< ::NDD::Vehicle_Task >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NDD::Vehicle_Shift* Arena::CreateMaybeMessage< ::NDD::Vehicle_Shift >(Arena* arena) {
  return Arena::CreateInternal< ::NDD::Vehicle_Shift >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NDD::Vehicle_Capacity* Arena::CreateMaybeMessage< ::NDD::Vehicle_Capacity >(Arena* arena) {
  return Arena::CreateInternal< ::NDD::Vehicle_Capacity >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NDD::Vehicle* Arena::CreateMaybeMessage< ::NDD::Vehicle >(Arena* arena) {
  return Arena::CreateInternal< ::NDD::Vehicle >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NDD::TaskSequence* Arena::CreateMaybeMessage< ::NDD::TaskSequence >(Arena* arena) {
  return Arena::CreateInternal< ::NDD::TaskSequence >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NDD::TransitRule_Trigger* Arena::CreateMaybeMessage< ::NDD::TransitRule_Trigger >(Arena* arena) {
  return Arena::CreateInternal< ::NDD::TransitRule_Trigger >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NDD::TransitRule* Arena::CreateMaybeMessage< ::NDD::TransitRule >(Arena* arena) {
  return Arena::CreateInternal< ::NDD::TransitRule >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NDD::Model* Arena::CreateMaybeMessage< ::NDD::Model >(Arena* arena) {
  return Arena::CreateInternal< ::NDD::Model >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NDD::SolveRequest* Arena::CreateMaybeMessage< ::NDD::SolveRequest >(Arena* arena) {
  return Arena::CreateInternal< ::NDD::SolveRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NDD::SolutionResponse_StopAttribute* Arena::CreateMaybeMessage< ::NDD::SolutionResponse_StopAttribute >(Arena* arena) {
  return Arena::CreateInternal< ::NDD::SolutionResponse_StopAttribute >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NDD::SolutionResponse_InterStopAttribute* Arena::CreateMaybeMessage< ::NDD::SolutionResponse_InterStopAttribute >(Arena* arena) {
  return Arena::CreateInternal< ::NDD::SolutionResponse_InterStopAttribute >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NDD::SolutionResponse_Stop* Arena::CreateMaybeMessage< ::NDD::SolutionResponse_Stop >(Arena* arena) {
  return Arena::CreateInternal< ::NDD::SolutionResponse_Stop >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NDD::SolutionResponse_InterStop* Arena::CreateMaybeMessage< ::NDD::SolutionResponse_InterStop >(Arena* arena) {
  return Arena::CreateInternal< ::NDD::SolutionResponse_InterStop >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NDD::SolutionResponse_TransitRuleAttribute* Arena::CreateMaybeMessage< ::NDD::SolutionResponse_TransitRuleAttribute >(Arena* arena) {
  return Arena::CreateInternal< ::NDD::SolutionResponse_TransitRuleAttribute >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NDD::SolutionResponse_Route* Arena::CreateMaybeMessage< ::NDD::SolutionResponse_Route >(Arena* arena) {
  return Arena::CreateInternal< ::NDD::SolutionResponse_Route >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NDD::SolutionResponse_Infeasibility_Info* Arena::CreateMaybeMessage< ::NDD::SolutionResponse_Infeasibility_Info >(Arena* arena) {
  return Arena::CreateInternal< ::NDD::SolutionResponse_Infeasibility_Info >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NDD::SolutionResponse_Infeasibility* Arena::CreateMaybeMessage< ::NDD::SolutionResponse_Infeasibility >(Arena* arena) {
  return Arena::CreateInternal< ::NDD::SolutionResponse_Infeasibility >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NDD::SolutionResponse_CompactSolution* Arena::CreateMaybeMessage< ::NDD::SolutionResponse_CompactSolution >(Arena* arena) {
  return Arena::CreateInternal< ::NDD::SolutionResponse_CompactSolution >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NDD::SolutionResponse_SolutionInstance* Arena::CreateMaybeMessage< ::NDD::SolutionResponse_SolutionInstance >(Arena* arena) {
  return Arena::CreateInternal< ::NDD::SolutionResponse_SolutionInstance >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NDD::SolutionResponse* Arena::CreateMaybeMessage< ::NDD::SolutionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::NDD::SolutionResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
