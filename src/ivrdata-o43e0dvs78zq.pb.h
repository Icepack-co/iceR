// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ivrdata-o43e0dvs78zq.proto

#ifndef PROTOBUF_INCLUDED_ivrdata_2do43e0dvs78zq_2eproto
#define PROTOBUF_INCLUDED_ivrdata_2do43e0dvs78zq_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_ivrdata_2do43e0dvs78zq_2eproto 

namespace protobuf_ivrdata_2do43e0dvs78zq_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_ivrdata_2do43e0dvs78zq_2eproto
namespace IVRData {
class CachedModel;
class CachedModelDefaultTypeInternal;
extern CachedModelDefaultTypeInternal _CachedModel_default_instance_;
class CachedTransitSet;
class CachedTransitSetDefaultTypeInternal;
extern CachedTransitSetDefaultTypeInternal _CachedTransitSet_default_instance_;
class TransitSet;
class TransitSetDefaultTypeInternal;
extern TransitSetDefaultTypeInternal _TransitSet_default_instance_;
class TransitSet_TransitValue;
class TransitSet_TransitValueDefaultTypeInternal;
extern TransitSet_TransitValueDefaultTypeInternal _TransitSet_TransitValue_default_instance_;
}  // namespace IVRData
namespace google {
namespace protobuf {
template<> ::IVRData::CachedModel* Arena::CreateMaybeMessage<::IVRData::CachedModel>(Arena*);
template<> ::IVRData::CachedTransitSet* Arena::CreateMaybeMessage<::IVRData::CachedTransitSet>(Arena*);
template<> ::IVRData::TransitSet* Arena::CreateMaybeMessage<::IVRData::TransitSet>(Arena*);
template<> ::IVRData::TransitSet_TransitValue* Arena::CreateMaybeMessage<::IVRData::TransitSet_TransitValue>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace IVRData {

// ===================================================================

class TransitSet_TransitValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IVRData.TransitSet.TransitValue) */ {
 public:
  TransitSet_TransitValue();
  virtual ~TransitSet_TransitValue();

  TransitSet_TransitValue(const TransitSet_TransitValue& from);

  inline TransitSet_TransitValue& operator=(const TransitSet_TransitValue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransitSet_TransitValue(TransitSet_TransitValue&& from) noexcept
    : TransitSet_TransitValue() {
    *this = ::std::move(from);
  }

  inline TransitSet_TransitValue& operator=(TransitSet_TransitValue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransitSet_TransitValue& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransitSet_TransitValue* internal_default_instance() {
    return reinterpret_cast<const TransitSet_TransitValue*>(
               &_TransitSet_TransitValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(TransitSet_TransitValue* other);
  friend void swap(TransitSet_TransitValue& a, TransitSet_TransitValue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransitSet_TransitValue* New() const final {
    return CreateMaybeMessage<TransitSet_TransitValue>(NULL);
  }

  TransitSet_TransitValue* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TransitSet_TransitValue>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TransitSet_TransitValue& from);
  void MergeFrom(const TransitSet_TransitValue& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TransitSet_TransitValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string fromId = 1;
  bool has_fromid() const;
  void clear_fromid();
  static const int kFromIdFieldNumber = 1;
  const ::std::string& fromid() const;
  void set_fromid(const ::std::string& value);
  #if LANG_CXX11
  void set_fromid(::std::string&& value);
  #endif
  void set_fromid(const char* value);
  void set_fromid(const char* value, size_t size);
  ::std::string* mutable_fromid();
  ::std::string* release_fromid();
  void set_allocated_fromid(::std::string* fromid);

  // required string toId = 2;
  bool has_toid() const;
  void clear_toid();
  static const int kToIdFieldNumber = 2;
  const ::std::string& toid() const;
  void set_toid(const ::std::string& value);
  #if LANG_CXX11
  void set_toid(::std::string&& value);
  #endif
  void set_toid(const char* value);
  void set_toid(const char* value, size_t size);
  ::std::string* mutable_toid();
  ::std::string* release_toid();
  void set_allocated_toid(::std::string* toid);

  // required float value = 3;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 3;
  float value() const;
  void set_value(float value);

  // @@protoc_insertion_point(class_scope:IVRData.TransitSet.TransitValue)
 private:
  void set_has_fromid();
  void clear_has_fromid();
  void set_has_toid();
  void clear_has_toid();
  void set_has_value();
  void clear_has_value();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr fromid_;
  ::google::protobuf::internal::ArenaStringPtr toid_;
  float value_;
  friend struct ::protobuf_ivrdata_2do43e0dvs78zq_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TransitSet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IVRData.TransitSet) */ {
 public:
  TransitSet();
  virtual ~TransitSet();

  TransitSet(const TransitSet& from);

  inline TransitSet& operator=(const TransitSet& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransitSet(TransitSet&& from) noexcept
    : TransitSet() {
    *this = ::std::move(from);
  }

  inline TransitSet& operator=(TransitSet&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransitSet& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransitSet* internal_default_instance() {
    return reinterpret_cast<const TransitSet*>(
               &_TransitSet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(TransitSet* other);
  friend void swap(TransitSet& a, TransitSet& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransitSet* New() const final {
    return CreateMaybeMessage<TransitSet>(NULL);
  }

  TransitSet* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TransitSet>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TransitSet& from);
  void MergeFrom(const TransitSet& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TransitSet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef TransitSet_TransitValue TransitValue;

  // accessors -------------------------------------------------------

  // repeated .IVRData.TransitSet.TransitValue transits = 1;
  int transits_size() const;
  void clear_transits();
  static const int kTransitsFieldNumber = 1;
  ::IVRData::TransitSet_TransitValue* mutable_transits(int index);
  ::google::protobuf::RepeatedPtrField< ::IVRData::TransitSet_TransitValue >*
      mutable_transits();
  const ::IVRData::TransitSet_TransitValue& transits(int index) const;
  ::IVRData::TransitSet_TransitValue* add_transits();
  const ::google::protobuf::RepeatedPtrField< ::IVRData::TransitSet_TransitValue >&
      transits() const;

  // @@protoc_insertion_point(class_scope:IVRData.TransitSet)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::IVRData::TransitSet_TransitValue > transits_;
  friend struct ::protobuf_ivrdata_2do43e0dvs78zq_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CachedTransitSet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IVRData.CachedTransitSet) */ {
 public:
  CachedTransitSet();
  virtual ~CachedTransitSet();

  CachedTransitSet(const CachedTransitSet& from);

  inline CachedTransitSet& operator=(const CachedTransitSet& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CachedTransitSet(CachedTransitSet&& from) noexcept
    : CachedTransitSet() {
    *this = ::std::move(from);
  }

  inline CachedTransitSet& operator=(CachedTransitSet&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CachedTransitSet& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CachedTransitSet* internal_default_instance() {
    return reinterpret_cast<const CachedTransitSet*>(
               &_CachedTransitSet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CachedTransitSet* other);
  friend void swap(CachedTransitSet& a, CachedTransitSet& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CachedTransitSet* New() const final {
    return CreateMaybeMessage<CachedTransitSet>(NULL);
  }

  CachedTransitSet* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CachedTransitSet>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CachedTransitSet& from);
  void MergeFrom(const CachedTransitSet& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CachedTransitSet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .IVRData.TransitSet transitSet = 1;
  bool has_transitset() const;
  void clear_transitset();
  static const int kTransitSetFieldNumber = 1;
  private:
  const ::IVRData::TransitSet& _internal_transitset() const;
  public:
  const ::IVRData::TransitSet& transitset() const;
  ::IVRData::TransitSet* release_transitset();
  ::IVRData::TransitSet* mutable_transitset();
  void set_allocated_transitset(::IVRData::TransitSet* transitset);

  // @@protoc_insertion_point(class_scope:IVRData.CachedTransitSet)
 private:
  void set_has_transitset();
  void clear_has_transitset();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::IVRData::TransitSet* transitset_;
  friend struct ::protobuf_ivrdata_2do43e0dvs78zq_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CachedModel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IVRData.CachedModel) */ {
 public:
  CachedModel();
  virtual ~CachedModel();

  CachedModel(const CachedModel& from);

  inline CachedModel& operator=(const CachedModel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CachedModel(CachedModel&& from) noexcept
    : CachedModel() {
    *this = ::std::move(from);
  }

  inline CachedModel& operator=(CachedModel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CachedModel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CachedModel* internal_default_instance() {
    return reinterpret_cast<const CachedModel*>(
               &_CachedModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(CachedModel* other);
  friend void swap(CachedModel& a, CachedModel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CachedModel* New() const final {
    return CreateMaybeMessage<CachedModel>(NULL);
  }

  CachedModel* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CachedModel>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CachedModel& from);
  void MergeFrom(const CachedModel& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CachedModel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes model = 1;
  bool has_model() const;
  void clear_model();
  static const int kModelFieldNumber = 1;
  const ::std::string& model() const;
  void set_model(const ::std::string& value);
  #if LANG_CXX11
  void set_model(::std::string&& value);
  #endif
  void set_model(const char* value);
  void set_model(const void* value, size_t size);
  ::std::string* mutable_model();
  ::std::string* release_model();
  void set_allocated_model(::std::string* model);

  // @@protoc_insertion_point(class_scope:IVRData.CachedModel)
 private:
  void set_has_model();
  void clear_has_model();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr model_;
  friend struct ::protobuf_ivrdata_2do43e0dvs78zq_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TransitSet_TransitValue

// required string fromId = 1;
inline bool TransitSet_TransitValue::has_fromid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransitSet_TransitValue::set_has_fromid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransitSet_TransitValue::clear_has_fromid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransitSet_TransitValue::clear_fromid() {
  fromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fromid();
}
inline const ::std::string& TransitSet_TransitValue::fromid() const {
  // @@protoc_insertion_point(field_get:IVRData.TransitSet.TransitValue.fromId)
  return fromid_.GetNoArena();
}
inline void TransitSet_TransitValue::set_fromid(const ::std::string& value) {
  set_has_fromid();
  fromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IVRData.TransitSet.TransitValue.fromId)
}
#if LANG_CXX11
inline void TransitSet_TransitValue::set_fromid(::std::string&& value) {
  set_has_fromid();
  fromid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IVRData.TransitSet.TransitValue.fromId)
}
#endif
inline void TransitSet_TransitValue::set_fromid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_fromid();
  fromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IVRData.TransitSet.TransitValue.fromId)
}
inline void TransitSet_TransitValue::set_fromid(const char* value, size_t size) {
  set_has_fromid();
  fromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IVRData.TransitSet.TransitValue.fromId)
}
inline ::std::string* TransitSet_TransitValue::mutable_fromid() {
  set_has_fromid();
  // @@protoc_insertion_point(field_mutable:IVRData.TransitSet.TransitValue.fromId)
  return fromid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransitSet_TransitValue::release_fromid() {
  // @@protoc_insertion_point(field_release:IVRData.TransitSet.TransitValue.fromId)
  if (!has_fromid()) {
    return NULL;
  }
  clear_has_fromid();
  return fromid_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransitSet_TransitValue::set_allocated_fromid(::std::string* fromid) {
  if (fromid != NULL) {
    set_has_fromid();
  } else {
    clear_has_fromid();
  }
  fromid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fromid);
  // @@protoc_insertion_point(field_set_allocated:IVRData.TransitSet.TransitValue.fromId)
}

// required string toId = 2;
inline bool TransitSet_TransitValue::has_toid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TransitSet_TransitValue::set_has_toid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TransitSet_TransitValue::clear_has_toid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TransitSet_TransitValue::clear_toid() {
  toid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_toid();
}
inline const ::std::string& TransitSet_TransitValue::toid() const {
  // @@protoc_insertion_point(field_get:IVRData.TransitSet.TransitValue.toId)
  return toid_.GetNoArena();
}
inline void TransitSet_TransitValue::set_toid(const ::std::string& value) {
  set_has_toid();
  toid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IVRData.TransitSet.TransitValue.toId)
}
#if LANG_CXX11
inline void TransitSet_TransitValue::set_toid(::std::string&& value) {
  set_has_toid();
  toid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IVRData.TransitSet.TransitValue.toId)
}
#endif
inline void TransitSet_TransitValue::set_toid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_toid();
  toid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IVRData.TransitSet.TransitValue.toId)
}
inline void TransitSet_TransitValue::set_toid(const char* value, size_t size) {
  set_has_toid();
  toid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IVRData.TransitSet.TransitValue.toId)
}
inline ::std::string* TransitSet_TransitValue::mutable_toid() {
  set_has_toid();
  // @@protoc_insertion_point(field_mutable:IVRData.TransitSet.TransitValue.toId)
  return toid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransitSet_TransitValue::release_toid() {
  // @@protoc_insertion_point(field_release:IVRData.TransitSet.TransitValue.toId)
  if (!has_toid()) {
    return NULL;
  }
  clear_has_toid();
  return toid_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransitSet_TransitValue::set_allocated_toid(::std::string* toid) {
  if (toid != NULL) {
    set_has_toid();
  } else {
    clear_has_toid();
  }
  toid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), toid);
  // @@protoc_insertion_point(field_set_allocated:IVRData.TransitSet.TransitValue.toId)
}

// required float value = 3;
inline bool TransitSet_TransitValue::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TransitSet_TransitValue::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TransitSet_TransitValue::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TransitSet_TransitValue::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline float TransitSet_TransitValue::value() const {
  // @@protoc_insertion_point(field_get:IVRData.TransitSet.TransitValue.value)
  return value_;
}
inline void TransitSet_TransitValue::set_value(float value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:IVRData.TransitSet.TransitValue.value)
}

// -------------------------------------------------------------------

// TransitSet

// repeated .IVRData.TransitSet.TransitValue transits = 1;
inline int TransitSet::transits_size() const {
  return transits_.size();
}
inline void TransitSet::clear_transits() {
  transits_.Clear();
}
inline ::IVRData::TransitSet_TransitValue* TransitSet::mutable_transits(int index) {
  // @@protoc_insertion_point(field_mutable:IVRData.TransitSet.transits)
  return transits_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::IVRData::TransitSet_TransitValue >*
TransitSet::mutable_transits() {
  // @@protoc_insertion_point(field_mutable_list:IVRData.TransitSet.transits)
  return &transits_;
}
inline const ::IVRData::TransitSet_TransitValue& TransitSet::transits(int index) const {
  // @@protoc_insertion_point(field_get:IVRData.TransitSet.transits)
  return transits_.Get(index);
}
inline ::IVRData::TransitSet_TransitValue* TransitSet::add_transits() {
  // @@protoc_insertion_point(field_add:IVRData.TransitSet.transits)
  return transits_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::IVRData::TransitSet_TransitValue >&
TransitSet::transits() const {
  // @@protoc_insertion_point(field_list:IVRData.TransitSet.transits)
  return transits_;
}

// -------------------------------------------------------------------

// CachedTransitSet

// required .IVRData.TransitSet transitSet = 1;
inline bool CachedTransitSet::has_transitset() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CachedTransitSet::set_has_transitset() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CachedTransitSet::clear_has_transitset() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CachedTransitSet::clear_transitset() {
  if (transitset_ != NULL) transitset_->Clear();
  clear_has_transitset();
}
inline const ::IVRData::TransitSet& CachedTransitSet::_internal_transitset() const {
  return *transitset_;
}
inline const ::IVRData::TransitSet& CachedTransitSet::transitset() const {
  const ::IVRData::TransitSet* p = transitset_;
  // @@protoc_insertion_point(field_get:IVRData.CachedTransitSet.transitSet)
  return p != NULL ? *p : *reinterpret_cast<const ::IVRData::TransitSet*>(
      &::IVRData::_TransitSet_default_instance_);
}
inline ::IVRData::TransitSet* CachedTransitSet::release_transitset() {
  // @@protoc_insertion_point(field_release:IVRData.CachedTransitSet.transitSet)
  clear_has_transitset();
  ::IVRData::TransitSet* temp = transitset_;
  transitset_ = NULL;
  return temp;
}
inline ::IVRData::TransitSet* CachedTransitSet::mutable_transitset() {
  set_has_transitset();
  if (transitset_ == NULL) {
    auto* p = CreateMaybeMessage<::IVRData::TransitSet>(GetArenaNoVirtual());
    transitset_ = p;
  }
  // @@protoc_insertion_point(field_mutable:IVRData.CachedTransitSet.transitSet)
  return transitset_;
}
inline void CachedTransitSet::set_allocated_transitset(::IVRData::TransitSet* transitset) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete transitset_;
  }
  if (transitset) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      transitset = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, transitset, submessage_arena);
    }
    set_has_transitset();
  } else {
    clear_has_transitset();
  }
  transitset_ = transitset;
  // @@protoc_insertion_point(field_set_allocated:IVRData.CachedTransitSet.transitSet)
}

// -------------------------------------------------------------------

// CachedModel

// required bytes model = 1;
inline bool CachedModel::has_model() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CachedModel::set_has_model() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CachedModel::clear_has_model() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CachedModel::clear_model() {
  model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_model();
}
inline const ::std::string& CachedModel::model() const {
  // @@protoc_insertion_point(field_get:IVRData.CachedModel.model)
  return model_.GetNoArena();
}
inline void CachedModel::set_model(const ::std::string& value) {
  set_has_model();
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IVRData.CachedModel.model)
}
#if LANG_CXX11
inline void CachedModel::set_model(::std::string&& value) {
  set_has_model();
  model_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IVRData.CachedModel.model)
}
#endif
inline void CachedModel::set_model(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_model();
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IVRData.CachedModel.model)
}
inline void CachedModel::set_model(const void* value, size_t size) {
  set_has_model();
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IVRData.CachedModel.model)
}
inline ::std::string* CachedModel::mutable_model() {
  set_has_model();
  // @@protoc_insertion_point(field_mutable:IVRData.CachedModel.model)
  return model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CachedModel::release_model() {
  // @@protoc_insertion_point(field_release:IVRData.CachedModel.model)
  if (!has_model()) {
    return NULL;
  }
  clear_has_model();
  return model_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CachedModel::set_allocated_model(::std::string* model) {
  if (model != NULL) {
    set_has_model();
  } else {
    clear_has_model();
  }
  model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model);
  // @@protoc_insertion_point(field_set_allocated:IVRData.CachedModel.model)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace IVRData

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_ivrdata_2do43e0dvs78zq_2eproto
