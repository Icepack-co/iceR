// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ivr8-yni1c9k2swof.proto

#include "ivr8-yni1c9k2swof.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace IVR8 {
        template <typename>
PROTOBUF_CONSTEXPR InternalDimension::InternalDimension(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.measurementunit_)*/ 0,
      /*decltype(_impl_.slackmax_)*/ 0,
      /*decltype(_impl_.tardymax_)*/ 0,
    } {}
struct InternalDimensionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InternalDimensionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InternalDimensionDefaultTypeInternal() {}
  union {
    InternalDimension _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InternalDimensionDefaultTypeInternal _InternalDimension_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CapacityDimension::CapacityDimension(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.units_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.slackmax_)*/ 0,
      /*decltype(_impl_.tardymax_)*/ 0,
    } {}
struct CapacityDimensionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CapacityDimensionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CapacityDimensionDefaultTypeInternal() {}
  union {
    CapacityDimension _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CapacityDimensionDefaultTypeInternal _CapacityDimension_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR DimensionConfiguration::DimensionConfiguration(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.capacitydimensions_)*/ {},
      /*decltype(_impl_.timeconfig_)*/ nullptr,
      /*decltype(_impl_.distanceconfig_)*/ nullptr,
    } {}
struct DimensionConfigurationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DimensionConfigurationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DimensionConfigurationDefaultTypeInternal() {}
  union {
    DimensionConfiguration _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DimensionConfigurationDefaultTypeInternal _DimensionConfiguration_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Geocode::Geocode(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.longitude_)*/ 0,
      /*decltype(_impl_.latitude_)*/ 0,
    } {}
struct GeocodeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GeocodeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GeocodeDefaultTypeInternal() {}
  union {
    Geocode _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GeocodeDefaultTypeInternal _Geocode_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Window::Window(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.start_)*/ 0,
      /*decltype(_impl_.end_)*/ 0,
      /*decltype(_impl_.slackcostcoef_)*/ 0,
      /*decltype(_impl_.tardycostcoef_)*/ 0,
      /*decltype(_impl_.slackmax_)*/ -1,
      /*decltype(_impl_.tardymax_)*/ -1,
    } {}
struct WindowDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WindowDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WindowDefaultTypeInternal() {}
  union {
    Window _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WindowDefaultTypeInternal _Window_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Location_Attribute::Location_Attribute(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.arrivalwindows_)*/ {},
      /*decltype(_impl_.departurewindows_)*/ {},
      /*decltype(_impl_.dimensionid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.vehicleid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.quantity_)*/ 0,
    } {}
struct Location_AttributeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Location_AttributeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Location_AttributeDefaultTypeInternal() {}
  union {
    Location_Attribute _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Location_AttributeDefaultTypeInternal _Location_Attribute_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Location::Location(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.attributes_)*/ {},
      /*decltype(_impl_.id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.geocode_)*/ nullptr,
    } {}
struct LocationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocationDefaultTypeInternal() {}
  union {
    Location _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocationDefaultTypeInternal _Location_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Job_VehicleRelation::Job_VehicleRelation(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.vehicleids_)*/ {},
      /*decltype(_impl_.type_)*/ 0,
    } {}
struct Job_VehicleRelationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Job_VehicleRelationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Job_VehicleRelationDefaultTypeInternal() {}
  union {
    Job_VehicleRelation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Job_VehicleRelationDefaultTypeInternal _Job_VehicleRelation_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Job_CompartmentRelation::Job_CompartmentRelation(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.compartmentids_)*/ {},
      /*decltype(_impl_.type_)*/ 0,
    } {}
struct Job_CompartmentRelationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Job_CompartmentRelationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Job_CompartmentRelationDefaultTypeInternal() {}
  union {
    Job_CompartmentRelation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Job_CompartmentRelationDefaultTypeInternal _Job_CompartmentRelation_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Job_Task_Attribute::Job_Task_Attribute(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.windows_)*/ {},
      /*decltype(_impl_.vehicleids_)*/ {},
      /*decltype(_impl_.dimensionid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.quantity_)*/ 0,
    } {}
struct Job_Task_AttributeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Job_Task_AttributeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Job_Task_AttributeDefaultTypeInternal() {}
  union {
    Job_Task_Attribute _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Job_Task_AttributeDefaultTypeInternal _Job_Task_Attribute_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Job_Task_TaskRelation::Job_Task_TaskRelation(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.taskids_)*/ {},
      /*decltype(_impl_.type_)*/ 0,
    } {}
struct Job_Task_TaskRelationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Job_Task_TaskRelationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Job_Task_TaskRelationDefaultTypeInternal() {}
  union {
    Job_Task_TaskRelation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Job_Task_TaskRelationDefaultTypeInternal _Job_Task_TaskRelation_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Job_Task::Job_Task(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.attributes_)*/ {},
      /*decltype(_impl_.tripconstraints_)*/ {},
      /*decltype(_impl_.taskid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.locationid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.predecessors_)*/ nullptr,
      /*decltype(_impl_.successors_)*/ nullptr,
    } {}
struct Job_TaskDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Job_TaskDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Job_TaskDefaultTypeInternal() {}
  union {
    Job_Task _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Job_TaskDefaultTypeInternal _Job_Task_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Job::Job(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.pickuptask_)*/ nullptr,
      /*decltype(_impl_.dropofftask_)*/ nullptr,
      /*decltype(_impl_.vehiclerelations_)*/ nullptr,
      /*decltype(_impl_.compartmentrelations_)*/ nullptr,
      /*decltype(_impl_.penalty_)*/ 0,
    } {}
struct JobDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JobDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~JobDefaultTypeInternal() {}
  union {
    Job _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JobDefaultTypeInternal _Job_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TransitSet_TransitValue::TransitSet_TransitValue(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.fromid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.toid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.value_)*/ 0,
    } {}
struct TransitSet_TransitValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransitSet_TransitValueDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransitSet_TransitValueDefaultTypeInternal() {}
  union {
    TransitSet_TransitValue _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransitSet_TransitValueDefaultTypeInternal _TransitSet_TransitValue_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TransitSet::TransitSet(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.transits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct TransitSetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransitSetDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransitSetDefaultTypeInternal() {}
  union {
    TransitSet _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransitSetDefaultTypeInternal _TransitSet_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TransitGenerator::TransitGenerator(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.requestid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.transitset_)*/ nullptr,
    } {}
struct TransitGeneratorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransitGeneratorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransitGeneratorDefaultTypeInternal() {}
  union {
    TransitGenerator _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransitGeneratorDefaultTypeInternal _TransitGenerator_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR VehicleClass_Attribute::VehicleClass_Attribute(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.dimensionid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.transitgeneratorid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.transitcoef_)*/ 0,
      /*decltype(_impl_.taskcoef_)*/ 0,
      /*decltype(_impl_.locationcoef_)*/ 0,
    } {}
struct VehicleClass_AttributeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VehicleClass_AttributeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VehicleClass_AttributeDefaultTypeInternal() {}
  union {
    VehicleClass_Attribute _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VehicleClass_AttributeDefaultTypeInternal _VehicleClass_Attribute_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR VehicleClass::VehicleClass(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.attributes_)*/ {},
      /*decltype(_impl_.transitruleids_)*/ {},
      /*decltype(_impl_.id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.compartmentsetid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct VehicleClassDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VehicleClassDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VehicleClassDefaultTypeInternal() {}
  union {
    VehicleClass _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VehicleClassDefaultTypeInternal _VehicleClass_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR VehicleCostClass_Attribute::VehicleCostClass_Attribute(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.dimensionid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.transitcostcoef_)*/ 0,
      /*decltype(_impl_.taskcostcoef_)*/ 0,
      /*decltype(_impl_.locationcostcoef_)*/ 0,
      /*decltype(_impl_.slackcostcoef_)*/ 0,
      /*decltype(_impl_.tardycostcoef_)*/ 0,
    } {}
struct VehicleCostClass_AttributeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VehicleCostClass_AttributeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VehicleCostClass_AttributeDefaultTypeInternal() {}
  union {
    VehicleCostClass_Attribute _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VehicleCostClass_AttributeDefaultTypeInternal _VehicleCostClass_Attribute_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR VehicleCostClass::VehicleCostClass(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.attributes_)*/ {},
      /*decltype(_impl_.id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.fixedcost_)*/ 0,
    } {}
struct VehicleCostClassDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VehicleCostClassDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VehicleCostClassDefaultTypeInternal() {}
  union {
    VehicleCostClass _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VehicleCostClassDefaultTypeInternal _VehicleCostClass_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Vehicle_Task_Attribute::Vehicle_Task_Attribute(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.windows_)*/ {},
      /*decltype(_impl_.dimensionid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.quantity_)*/ 0,
    } {}
struct Vehicle_Task_AttributeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Vehicle_Task_AttributeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Vehicle_Task_AttributeDefaultTypeInternal() {}
  union {
    Vehicle_Task_Attribute _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Vehicle_Task_AttributeDefaultTypeInternal _Vehicle_Task_Attribute_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Vehicle_Task::Vehicle_Task(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.attributes_)*/ {},
      /*decltype(_impl_.locationid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct Vehicle_TaskDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Vehicle_TaskDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Vehicle_TaskDefaultTypeInternal() {}
  union {
    Vehicle_Task _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Vehicle_TaskDefaultTypeInternal _Vehicle_Task_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Vehicle_Shift::Vehicle_Shift(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.shiftstart_)*/ nullptr,
      /*decltype(_impl_.shiftend_)*/ nullptr,
    } {}
struct Vehicle_ShiftDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Vehicle_ShiftDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Vehicle_ShiftDefaultTypeInternal() {}
  union {
    Vehicle_Shift _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Vehicle_ShiftDefaultTypeInternal _Vehicle_Shift_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Vehicle_Capacity::Vehicle_Capacity(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.dimensionid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.capacity_)*/ 0,
    } {}
struct Vehicle_CapacityDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Vehicle_CapacityDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Vehicle_CapacityDefaultTypeInternal() {}
  union {
    Vehicle_Capacity _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Vehicle_CapacityDefaultTypeInternal _Vehicle_Capacity_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Vehicle::Vehicle(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.capacities_)*/ {},
      /*decltype(_impl_.transitruleids_)*/ {},
      /*decltype(_impl_.id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.classid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.costclassid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.compartmentsetid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.shift_)*/ nullptr,
    } {}
struct VehicleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VehicleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VehicleDefaultTypeInternal() {}
  union {
    Vehicle _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VehicleDefaultTypeInternal _Vehicle_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TaskSequence::TaskSequence(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.taskid_)*/ {},
      /*decltype(_impl_.compartmentid_)*/ {},
      /*decltype(_impl_.vehicleid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct TaskSequenceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TaskSequenceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TaskSequenceDefaultTypeInternal() {}
  union {
    TaskSequence _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TaskSequenceDefaultTypeInternal _TaskSequence_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TransitRule_Trigger::TransitRule_Trigger(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.value_)*/ 0,
      /*decltype(_impl_.quantity_)*/ 0,
    } {}
struct TransitRule_TriggerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransitRule_TriggerDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransitRule_TriggerDefaultTypeInternal() {}
  union {
    TransitRule_Trigger _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransitRule_TriggerDefaultTypeInternal _TransitRule_Trigger_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TransitRule::TransitRule(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.triggers_)*/ {},
      /*decltype(_impl_.id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.dimensionid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.ruleidprefix_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.usetransitstate_)*/ false,
      /*decltype(_impl_.usestandingstate_)*/ true,
    } {}
struct TransitRuleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransitRuleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransitRuleDefaultTypeInternal() {}
  union {
    TransitRule _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransitRuleDefaultTypeInternal _TransitRule_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Compartment_Capacity::Compartment_Capacity(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.dimensionid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.capacity_)*/ 0,
    } {}
struct Compartment_CapacityDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Compartment_CapacityDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Compartment_CapacityDefaultTypeInternal() {}
  union {
    Compartment_Capacity _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Compartment_CapacityDefaultTypeInternal _Compartment_Capacity_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Compartment::Compartment(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.capacities_)*/ {},
      /*decltype(_impl_.id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct CompartmentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CompartmentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CompartmentDefaultTypeInternal() {}
  union {
    Compartment _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CompartmentDefaultTypeInternal _Compartment_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CompartmentSet_GroupLimit::CompartmentSet_GroupLimit(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.compartmentids_)*/ {},
      /*decltype(_impl_.coefficients_)*/ {},
      /*decltype(_impl_.dimensionid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.limit_)*/ 0,
      /*decltype(_impl_.checkstandingstate_)*/ false,
    } {}
struct CompartmentSet_GroupLimitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CompartmentSet_GroupLimitDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CompartmentSet_GroupLimitDefaultTypeInternal() {}
  union {
    CompartmentSet_GroupLimit _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CompartmentSet_GroupLimitDefaultTypeInternal _CompartmentSet_GroupLimit_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CompartmentSet::CompartmentSet(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.compartmentids_)*/ {},
      /*decltype(_impl_.grouplimits_)*/ {},
      /*decltype(_impl_.id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct CompartmentSetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CompartmentSetDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CompartmentSetDefaultTypeInternal() {}
  union {
    CompartmentSet _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CompartmentSetDefaultTypeInternal _CompartmentSet_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Model::Model(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.locations_)*/ {},
      /*decltype(_impl_.jobs_)*/ {},
      /*decltype(_impl_.vehicles_)*/ {},
      /*decltype(_impl_.vehicleclasses_)*/ {},
      /*decltype(_impl_.vehiclecostclasses_)*/ {},
      /*decltype(_impl_.transitrules_)*/ {},
      /*decltype(_impl_.transitgenerators_)*/ {},
      /*decltype(_impl_.tasksequence_)*/ {},
      /*decltype(_impl_.compartments_)*/ {},
      /*decltype(_impl_.compartmentsets_)*/ {},
      /*decltype(_impl_.dimensions_)*/ nullptr,
    } {}
struct ModelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelDefaultTypeInternal() {}
  union {
    Model _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelDefaultTypeInternal _Model_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SolveRequest::SolveRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.routes_)*/ {},
      /*decltype(_impl_.modelid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.model_)*/ nullptr,
      /*decltype(_impl_.solvetype_)*/ 0,
    } {}
struct SolveRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SolveRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SolveRequestDefaultTypeInternal() {}
  union {
    SolveRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SolveRequestDefaultTypeInternal _SolveRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SolutionResponse_StopAttribute::SolutionResponse_StopAttribute(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.dimid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.startvalue_)*/ 0,
      /*decltype(_impl_.endvalue_)*/ 0,
      /*decltype(_impl_.cost_)*/ 0,
      /*decltype(_impl_.slackvalue_)*/ 0,
      /*decltype(_impl_.slackcost_)*/ 0,
      /*decltype(_impl_.tardyvalue_)*/ 0,
      /*decltype(_impl_.tardycost_)*/ 0,
    } {}
struct SolutionResponse_StopAttributeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SolutionResponse_StopAttributeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SolutionResponse_StopAttributeDefaultTypeInternal() {}
  union {
    SolutionResponse_StopAttribute _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SolutionResponse_StopAttributeDefaultTypeInternal _SolutionResponse_StopAttribute_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SolutionResponse_InterStopAttribute::SolutionResponse_InterStopAttribute(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.dimid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.startvalue_)*/ 0,
      /*decltype(_impl_.endvalue_)*/ 0,
      /*decltype(_impl_.cost_)*/ 0,
    } {}
struct SolutionResponse_InterStopAttributeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SolutionResponse_InterStopAttributeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SolutionResponse_InterStopAttributeDefaultTypeInternal() {}
  union {
    SolutionResponse_InterStopAttribute _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SolutionResponse_InterStopAttributeDefaultTypeInternal _SolutionResponse_InterStopAttribute_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SolutionResponse_Stop::SolutionResponse_Stop(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.attributes_)*/ {},
      /*decltype(_impl_.locationid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.taskid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.jobid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.compartmentid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.id_)*/ 0,
      /*decltype(_impl_.sequence_)*/ 0,
    } {}
struct SolutionResponse_StopDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SolutionResponse_StopDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SolutionResponse_StopDefaultTypeInternal() {}
  union {
    SolutionResponse_Stop _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SolutionResponse_StopDefaultTypeInternal _SolutionResponse_Stop_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SolutionResponse_InterStop::SolutionResponse_InterStop(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.attributes_)*/ {},
      /*decltype(_impl_.routesegments_)*/ {},
      /*decltype(_impl_.fromstopid_)*/ 0,
      /*decltype(_impl_.tostopid_)*/ 0,
    } {}
struct SolutionResponse_InterStopDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SolutionResponse_InterStopDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SolutionResponse_InterStopDefaultTypeInternal() {}
  union {
    SolutionResponse_InterStop _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SolutionResponse_InterStopDefaultTypeInternal _SolutionResponse_InterStop_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SolutionResponse_TransitRuleAttribute::SolutionResponse_TransitRuleAttribute(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.ruleid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.dimid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.fromstopid_)*/ 0,
      /*decltype(_impl_.tostopid_)*/ 0,
      /*decltype(_impl_.startvalue_)*/ 0,
      /*decltype(_impl_.endvalue_)*/ 0,
      /*decltype(_impl_.cost_)*/ 0,
    } {}
struct SolutionResponse_TransitRuleAttributeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SolutionResponse_TransitRuleAttributeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SolutionResponse_TransitRuleAttributeDefaultTypeInternal() {}
  union {
    SolutionResponse_TransitRuleAttribute _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SolutionResponse_TransitRuleAttributeDefaultTypeInternal _SolutionResponse_TransitRuleAttribute_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SolutionResponse_Route::SolutionResponse_Route(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.stops_)*/ {},
      /*decltype(_impl_.interstops_)*/ {},
      /*decltype(_impl_.fixedcost_)*/ {},
      /*decltype(_impl_.transitruleattributes_)*/ {},
      /*decltype(_impl_.vehicleid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct SolutionResponse_RouteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SolutionResponse_RouteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SolutionResponse_RouteDefaultTypeInternal() {}
  union {
    SolutionResponse_Route _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SolutionResponse_RouteDefaultTypeInternal _SolutionResponse_Route_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SolutionResponse_Infeasibility_Info::SolutionResponse_Infeasibility_Info(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.constrainingtaskids_)*/ {},
      /*decltype(_impl_.message_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.dimid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.limit_)*/ 0,
      /*decltype(_impl_.value_)*/ 0,
      /*decltype(_impl_.count_)*/ ::int64_t{0},
    } {}
struct SolutionResponse_Infeasibility_InfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SolutionResponse_Infeasibility_InfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SolutionResponse_Infeasibility_InfoDefaultTypeInternal() {}
  union {
    SolutionResponse_Infeasibility_Info _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SolutionResponse_Infeasibility_InfoDefaultTypeInternal _SolutionResponse_Infeasibility_Info_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SolutionResponse_Infeasibility::SolutionResponse_Infeasibility(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.infeasibilityinfo_)*/ {},
      /*decltype(_impl_.taskid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct SolutionResponse_InfeasibilityDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SolutionResponse_InfeasibilityDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SolutionResponse_InfeasibilityDefaultTypeInternal() {}
  union {
    SolutionResponse_Infeasibility _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SolutionResponse_InfeasibilityDefaultTypeInternal _SolutionResponse_Infeasibility_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SolutionResponse::SolutionResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.routes_)*/ {},
      /*decltype(_impl_.infeasibilities_)*/ {},
      /*decltype(_impl_.objective_)*/ 0,
    } {}
struct SolutionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SolutionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SolutionResponseDefaultTypeInternal() {}
  union {
    SolutionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SolutionResponseDefaultTypeInternal _SolutionResponse_default_instance_;
}  // namespace IVR8
static ::_pb::Metadata file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[43];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_ivr8_2dyni1c9k2swof_2eproto[6];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_ivr8_2dyni1c9k2swof_2eproto = nullptr;
const ::uint32_t TableStruct_ivr8_2dyni1c9k2swof_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::IVR8::InternalDimension, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::IVR8::InternalDimension, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IVR8::InternalDimension, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::IVR8::InternalDimension, _impl_.measurementunit_),
    PROTOBUF_FIELD_OFFSET(::IVR8::InternalDimension, _impl_.slackmax_),
    PROTOBUF_FIELD_OFFSET(::IVR8::InternalDimension, _impl_.tardymax_),
    0,
    1,
    2,
    3,
    PROTOBUF_FIELD_OFFSET(::IVR8::CapacityDimension, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::IVR8::CapacityDimension, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IVR8::CapacityDimension, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::IVR8::CapacityDimension, _impl_.units_),
    PROTOBUF_FIELD_OFFSET(::IVR8::CapacityDimension, _impl_.slackmax_),
    PROTOBUF_FIELD_OFFSET(::IVR8::CapacityDimension, _impl_.tardymax_),
    0,
    1,
    2,
    3,
    PROTOBUF_FIELD_OFFSET(::IVR8::DimensionConfiguration, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::IVR8::DimensionConfiguration, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IVR8::DimensionConfiguration, _impl_.timeconfig_),
    PROTOBUF_FIELD_OFFSET(::IVR8::DimensionConfiguration, _impl_.distanceconfig_),
    PROTOBUF_FIELD_OFFSET(::IVR8::DimensionConfiguration, _impl_.capacitydimensions_),
    0,
    1,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::IVR8::Geocode, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Geocode, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IVR8::Geocode, _impl_.longitude_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Geocode, _impl_.latitude_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::IVR8::Window, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Window, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IVR8::Window, _impl_.start_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Window, _impl_.end_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Window, _impl_.slackcostcoef_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Window, _impl_.tardycostcoef_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Window, _impl_.slackmax_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Window, _impl_.tardymax_),
    0,
    1,
    2,
    3,
    4,
    5,
    PROTOBUF_FIELD_OFFSET(::IVR8::Location_Attribute, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Location_Attribute, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IVR8::Location_Attribute, _impl_.dimensionid_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Location_Attribute, _impl_.vehicleid_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Location_Attribute, _impl_.quantity_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Location_Attribute, _impl_.arrivalwindows_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Location_Attribute, _impl_.departurewindows_),
    0,
    1,
    2,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::IVR8::Location, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Location, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IVR8::Location, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Location, _impl_.geocode_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Location, _impl_.attributes_),
    0,
    1,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::IVR8::Job_VehicleRelation, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Job_VehicleRelation, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IVR8::Job_VehicleRelation, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Job_VehicleRelation, _impl_.vehicleids_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::IVR8::Job_CompartmentRelation, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Job_CompartmentRelation, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IVR8::Job_CompartmentRelation, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Job_CompartmentRelation, _impl_.compartmentids_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::IVR8::Job_Task_Attribute, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Job_Task_Attribute, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IVR8::Job_Task_Attribute, _impl_.dimensionid_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Job_Task_Attribute, _impl_.quantity_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Job_Task_Attribute, _impl_.windows_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Job_Task_Attribute, _impl_.vehicleids_),
    0,
    1,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::IVR8::Job_Task_TaskRelation, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Job_Task_TaskRelation, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IVR8::Job_Task_TaskRelation, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Job_Task_TaskRelation, _impl_.taskids_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::IVR8::Job_Task, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Job_Task, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IVR8::Job_Task, _impl_.taskid_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Job_Task, _impl_.locationid_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Job_Task, _impl_.attributes_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Job_Task, _impl_.tripconstraints_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Job_Task, _impl_.predecessors_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Job_Task, _impl_.successors_),
    0,
    1,
    ~0u,
    ~0u,
    2,
    3,
    PROTOBUF_FIELD_OFFSET(::IVR8::Job, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Job, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IVR8::Job, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Job, _impl_.pickuptask_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Job, _impl_.dropofftask_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Job, _impl_.penalty_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Job, _impl_.vehiclerelations_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Job, _impl_.compartmentrelations_),
    0,
    1,
    2,
    5,
    3,
    4,
    PROTOBUF_FIELD_OFFSET(::IVR8::TransitSet_TransitValue, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::IVR8::TransitSet_TransitValue, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IVR8::TransitSet_TransitValue, _impl_.fromid_),
    PROTOBUF_FIELD_OFFSET(::IVR8::TransitSet_TransitValue, _impl_.toid_),
    PROTOBUF_FIELD_OFFSET(::IVR8::TransitSet_TransitValue, _impl_.value_),
    0,
    1,
    2,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::IVR8::TransitSet, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IVR8::TransitSet, _impl_.transits_),
    PROTOBUF_FIELD_OFFSET(::IVR8::TransitGenerator, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::IVR8::TransitGenerator, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IVR8::TransitGenerator, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::IVR8::TransitGenerator, _impl_.requestid_),
    PROTOBUF_FIELD_OFFSET(::IVR8::TransitGenerator, _impl_.transitset_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::IVR8::VehicleClass_Attribute, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::IVR8::VehicleClass_Attribute, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IVR8::VehicleClass_Attribute, _impl_.dimensionid_),
    PROTOBUF_FIELD_OFFSET(::IVR8::VehicleClass_Attribute, _impl_.transitgeneratorid_),
    PROTOBUF_FIELD_OFFSET(::IVR8::VehicleClass_Attribute, _impl_.transitcoef_),
    PROTOBUF_FIELD_OFFSET(::IVR8::VehicleClass_Attribute, _impl_.taskcoef_),
    PROTOBUF_FIELD_OFFSET(::IVR8::VehicleClass_Attribute, _impl_.locationcoef_),
    0,
    1,
    2,
    3,
    4,
    PROTOBUF_FIELD_OFFSET(::IVR8::VehicleClass, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::IVR8::VehicleClass, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IVR8::VehicleClass, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::IVR8::VehicleClass, _impl_.attributes_),
    PROTOBUF_FIELD_OFFSET(::IVR8::VehicleClass, _impl_.transitruleids_),
    PROTOBUF_FIELD_OFFSET(::IVR8::VehicleClass, _impl_.compartmentsetid_),
    0,
    ~0u,
    ~0u,
    1,
    PROTOBUF_FIELD_OFFSET(::IVR8::VehicleCostClass_Attribute, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::IVR8::VehicleCostClass_Attribute, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IVR8::VehicleCostClass_Attribute, _impl_.dimensionid_),
    PROTOBUF_FIELD_OFFSET(::IVR8::VehicleCostClass_Attribute, _impl_.transitcostcoef_),
    PROTOBUF_FIELD_OFFSET(::IVR8::VehicleCostClass_Attribute, _impl_.taskcostcoef_),
    PROTOBUF_FIELD_OFFSET(::IVR8::VehicleCostClass_Attribute, _impl_.locationcostcoef_),
    PROTOBUF_FIELD_OFFSET(::IVR8::VehicleCostClass_Attribute, _impl_.slackcostcoef_),
    PROTOBUF_FIELD_OFFSET(::IVR8::VehicleCostClass_Attribute, _impl_.tardycostcoef_),
    0,
    1,
    2,
    3,
    4,
    5,
    PROTOBUF_FIELD_OFFSET(::IVR8::VehicleCostClass, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::IVR8::VehicleCostClass, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IVR8::VehicleCostClass, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::IVR8::VehicleCostClass, _impl_.fixedcost_),
    PROTOBUF_FIELD_OFFSET(::IVR8::VehicleCostClass, _impl_.attributes_),
    0,
    1,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::IVR8::Vehicle_Task_Attribute, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Vehicle_Task_Attribute, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IVR8::Vehicle_Task_Attribute, _impl_.dimensionid_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Vehicle_Task_Attribute, _impl_.quantity_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Vehicle_Task_Attribute, _impl_.windows_),
    0,
    1,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::IVR8::Vehicle_Task, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Vehicle_Task, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IVR8::Vehicle_Task, _impl_.locationid_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Vehicle_Task, _impl_.attributes_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::IVR8::Vehicle_Shift, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Vehicle_Shift, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IVR8::Vehicle_Shift, _impl_.shiftstart_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Vehicle_Shift, _impl_.shiftend_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::IVR8::Vehicle_Capacity, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Vehicle_Capacity, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IVR8::Vehicle_Capacity, _impl_.dimensionid_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Vehicle_Capacity, _impl_.capacity_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::IVR8::Vehicle, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Vehicle, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IVR8::Vehicle, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Vehicle, _impl_.classid_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Vehicle, _impl_.costclassid_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Vehicle, _impl_.shift_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Vehicle, _impl_.capacities_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Vehicle, _impl_.transitruleids_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Vehicle, _impl_.compartmentsetid_),
    0,
    1,
    2,
    4,
    ~0u,
    ~0u,
    3,
    PROTOBUF_FIELD_OFFSET(::IVR8::TaskSequence, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::IVR8::TaskSequence, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IVR8::TaskSequence, _impl_.vehicleid_),
    PROTOBUF_FIELD_OFFSET(::IVR8::TaskSequence, _impl_.taskid_),
    PROTOBUF_FIELD_OFFSET(::IVR8::TaskSequence, _impl_.compartmentid_),
    0,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::IVR8::TransitRule_Trigger, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::IVR8::TransitRule_Trigger, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IVR8::TransitRule_Trigger, _impl_.value_),
    PROTOBUF_FIELD_OFFSET(::IVR8::TransitRule_Trigger, _impl_.quantity_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::IVR8::TransitRule, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::IVR8::TransitRule, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IVR8::TransitRule, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::IVR8::TransitRule, _impl_.dimensionid_),
    PROTOBUF_FIELD_OFFSET(::IVR8::TransitRule, _impl_.usestandingstate_),
    PROTOBUF_FIELD_OFFSET(::IVR8::TransitRule, _impl_.usetransitstate_),
    PROTOBUF_FIELD_OFFSET(::IVR8::TransitRule, _impl_.ruleidprefix_),
    PROTOBUF_FIELD_OFFSET(::IVR8::TransitRule, _impl_.triggers_),
    0,
    1,
    4,
    3,
    2,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::IVR8::Compartment_Capacity, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Compartment_Capacity, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IVR8::Compartment_Capacity, _impl_.dimensionid_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Compartment_Capacity, _impl_.capacity_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::IVR8::Compartment, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Compartment, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IVR8::Compartment, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Compartment, _impl_.capacities_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::IVR8::CompartmentSet_GroupLimit, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::IVR8::CompartmentSet_GroupLimit, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IVR8::CompartmentSet_GroupLimit, _impl_.compartmentids_),
    PROTOBUF_FIELD_OFFSET(::IVR8::CompartmentSet_GroupLimit, _impl_.coefficients_),
    PROTOBUF_FIELD_OFFSET(::IVR8::CompartmentSet_GroupLimit, _impl_.dimensionid_),
    PROTOBUF_FIELD_OFFSET(::IVR8::CompartmentSet_GroupLimit, _impl_.limit_),
    PROTOBUF_FIELD_OFFSET(::IVR8::CompartmentSet_GroupLimit, _impl_.checkstandingstate_),
    ~0u,
    ~0u,
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::IVR8::CompartmentSet, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::IVR8::CompartmentSet, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IVR8::CompartmentSet, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::IVR8::CompartmentSet, _impl_.compartmentids_),
    PROTOBUF_FIELD_OFFSET(::IVR8::CompartmentSet, _impl_.grouplimits_),
    0,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::IVR8::Model, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Model, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IVR8::Model, _impl_.dimensions_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Model, _impl_.locations_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Model, _impl_.jobs_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Model, _impl_.vehicles_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Model, _impl_.vehicleclasses_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Model, _impl_.vehiclecostclasses_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Model, _impl_.transitrules_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Model, _impl_.transitgenerators_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Model, _impl_.tasksequence_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Model, _impl_.compartments_),
    PROTOBUF_FIELD_OFFSET(::IVR8::Model, _impl_.compartmentsets_),
    0,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::IVR8::SolveRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolveRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IVR8::SolveRequest, _impl_.model_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolveRequest, _impl_.modelid_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolveRequest, _impl_.routes_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolveRequest, _impl_.solvetype_),
    1,
    0,
    ~0u,
    2,
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_StopAttribute, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_StopAttribute, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_StopAttribute, _impl_.dimid_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_StopAttribute, _impl_.startvalue_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_StopAttribute, _impl_.endvalue_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_StopAttribute, _impl_.cost_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_StopAttribute, _impl_.slackvalue_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_StopAttribute, _impl_.slackcost_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_StopAttribute, _impl_.tardyvalue_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_StopAttribute, _impl_.tardycost_),
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_InterStopAttribute, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_InterStopAttribute, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_InterStopAttribute, _impl_.dimid_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_InterStopAttribute, _impl_.startvalue_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_InterStopAttribute, _impl_.endvalue_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_InterStopAttribute, _impl_.cost_),
    0,
    1,
    2,
    3,
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_Stop, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_Stop, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_Stop, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_Stop, _impl_.sequence_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_Stop, _impl_.locationid_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_Stop, _impl_.taskid_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_Stop, _impl_.jobid_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_Stop, _impl_.attributes_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_Stop, _impl_.compartmentid_),
    4,
    5,
    0,
    1,
    2,
    ~0u,
    3,
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_InterStop, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_InterStop, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_InterStop, _impl_.fromstopid_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_InterStop, _impl_.tostopid_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_InterStop, _impl_.attributes_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_InterStop, _impl_.routesegments_),
    0,
    1,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_TransitRuleAttribute, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_TransitRuleAttribute, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_TransitRuleAttribute, _impl_.ruleid_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_TransitRuleAttribute, _impl_.dimid_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_TransitRuleAttribute, _impl_.fromstopid_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_TransitRuleAttribute, _impl_.tostopid_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_TransitRuleAttribute, _impl_.startvalue_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_TransitRuleAttribute, _impl_.endvalue_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_TransitRuleAttribute, _impl_.cost_),
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_Route, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_Route, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_Route, _impl_.vehicleid_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_Route, _impl_.stops_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_Route, _impl_.interstops_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_Route, _impl_.fixedcost_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_Route, _impl_.transitruleattributes_),
    0,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_Infeasibility_Info, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_Infeasibility_Info, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_Infeasibility_Info, _impl_.message_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_Infeasibility_Info, _impl_.dimid_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_Infeasibility_Info, _impl_.limit_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_Infeasibility_Info, _impl_.value_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_Infeasibility_Info, _impl_.count_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_Infeasibility_Info, _impl_.constrainingtaskids_),
    0,
    1,
    2,
    3,
    4,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_Infeasibility, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_Infeasibility, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_Infeasibility, _impl_.taskid_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse_Infeasibility, _impl_.infeasibilityinfo_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse, _impl_.objective_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse, _impl_.routes_),
    PROTOBUF_FIELD_OFFSET(::IVR8::SolutionResponse, _impl_.infeasibilities_),
    0,
    ~0u,
    ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 12, -1, sizeof(::IVR8::InternalDimension)},
        {16, 28, -1, sizeof(::IVR8::CapacityDimension)},
        {32, 43, -1, sizeof(::IVR8::DimensionConfiguration)},
        {46, 56, -1, sizeof(::IVR8::Geocode)},
        {58, 72, -1, sizeof(::IVR8::Window)},
        {78, 91, -1, sizeof(::IVR8::Location_Attribute)},
        {96, 107, -1, sizeof(::IVR8::Location)},
        {110, 120, -1, sizeof(::IVR8::Job_VehicleRelation)},
        {122, 132, -1, sizeof(::IVR8::Job_CompartmentRelation)},
        {134, 146, -1, sizeof(::IVR8::Job_Task_Attribute)},
        {150, 160, -1, sizeof(::IVR8::Job_Task_TaskRelation)},
        {162, 176, -1, sizeof(::IVR8::Job_Task)},
        {182, 196, -1, sizeof(::IVR8::Job)},
        {202, 213, -1, sizeof(::IVR8::TransitSet_TransitValue)},
        {216, -1, -1, sizeof(::IVR8::TransitSet)},
        {225, 236, -1, sizeof(::IVR8::TransitGenerator)},
        {239, 252, -1, sizeof(::IVR8::VehicleClass_Attribute)},
        {257, 269, -1, sizeof(::IVR8::VehicleClass)},
        {273, 287, -1, sizeof(::IVR8::VehicleCostClass_Attribute)},
        {293, 304, -1, sizeof(::IVR8::VehicleCostClass)},
        {307, 318, -1, sizeof(::IVR8::Vehicle_Task_Attribute)},
        {321, 331, -1, sizeof(::IVR8::Vehicle_Task)},
        {333, 343, -1, sizeof(::IVR8::Vehicle_Shift)},
        {345, 355, -1, sizeof(::IVR8::Vehicle_Capacity)},
        {357, 372, -1, sizeof(::IVR8::Vehicle)},
        {379, 390, -1, sizeof(::IVR8::TaskSequence)},
        {393, 403, -1, sizeof(::IVR8::TransitRule_Trigger)},
        {405, 419, -1, sizeof(::IVR8::TransitRule)},
        {425, 435, -1, sizeof(::IVR8::Compartment_Capacity)},
        {437, 447, -1, sizeof(::IVR8::Compartment)},
        {449, 462, -1, sizeof(::IVR8::CompartmentSet_GroupLimit)},
        {467, 478, -1, sizeof(::IVR8::CompartmentSet)},
        {481, 500, -1, sizeof(::IVR8::Model)},
        {511, 523, -1, sizeof(::IVR8::SolveRequest)},
        {527, 543, -1, sizeof(::IVR8::SolutionResponse_StopAttribute)},
        {551, 563, -1, sizeof(::IVR8::SolutionResponse_InterStopAttribute)},
        {567, 582, -1, sizeof(::IVR8::SolutionResponse_Stop)},
        {589, 601, -1, sizeof(::IVR8::SolutionResponse_InterStop)},
        {605, 620, -1, sizeof(::IVR8::SolutionResponse_TransitRuleAttribute)},
        {627, 640, -1, sizeof(::IVR8::SolutionResponse_Route)},
        {645, 659, -1, sizeof(::IVR8::SolutionResponse_Infeasibility_Info)},
        {665, 675, -1, sizeof(::IVR8::SolutionResponse_Infeasibility)},
        {677, 688, -1, sizeof(::IVR8::SolutionResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::IVR8::_InternalDimension_default_instance_._instance,
    &::IVR8::_CapacityDimension_default_instance_._instance,
    &::IVR8::_DimensionConfiguration_default_instance_._instance,
    &::IVR8::_Geocode_default_instance_._instance,
    &::IVR8::_Window_default_instance_._instance,
    &::IVR8::_Location_Attribute_default_instance_._instance,
    &::IVR8::_Location_default_instance_._instance,
    &::IVR8::_Job_VehicleRelation_default_instance_._instance,
    &::IVR8::_Job_CompartmentRelation_default_instance_._instance,
    &::IVR8::_Job_Task_Attribute_default_instance_._instance,
    &::IVR8::_Job_Task_TaskRelation_default_instance_._instance,
    &::IVR8::_Job_Task_default_instance_._instance,
    &::IVR8::_Job_default_instance_._instance,
    &::IVR8::_TransitSet_TransitValue_default_instance_._instance,
    &::IVR8::_TransitSet_default_instance_._instance,
    &::IVR8::_TransitGenerator_default_instance_._instance,
    &::IVR8::_VehicleClass_Attribute_default_instance_._instance,
    &::IVR8::_VehicleClass_default_instance_._instance,
    &::IVR8::_VehicleCostClass_Attribute_default_instance_._instance,
    &::IVR8::_VehicleCostClass_default_instance_._instance,
    &::IVR8::_Vehicle_Task_Attribute_default_instance_._instance,
    &::IVR8::_Vehicle_Task_default_instance_._instance,
    &::IVR8::_Vehicle_Shift_default_instance_._instance,
    &::IVR8::_Vehicle_Capacity_default_instance_._instance,
    &::IVR8::_Vehicle_default_instance_._instance,
    &::IVR8::_TaskSequence_default_instance_._instance,
    &::IVR8::_TransitRule_Trigger_default_instance_._instance,
    &::IVR8::_TransitRule_default_instance_._instance,
    &::IVR8::_Compartment_Capacity_default_instance_._instance,
    &::IVR8::_Compartment_default_instance_._instance,
    &::IVR8::_CompartmentSet_GroupLimit_default_instance_._instance,
    &::IVR8::_CompartmentSet_default_instance_._instance,
    &::IVR8::_Model_default_instance_._instance,
    &::IVR8::_SolveRequest_default_instance_._instance,
    &::IVR8::_SolutionResponse_StopAttribute_default_instance_._instance,
    &::IVR8::_SolutionResponse_InterStopAttribute_default_instance_._instance,
    &::IVR8::_SolutionResponse_Stop_default_instance_._instance,
    &::IVR8::_SolutionResponse_InterStop_default_instance_._instance,
    &::IVR8::_SolutionResponse_TransitRuleAttribute_default_instance_._instance,
    &::IVR8::_SolutionResponse_Route_default_instance_._instance,
    &::IVR8::_SolutionResponse_Infeasibility_Info_default_instance_._instance,
    &::IVR8::_SolutionResponse_Infeasibility_default_instance_._instance,
    &::IVR8::_SolutionResponse_default_instance_._instance,
};
const char descriptor_table_protodef_ivr8_2dyni1c9k2swof_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\027ivr8-yni1c9k2swof.proto\022\004IVR8\"\352\001\n\021Inte"
    "rnalDimension\022\n\n\002id\030\001 \002(\t\022A\n\017measurement"
    "Unit\030\002 \002(\0162(.IVR8.InternalDimension.eMea"
    "surementUnit\022\023\n\010slackMax\030\003 \001(\002:\0010\022\023\n\010tar"
    "dyMax\030\004 \001(\002:\0010\"\\\n\020eMeasurementUnit\022\013\n\007SE"
    "CONDS\020\000\022\013\n\007MINUTES\020\001\022\t\n\005HOURS\020\002\022\010\n\004DAYS\020"
    "\003\022\016\n\nKILOMETRES\020\004\022\t\n\005MILES\020\005\"X\n\021Capacity"
    "Dimension\022\n\n\002id\030\001 \002(\t\022\r\n\005units\030\002 \002(\t\022\023\n\010"
    "slackMax\030\003 \001(\002:\0010\022\023\n\010tardyMax\030\004 \001(\002:\0010\"\253"
    "\001\n\026DimensionConfiguration\022+\n\ntimeConfig\030"
    "\001 \001(\0132\027.IVR8.InternalDimension\022/\n\016distan"
    "ceConfig\030\002 \001(\0132\027.IVR8.InternalDimension\022"
    "3\n\022capacityDimensions\030\003 \003(\0132\027.IVR8.Capac"
    "ityDimension\".\n\007Geocode\022\021\n\tlongitude\030\001 \002"
    "(\002\022\020\n\010latitude\030\002 \002(\002\"\204\001\n\006Window\022\r\n\005start"
    "\030\001 \002(\002\022\013\n\003end\030\002 \002(\002\022\030\n\rslackCostCoef\030\003 \001"
    "(\002:\0010\022\030\n\rtardyCostCoef\030\004 \001(\002:\0010\022\024\n\010slack"
    "Max\030\005 \001(\002:\002-1\022\024\n\010tardyMax\030\006 \001(\002:\002-1\"\372\001\n\010"
    "Location\022\n\n\002id\030\001 \002(\t\022\036\n\007geocode\030\002 \001(\0132\r."
    "IVR8.Geocode\022,\n\nattributes\030\003 \003(\0132\030.IVR8."
    "Location.Attribute\032\223\001\n\tAttribute\022\023\n\013dime"
    "nsionId\030\001 \002(\t\022\021\n\tvehicleId\030\002 \001(\t\022\020\n\010quan"
    "tity\030\003 \001(\002\022$\n\016arrivalWindows\030\004 \003(\0132\014.IVR"
    "8.Window\022&\n\020departureWindows\030\005 \003(\0132\014.IVR"
    "8.Window\"\334\007\n\003Job\022\n\n\002id\030\001 \002(\t\022\"\n\npickupTa"
    "sk\030\002 \001(\0132\016.IVR8.Job.Task\022#\n\013dropoffTask\030"
    "\003 \001(\0132\016.IVR8.Job.Task\022\017\n\007penalty\030\004 \002(\002\0223"
    "\n\020vehicleRelations\030\005 \001(\0132\031.IVR8.Job.Vehi"
    "cleRelation\022;\n\024compartmentRelations\030\006 \001("
    "\0132\035.IVR8.Job.CompartmentRelation\032y\n\017Vehi"
    "cleRelation\022,\n\004type\030\001 \002(\0162\036.IVR8.Job.Veh"
    "icleRelation.Type\022\022\n\nvehicleIds\030\002 \003(\t\"$\n"
    "\004Type\022\r\n\tINCLUSIVE\020\000\022\r\n\tEXCLUSIVE\020\001\032\205\001\n\023"
    "CompartmentRelation\0220\n\004type\030\001 \002(\0162\".IVR8"
    ".Job.CompartmentRelation.Type\022\026\n\016compart"
    "mentIds\030\002 \003(\t\"$\n\004Type\022\r\n\tINCLUSIVE\020\000\022\r\n\t"
    "EXCLUSIVE\020\001\032\371\003\n\004Task\022\016\n\006taskId\030\001 \002(\t\022\022\n\n"
    "locationId\030\002 \002(\t\022,\n\nattributes\030\003 \003(\0132\030.I"
    "VR8.Job.Task.Attribute\0226\n\017tripConstraint"
    "s\030\004 \003(\0162\035.IVR8.Job.Task.TripConstraint\0221"
    "\n\014predecessors\030\005 \001(\0132\033.IVR8.Job.Task.Tas"
    "kRelation\022/\n\nsuccessors\030\006 \001(\0132\033.IVR8.Job"
    ".Task.TaskRelation\032e\n\tAttribute\022\023\n\013dimen"
    "sionId\030\001 \002(\t\022\020\n\010quantity\030\002 \001(\002\022\035\n\007window"
    "s\030\003 \003(\0132\014.IVR8.Window\022\022\n\nvehicleIds\030\004 \003("
    "\t\032u\n\014TaskRelation\022.\n\004type\030\001 \002(\0162 .IVR8.J"
    "ob.Task.TaskRelation.Type\022\017\n\007taskIds\030\002 \003"
    "(\t\"$\n\004Type\022\r\n\tINCLUSIVE\020\000\022\r\n\tEXCLUSIVE\020\001"
    "\"%\n\016TripConstraint\022\t\n\005FIRST\020\000\022\010\n\004LAST\020\001\""
    "z\n\nTransitSet\022/\n\010transits\030\001 \003(\0132\035.IVR8.T"
    "ransitSet.TransitValue\032;\n\014TransitValue\022\016"
    "\n\006fromId\030\001 \002(\t\022\014\n\004toId\030\002 \002(\t\022\r\n\005value\030\003 "
    "\002(\002\"W\n\020TransitGenerator\022\n\n\002id\030\001 \002(\t\022\021\n\tr"
    "equestId\030\002 \001(\t\022$\n\ntransitSet\030\003 \001(\0132\020.IVR"
    "8.TransitSet\"\371\001\n\014VehicleClass\022\n\n\002id\030\001 \002("
    "\t\0220\n\nattributes\030\002 \003(\0132\034.IVR8.VehicleClas"
    "s.Attribute\022\026\n\016transitRuleIds\030\003 \003(\t\022\030\n\020c"
    "ompartmentSetId\030\004 \001(\t\032y\n\tAttribute\022\023\n\013di"
    "mensionId\030\001 \002(\t\022\032\n\022transitGeneratorId\030\002 "
    "\001(\t\022\023\n\013transitCoef\030\003 \001(\002\022\020\n\010taskCoef\030\004 \001"
    "(\002\022\024\n\014locationCoef\030\005 \001(\002\"\201\002\n\020VehicleCost"
    "Class\022\n\n\002id\030\001 \002(\t\022\021\n\tfixedCost\030\002 \002(\002\0224\n\n"
    "attributes\030\003 \003(\0132 .IVR8.VehicleCostClass"
    ".Attribute\032\227\001\n\tAttribute\022\023\n\013dimensionId\030"
    "\001 \002(\t\022\027\n\017transitCostCoef\030\002 \001(\002\022\024\n\014taskCo"
    "stCoef\030\003 \001(\002\022\030\n\020locationCostCoef\030\004 \001(\002\022\025"
    "\n\rslackCostCoef\030\005 \001(\002\022\025\n\rtardyCostCoef\030\006"
    " \001(\002\"\351\003\n\007Vehicle\022\n\n\002id\030\001 \002(\t\022\017\n\007classId\030"
    "\002 \002(\t\022\023\n\013costClassId\030\003 \002(\t\022\"\n\005shift\030\004 \002("
    "\0132\023.IVR8.Vehicle.Shift\022*\n\ncapacities\030\005 \003"
    "(\0132\026.IVR8.Vehicle.Capacity\022\026\n\016transitRul"
    "eIds\030\006 \003(\t\022\030\n\020compartmentSetId\030\007 \001(\t\032\237\001\n"
    "\004Task\022\022\n\nlocationId\030\001 \002(\t\0220\n\nattributes\030"
    "\002 \003(\0132\034.IVR8.Vehicle.Task.Attribute\032Q\n\tA"
    "ttribute\022\023\n\013dimensionId\030\001 \002(\t\022\020\n\010quantit"
    "y\030\002 \001(\002\022\035\n\007windows\030\003 \003(\0132\014.IVR8.Window\032U"
    "\n\005Shift\022&\n\nshiftStart\030\001 \002(\0132\022.IVR8.Vehic"
    "le.Task\022$\n\010shiftEnd\030\002 \001(\0132\022.IVR8.Vehicle"
    ".Task\0321\n\010Capacity\022\023\n\013dimensionId\030\001 \002(\t\022\020"
    "\n\010capacity\030\002 \002(\002\"H\n\014TaskSequence\022\021\n\tvehi"
    "cleId\030\001 \002(\t\022\016\n\006taskId\030\002 \003(\t\022\025\n\rcompartme"
    "ntId\030\003 \003(\t\"\335\001\n\013TransitRule\022\n\n\002id\030\001 \002(\t\022\023"
    "\n\013dimensionId\030\002 \002(\t\022\036\n\020useStandingState\030"
    "\003 \001(\010:\004true\022\036\n\017useTransitState\030\004 \001(\010:\005fa"
    "lse\022\024\n\014ruleIdPrefix\030\005 \002(\t\022+\n\010triggers\030\006 "
    "\003(\0132\031.IVR8.TransitRule.Trigger\032*\n\007Trigge"
    "r\022\r\n\005value\030\001 \002(\002\022\020\n\010quantity\030\002 \002(\002\"|\n\013Co"
    "mpartment\022\n\n\002id\030\001 \002(\t\022.\n\ncapacities\030\002 \003("
    "\0132\032.IVR8.Compartment.Capacity\0321\n\010Capacit"
    "y\022\023\n\013dimensionId\030\001 \002(\t\022\020\n\010capacity\030\002 \002(\002"
    "\"\356\001\n\016CompartmentSet\022\n\n\002id\030\001 \002(\t\022\026\n\016compa"
    "rtmentIds\030\002 \003(\t\0224\n\013groupLimits\030\003 \003(\0132\037.I"
    "VR8.CompartmentSet.GroupLimit\032\201\001\n\nGroupL"
    "imit\022\026\n\016compartmentIds\030\001 \003(\t\022\024\n\014coeffici"
    "ents\030\002 \003(\002\022\023\n\013dimensionId\030\003 \002(\t\022\r\n\005limit"
    "\030\004 \002(\002\022!\n\022checkStandingState\030\005 \001(\010:\005fals"
    "e\"\324\003\n\005Model\0220\n\ndimensions\030\001 \002(\0132\034.IVR8.D"
    "imensionConfiguration\022!\n\tlocations\030\002 \003(\013"
    "2\016.IVR8.Location\022\027\n\004jobs\030\003 \003(\0132\t.IVR8.Jo"
    "b\022\037\n\010vehicles\030\004 \003(\0132\r.IVR8.Vehicle\022*\n\016ve"
    "hicleClasses\030\005 \003(\0132\022.IVR8.VehicleClass\0222"
    "\n\022vehicleCostClasses\030\006 \003(\0132\026.IVR8.Vehicl"
    "eCostClass\022\'\n\014transitRules\030\007 \003(\0132\021.IVR8."
    "TransitRule\0221\n\021transitGenerators\030\010 \003(\0132\026"
    ".IVR8.TransitGenerator\022(\n\014taskSequence\030\t"
    " \003(\0132\022.IVR8.TaskSequence\022\'\n\014compartments"
    "\030\n \003(\0132\021.IVR8.Compartment\022-\n\017compartment"
    "Sets\030\013 \003(\0132\024.IVR8.CompartmentSet\"\323\001\n\014Sol"
    "veRequest\022\032\n\005model\030\001 \001(\0132\013.IVR8.Model\022\017\n"
    "\007modelID\030\002 \001(\t\022\"\n\006routes\030\003 \003(\0132\022.IVR8.Ta"
    "skSequence\0229\n\tsolveType\030\004 \001(\0162\034.IVR8.Sol"
    "veRequest.SolveType:\010Optimise\"7\n\tSolveTy"
    "pe\022\014\n\010Optimise\020\000\022\014\n\010Evaluate\020\001\022\016\n\nReOpti"
    "mise\020\002\"\234\n\n\020SolutionResponse\022\021\n\tobjective"
    "\030\001 \002(\002\022,\n\006routes\030\002 \003(\0132\034.IVR8.SolutionRe"
    "sponse.Route\022=\n\017infeasibilities\030\003 \003(\0132$."
    "IVR8.SolutionResponse.Infeasibility\032\240\001\n\r"
    "StopAttribute\022\r\n\005dimId\030\001 \002(\t\022\022\n\nstartVal"
    "ue\030\002 \002(\002\022\020\n\010endValue\030\003 \002(\002\022\014\n\004cost\030\004 \002(\002"
    "\022\022\n\nslackValue\030\005 \002(\002\022\021\n\tslackCost\030\006 \002(\002\022"
    "\022\n\ntardyValue\030\007 \002(\002\022\021\n\ttardyCost\030\010 \002(\002\032W"
    "\n\022InterStopAttribute\022\r\n\005dimId\030\001 \002(\t\022\022\n\ns"
    "tartValue\030\002 \002(\002\022\020\n\010endValue\030\003 \002(\002\022\014\n\004cos"
    "t\030\004 \002(\002\032\250\001\n\004Stop\022\n\n\002id\030\001 \002(\005\022\020\n\010sequence"
    "\030\002 \002(\005\022\022\n\nlocationId\030\003 \002(\t\022\016\n\006taskId\030\004 \002"
    "(\t\022\r\n\005jobId\030\005 \002(\t\0228\n\nattributes\030\006 \003(\0132$."
    "IVR8.SolutionResponse.StopAttribute\022\025\n\rc"
    "ompartmentId\030\007 \001(\t\032\226\001\n\tInterStop\022\022\n\nfrom"
    "StopId\030\001 \002(\005\022\020\n\010toStopId\030\002 \002(\005\022=\n\nattrib"
    "utes\030\003 \003(\0132).IVR8.SolutionResponse.Inter"
    "StopAttribute\022$\n\rrouteSegments\030\004 \003(\0132\r.I"
    "VR8.Geocode\032\217\001\n\024TransitRuleAttribute\022\016\n\006"
    "ruleId\030\001 \002(\t\022\r\n\005dimId\030\002 \002(\t\022\022\n\nfromStopI"
    "d\030\003 \002(\005\022\020\n\010toStopId\030\004 \002(\005\022\022\n\nstartValue\030"
    "\005 \002(\002\022\020\n\010endValue\030\006 \002(\002\022\014\n\004cost\030\007 \002(\002\032\333\001"
    "\n\005Route\022\021\n\tvehicleId\030\001 \002(\t\022*\n\005stops\030\002 \003("
    "\0132\033.IVR8.SolutionResponse.Stop\0224\n\ninterS"
    "tops\030\003 \003(\0132 .IVR8.SolutionResponse.Inter"
    "Stop\022\021\n\tfixedCost\030\004 \003(\002\022J\n\025transitRuleAt"
    "tributes\030\005 \003(\0132+.IVR8.SolutionResponse.T"
    "ransitRuleAttribute\032\327\001\n\rInfeasibility\022\016\n"
    "\006taskId\030\001 \002(\t\022D\n\021infeasibilityInfo\030\002 \003(\013"
    "2).IVR8.SolutionResponse.Infeasibility.I"
    "nfo\032p\n\004Info\022\017\n\007message\030\001 \002(\t\022\r\n\005dimId\030\002 "
    "\001(\t\022\r\n\005limit\030\003 \001(\002\022\r\n\005value\030\004 \001(\002\022\r\n\005cou"
    "nt\030\005 \001(\003\022\033\n\023constrainingTaskIds\030\006 \003(\tB\020\n"
    "\016icepackai.IVR8"
};
static ::absl::once_flag descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ivr8_2dyni1c9k2swof_2eproto = {
    false,
    false,
    5855,
    descriptor_table_protodef_ivr8_2dyni1c9k2swof_2eproto,
    "ivr8-yni1c9k2swof.proto",
    &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
    nullptr,
    0,
    43,
    schemas,
    file_default_instances,
    TableStruct_ivr8_2dyni1c9k2swof_2eproto::offsets,
    file_level_metadata_ivr8_2dyni1c9k2swof_2eproto,
    file_level_enum_descriptors_ivr8_2dyni1c9k2swof_2eproto,
    file_level_service_descriptors_ivr8_2dyni1c9k2swof_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter() {
  return &descriptor_table_ivr8_2dyni1c9k2swof_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_ivr8_2dyni1c9k2swof_2eproto(&descriptor_table_ivr8_2dyni1c9k2swof_2eproto);
namespace IVR8 {
const ::google::protobuf::EnumDescriptor* InternalDimension_eMeasurementUnit_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_ivr8_2dyni1c9k2swof_2eproto);
  return file_level_enum_descriptors_ivr8_2dyni1c9k2swof_2eproto[0];
}
bool InternalDimension_eMeasurementUnit_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr InternalDimension_eMeasurementUnit InternalDimension::SECONDS;
constexpr InternalDimension_eMeasurementUnit InternalDimension::MINUTES;
constexpr InternalDimension_eMeasurementUnit InternalDimension::HOURS;
constexpr InternalDimension_eMeasurementUnit InternalDimension::DAYS;
constexpr InternalDimension_eMeasurementUnit InternalDimension::KILOMETRES;
constexpr InternalDimension_eMeasurementUnit InternalDimension::MILES;
constexpr InternalDimension_eMeasurementUnit InternalDimension::eMeasurementUnit_MIN;
constexpr InternalDimension_eMeasurementUnit InternalDimension::eMeasurementUnit_MAX;
constexpr int InternalDimension::eMeasurementUnit_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Job_VehicleRelation_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_ivr8_2dyni1c9k2swof_2eproto);
  return file_level_enum_descriptors_ivr8_2dyni1c9k2swof_2eproto[1];
}
bool Job_VehicleRelation_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Job_VehicleRelation_Type Job_VehicleRelation::INCLUSIVE;
constexpr Job_VehicleRelation_Type Job_VehicleRelation::EXCLUSIVE;
constexpr Job_VehicleRelation_Type Job_VehicleRelation::Type_MIN;
constexpr Job_VehicleRelation_Type Job_VehicleRelation::Type_MAX;
constexpr int Job_VehicleRelation::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Job_CompartmentRelation_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_ivr8_2dyni1c9k2swof_2eproto);
  return file_level_enum_descriptors_ivr8_2dyni1c9k2swof_2eproto[2];
}
bool Job_CompartmentRelation_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Job_CompartmentRelation_Type Job_CompartmentRelation::INCLUSIVE;
constexpr Job_CompartmentRelation_Type Job_CompartmentRelation::EXCLUSIVE;
constexpr Job_CompartmentRelation_Type Job_CompartmentRelation::Type_MIN;
constexpr Job_CompartmentRelation_Type Job_CompartmentRelation::Type_MAX;
constexpr int Job_CompartmentRelation::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Job_Task_TaskRelation_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_ivr8_2dyni1c9k2swof_2eproto);
  return file_level_enum_descriptors_ivr8_2dyni1c9k2swof_2eproto[3];
}
bool Job_Task_TaskRelation_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Job_Task_TaskRelation_Type Job_Task_TaskRelation::INCLUSIVE;
constexpr Job_Task_TaskRelation_Type Job_Task_TaskRelation::EXCLUSIVE;
constexpr Job_Task_TaskRelation_Type Job_Task_TaskRelation::Type_MIN;
constexpr Job_Task_TaskRelation_Type Job_Task_TaskRelation::Type_MAX;
constexpr int Job_Task_TaskRelation::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Job_Task_TripConstraint_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_ivr8_2dyni1c9k2swof_2eproto);
  return file_level_enum_descriptors_ivr8_2dyni1c9k2swof_2eproto[4];
}
bool Job_Task_TripConstraint_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Job_Task_TripConstraint Job_Task::FIRST;
constexpr Job_Task_TripConstraint Job_Task::LAST;
constexpr Job_Task_TripConstraint Job_Task::TripConstraint_MIN;
constexpr Job_Task_TripConstraint Job_Task::TripConstraint_MAX;
constexpr int Job_Task::TripConstraint_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* SolveRequest_SolveType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_ivr8_2dyni1c9k2swof_2eproto);
  return file_level_enum_descriptors_ivr8_2dyni1c9k2swof_2eproto[5];
}
bool SolveRequest_SolveType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr SolveRequest_SolveType SolveRequest::Optimise;
constexpr SolveRequest_SolveType SolveRequest::Evaluate;
constexpr SolveRequest_SolveType SolveRequest::ReOptimise;
constexpr SolveRequest_SolveType SolveRequest::SolveType_MIN;
constexpr SolveRequest_SolveType SolveRequest::SolveType_MAX;
constexpr int SolveRequest::SolveType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class InternalDimension::_Internal {
 public:
  using HasBits = decltype(std::declval<InternalDimension>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(InternalDimension, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_measurementunit(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_slackmax(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_tardymax(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

InternalDimension::InternalDimension(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVR8.InternalDimension)
}
InternalDimension::InternalDimension(const InternalDimension& from) : ::google::protobuf::Message() {
  InternalDimension* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.id_){},
      decltype(_impl_.measurementunit_){},
      decltype(_impl_.slackmax_){},
      decltype(_impl_.tardymax_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.id_.Set(from._internal_id(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.measurementunit_, &from._impl_.measurementunit_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.tardymax_) -
    reinterpret_cast<char*>(&_impl_.measurementunit_)) + sizeof(_impl_.tardymax_));

  // @@protoc_insertion_point(copy_constructor:IVR8.InternalDimension)
}
inline void InternalDimension::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.id_){},
      decltype(_impl_.measurementunit_){0},
      decltype(_impl_.slackmax_){0},
      decltype(_impl_.tardymax_){0},
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
InternalDimension::~InternalDimension() {
  // @@protoc_insertion_point(destructor:IVR8.InternalDimension)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void InternalDimension::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
}
void InternalDimension::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void InternalDimension::Clear() {
// @@protoc_insertion_point(message_clear_start:IVR8.InternalDimension)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.id_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&_impl_.measurementunit_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.tardymax_) -
        reinterpret_cast<char*>(&_impl_.measurementunit_)) + sizeof(_impl_.tardymax_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* InternalDimension::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 33, 2> InternalDimension::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(InternalDimension, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_InternalDimension_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional float tardyMax = 4 [default = 0];
    {::_pbi::TcParser::FastF32S1,
     {37, 3, 0, PROTOBUF_FIELD_OFFSET(InternalDimension, _impl_.tardymax_)}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(InternalDimension, _impl_.id_)}},
    // required .IVR8.InternalDimension.eMeasurementUnit measurementUnit = 2;
    {::_pbi::TcParser::FastEr0S1,
     {16, 1, 5, PROTOBUF_FIELD_OFFSET(InternalDimension, _impl_.measurementunit_)}},
    // optional float slackMax = 3 [default = 0];
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(InternalDimension, _impl_.slackmax_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(InternalDimension, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required .IVR8.InternalDimension.eMeasurementUnit measurementUnit = 2;
    {PROTOBUF_FIELD_OFFSET(InternalDimension, _impl_.measurementunit_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional float slackMax = 3 [default = 0];
    {PROTOBUF_FIELD_OFFSET(InternalDimension, _impl_.slackmax_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float tardyMax = 4 [default = 0];
    {PROTOBUF_FIELD_OFFSET(InternalDimension, _impl_.tardymax_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }}, {{
    {0, 6},
  }}, {{
    "\26\2\0\0\0\0\0\0"
    "IVR8.InternalDimension"
    "id"
  }},
};

::uint8_t* InternalDimension::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IVR8.InternalDimension)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.InternalDimension.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required .IVR8.InternalDimension.eMeasurementUnit measurementUnit = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_measurementunit(), target);
  }

  // optional float slackMax = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_slackmax(), target);
  }

  // optional float tardyMax = 4 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_tardymax(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVR8.InternalDimension)
  return target;
}

::size_t InternalDimension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IVR8.InternalDimension)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required string id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_id());
    }

    // required .IVR8.InternalDimension.eMeasurementUnit measurementUnit = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_measurementunit());
    }

  }
  if (cached_has_bits & 0x0000000cu) {
    // optional float slackMax = 3 [default = 0];
    if (cached_has_bits & 0x00000004u) {
      total_size += 5;
    }

    // optional float tardyMax = 4 [default = 0];
    if (cached_has_bits & 0x00000008u) {
      total_size += 5;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData InternalDimension::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    InternalDimension::MergeImpl
};
const ::google::protobuf::Message::ClassData*InternalDimension::GetClassData() const { return &_class_data_; }


void InternalDimension::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<InternalDimension*>(&to_msg);
  auto& from = static_cast<const InternalDimension&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVR8.InternalDimension)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.measurementunit_ = from._impl_.measurementunit_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.slackmax_ = from._impl_.slackmax_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.tardymax_ = from._impl_.tardymax_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InternalDimension::CopyFrom(const InternalDimension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVR8.InternalDimension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool InternalDimension::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

void InternalDimension::InternalSwap(InternalDimension* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, lhs_arena,
                                       &other->_impl_.id_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InternalDimension, _impl_.tardymax_)
      + sizeof(InternalDimension::_impl_.tardymax_)
      - PROTOBUF_FIELD_OFFSET(InternalDimension, _impl_.measurementunit_)>(
          reinterpret_cast<char*>(&_impl_.measurementunit_),
          reinterpret_cast<char*>(&other->_impl_.measurementunit_));
}

::google::protobuf::Metadata InternalDimension::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter, &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
      file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[0]);
}
// ===================================================================

class CapacityDimension::_Internal {
 public:
  using HasBits = decltype(std::declval<CapacityDimension>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CapacityDimension, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_units(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_slackmax(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_tardymax(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

CapacityDimension::CapacityDimension(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVR8.CapacityDimension)
}
CapacityDimension::CapacityDimension(const CapacityDimension& from) : ::google::protobuf::Message() {
  CapacityDimension* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.id_){},
      decltype(_impl_.units_){},
      decltype(_impl_.slackmax_){},
      decltype(_impl_.tardymax_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.id_.Set(from._internal_id(), _this->GetArenaForAllocation());
  }
  _impl_.units_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.units_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.units_.Set(from._internal_units(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.slackmax_, &from._impl_.slackmax_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.tardymax_) -
    reinterpret_cast<char*>(&_impl_.slackmax_)) + sizeof(_impl_.tardymax_));

  // @@protoc_insertion_point(copy_constructor:IVR8.CapacityDimension)
}
inline void CapacityDimension::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.id_){},
      decltype(_impl_.units_){},
      decltype(_impl_.slackmax_){0},
      decltype(_impl_.tardymax_){0},
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.units_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.units_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CapacityDimension::~CapacityDimension() {
  // @@protoc_insertion_point(destructor:IVR8.CapacityDimension)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CapacityDimension::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
  _impl_.units_.Destroy();
}
void CapacityDimension::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CapacityDimension::Clear() {
// @@protoc_insertion_point(message_clear_start:IVR8.CapacityDimension)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.units_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000000cu) {
    ::memset(&_impl_.slackmax_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.tardymax_) -
        reinterpret_cast<char*>(&_impl_.slackmax_)) + sizeof(_impl_.tardymax_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CapacityDimension::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 38, 2> CapacityDimension::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CapacityDimension, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CapacityDimension_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional float tardyMax = 4 [default = 0];
    {::_pbi::TcParser::FastF32S1,
     {37, 3, 0, PROTOBUF_FIELD_OFFSET(CapacityDimension, _impl_.tardymax_)}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CapacityDimension, _impl_.id_)}},
    // required string units = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CapacityDimension, _impl_.units_)}},
    // optional float slackMax = 3 [default = 0];
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(CapacityDimension, _impl_.slackmax_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(CapacityDimension, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string units = 2;
    {PROTOBUF_FIELD_OFFSET(CapacityDimension, _impl_.units_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional float slackMax = 3 [default = 0];
    {PROTOBUF_FIELD_OFFSET(CapacityDimension, _impl_.slackmax_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float tardyMax = 4 [default = 0];
    {PROTOBUF_FIELD_OFFSET(CapacityDimension, _impl_.tardymax_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
    "\26\2\5\0\0\0\0\0"
    "IVR8.CapacityDimension"
    "id"
    "units"
  }},
};

::uint8_t* CapacityDimension::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IVR8.CapacityDimension)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.CapacityDimension.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required string units = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_units();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.CapacityDimension.units");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional float slackMax = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_slackmax(), target);
  }

  // optional float tardyMax = 4 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_tardymax(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVR8.CapacityDimension)
  return target;
}

::size_t CapacityDimension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IVR8.CapacityDimension)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required string id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_id());
    }

    // required string units = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_units());
    }

  }
  if (cached_has_bits & 0x0000000cu) {
    // optional float slackMax = 3 [default = 0];
    if (cached_has_bits & 0x00000004u) {
      total_size += 5;
    }

    // optional float tardyMax = 4 [default = 0];
    if (cached_has_bits & 0x00000008u) {
      total_size += 5;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CapacityDimension::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CapacityDimension::MergeImpl
};
const ::google::protobuf::Message::ClassData*CapacityDimension::GetClassData() const { return &_class_data_; }


void CapacityDimension::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CapacityDimension*>(&to_msg);
  auto& from = static_cast<const CapacityDimension&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVR8.CapacityDimension)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_units(from._internal_units());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.slackmax_ = from._impl_.slackmax_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.tardymax_ = from._impl_.tardymax_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CapacityDimension::CopyFrom(const CapacityDimension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVR8.CapacityDimension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CapacityDimension::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

void CapacityDimension::InternalSwap(CapacityDimension* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, lhs_arena,
                                       &other->_impl_.id_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.units_, lhs_arena,
                                       &other->_impl_.units_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CapacityDimension, _impl_.tardymax_)
      + sizeof(CapacityDimension::_impl_.tardymax_)
      - PROTOBUF_FIELD_OFFSET(CapacityDimension, _impl_.slackmax_)>(
          reinterpret_cast<char*>(&_impl_.slackmax_),
          reinterpret_cast<char*>(&other->_impl_.slackmax_));
}

::google::protobuf::Metadata CapacityDimension::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter, &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
      file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[1]);
}
// ===================================================================

class DimensionConfiguration::_Internal {
 public:
  using HasBits = decltype(std::declval<DimensionConfiguration>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DimensionConfiguration, _impl_._has_bits_);
  static const ::IVR8::InternalDimension& timeconfig(const DimensionConfiguration* msg);
  static void set_has_timeconfig(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::IVR8::InternalDimension& distanceconfig(const DimensionConfiguration* msg);
  static void set_has_distanceconfig(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::IVR8::InternalDimension& DimensionConfiguration::_Internal::timeconfig(const DimensionConfiguration* msg) {
  return *msg->_impl_.timeconfig_;
}
const ::IVR8::InternalDimension& DimensionConfiguration::_Internal::distanceconfig(const DimensionConfiguration* msg) {
  return *msg->_impl_.distanceconfig_;
}
DimensionConfiguration::DimensionConfiguration(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVR8.DimensionConfiguration)
}
DimensionConfiguration::DimensionConfiguration(const DimensionConfiguration& from) : ::google::protobuf::Message() {
  DimensionConfiguration* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.capacitydimensions_){from._impl_.capacitydimensions_},
      decltype(_impl_.timeconfig_){nullptr},
      decltype(_impl_.distanceconfig_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.timeconfig_ = new ::IVR8::InternalDimension(*from._impl_.timeconfig_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.distanceconfig_ = new ::IVR8::InternalDimension(*from._impl_.distanceconfig_);
  }

  // @@protoc_insertion_point(copy_constructor:IVR8.DimensionConfiguration)
}
inline void DimensionConfiguration::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.capacitydimensions_){arena},
      decltype(_impl_.timeconfig_){nullptr},
      decltype(_impl_.distanceconfig_){nullptr},
  };
}
DimensionConfiguration::~DimensionConfiguration() {
  // @@protoc_insertion_point(destructor:IVR8.DimensionConfiguration)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DimensionConfiguration::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.capacitydimensions_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.timeconfig_;
  if (this != internal_default_instance()) delete _impl_.distanceconfig_;
}
void DimensionConfiguration::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void DimensionConfiguration::Clear() {
// @@protoc_insertion_point(message_clear_start:IVR8.DimensionConfiguration)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_capacitydimensions()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.timeconfig_ != nullptr);
      _impl_.timeconfig_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.distanceconfig_ != nullptr);
      _impl_.distanceconfig_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DimensionConfiguration::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> DimensionConfiguration::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DimensionConfiguration, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DimensionConfiguration_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .IVR8.InternalDimension timeConfig = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DimensionConfiguration, _impl_.timeconfig_)}},
    // optional .IVR8.InternalDimension distanceConfig = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(DimensionConfiguration, _impl_.distanceconfig_)}},
    // repeated .IVR8.CapacityDimension capacityDimensions = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(DimensionConfiguration, _impl_.capacitydimensions_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .IVR8.InternalDimension timeConfig = 1;
    {PROTOBUF_FIELD_OFFSET(DimensionConfiguration, _impl_.timeconfig_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .IVR8.InternalDimension distanceConfig = 2;
    {PROTOBUF_FIELD_OFFSET(DimensionConfiguration, _impl_.distanceconfig_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .IVR8.CapacityDimension capacityDimensions = 3;
    {PROTOBUF_FIELD_OFFSET(DimensionConfiguration, _impl_.capacitydimensions_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::IVR8::InternalDimension>()},
    {::_pbi::TcParser::GetTable<::IVR8::InternalDimension>()},
    {::_pbi::TcParser::GetTable<::IVR8::CapacityDimension>()},
  }}, {{
  }},
};

::uint8_t* DimensionConfiguration::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IVR8.DimensionConfiguration)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .IVR8.InternalDimension timeConfig = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::timeconfig(this),
        _Internal::timeconfig(this).GetCachedSize(), target, stream);
  }

  // optional .IVR8.InternalDimension distanceConfig = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::distanceconfig(this),
        _Internal::distanceconfig(this).GetCachedSize(), target, stream);
  }

  // repeated .IVR8.CapacityDimension capacityDimensions = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_capacitydimensions_size()); i < n; i++) {
    const auto& repfield = this->_internal_capacitydimensions().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVR8.DimensionConfiguration)
  return target;
}

::size_t DimensionConfiguration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IVR8.DimensionConfiguration)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .IVR8.CapacityDimension capacityDimensions = 3;
  total_size += 1UL * this->_internal_capacitydimensions_size();
  for (const auto& msg : this->_internal_capacitydimensions()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .IVR8.InternalDimension timeConfig = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.timeconfig_);
    }

    // optional .IVR8.InternalDimension distanceConfig = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.distanceconfig_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DimensionConfiguration::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    DimensionConfiguration::MergeImpl
};
const ::google::protobuf::Message::ClassData*DimensionConfiguration::GetClassData() const { return &_class_data_; }


void DimensionConfiguration::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DimensionConfiguration*>(&to_msg);
  auto& from = static_cast<const DimensionConfiguration&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVR8.DimensionConfiguration)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_capacitydimensions()->MergeFrom(from._internal_capacitydimensions());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_timeconfig()->::IVR8::InternalDimension::MergeFrom(
          from._internal_timeconfig());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_distanceconfig()->::IVR8::InternalDimension::MergeFrom(
          from._internal_distanceconfig());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DimensionConfiguration::CopyFrom(const DimensionConfiguration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVR8.DimensionConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DimensionConfiguration::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(_internal_capacitydimensions()))
    return false;
  if ((_impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!_impl_.timeconfig_->IsInitialized()) return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!_impl_.distanceconfig_->IsInitialized()) return false;
  }
  return true;
}

void DimensionConfiguration::InternalSwap(DimensionConfiguration* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.capacitydimensions_.InternalSwap(&other->_impl_.capacitydimensions_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DimensionConfiguration, _impl_.distanceconfig_)
      + sizeof(DimensionConfiguration::_impl_.distanceconfig_)
      - PROTOBUF_FIELD_OFFSET(DimensionConfiguration, _impl_.timeconfig_)>(
          reinterpret_cast<char*>(&_impl_.timeconfig_),
          reinterpret_cast<char*>(&other->_impl_.timeconfig_));
}

::google::protobuf::Metadata DimensionConfiguration::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter, &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
      file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[2]);
}
// ===================================================================

class Geocode::_Internal {
 public:
  using HasBits = decltype(std::declval<Geocode>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Geocode, _impl_._has_bits_);
  static void set_has_longitude(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_latitude(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

Geocode::Geocode(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVR8.Geocode)
}
Geocode::Geocode(const Geocode& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:IVR8.Geocode)
}
inline void Geocode::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.longitude_){0},
      decltype(_impl_.latitude_){0},
  };
}
Geocode::~Geocode() {
  // @@protoc_insertion_point(destructor:IVR8.Geocode)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Geocode::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void Geocode::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Geocode::Clear() {
// @@protoc_insertion_point(message_clear_start:IVR8.Geocode)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.longitude_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.latitude_) -
        reinterpret_cast<char*>(&_impl_.longitude_)) + sizeof(_impl_.latitude_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Geocode::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Geocode::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Geocode, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Geocode_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required float latitude = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(Geocode, _impl_.latitude_)}},
    // required float longitude = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(Geocode, _impl_.longitude_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required float longitude = 1;
    {PROTOBUF_FIELD_OFFSET(Geocode, _impl_.longitude_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float latitude = 2;
    {PROTOBUF_FIELD_OFFSET(Geocode, _impl_.latitude_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Geocode::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IVR8.Geocode)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required float longitude = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_longitude(), target);
  }

  // required float latitude = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_latitude(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVR8.Geocode)
  return target;
}

::size_t Geocode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IVR8.Geocode)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required float longitude = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 5;
    }

    // required float latitude = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 5;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Geocode::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Geocode::MergeImpl
};
const ::google::protobuf::Message::ClassData*Geocode::GetClassData() const { return &_class_data_; }


void Geocode::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Geocode*>(&to_msg);
  auto& from = static_cast<const Geocode&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVR8.Geocode)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.longitude_ = from._impl_.longitude_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.latitude_ = from._impl_.latitude_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Geocode::CopyFrom(const Geocode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVR8.Geocode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Geocode::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

void Geocode::InternalSwap(Geocode* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Geocode, _impl_.latitude_)
      + sizeof(Geocode::_impl_.latitude_)
      - PROTOBUF_FIELD_OFFSET(Geocode, _impl_.longitude_)>(
          reinterpret_cast<char*>(&_impl_.longitude_),
          reinterpret_cast<char*>(&other->_impl_.longitude_));
}

::google::protobuf::Metadata Geocode::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter, &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
      file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[3]);
}
// ===================================================================

class Window::_Internal {
 public:
  using HasBits = decltype(std::declval<Window>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Window, _impl_._has_bits_);
  static void set_has_start(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_end(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_slackcostcoef(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_tardycostcoef(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_slackmax(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_tardymax(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

Window::Window(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVR8.Window)
}
Window::Window(const Window& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:IVR8.Window)
}
inline void Window::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.start_){0},
      decltype(_impl_.end_){0},
      decltype(_impl_.slackcostcoef_){0},
      decltype(_impl_.tardycostcoef_){0},
      decltype(_impl_.slackmax_){-1},
      decltype(_impl_.tardymax_){-1},
  };
}
Window::~Window() {
  // @@protoc_insertion_point(destructor:IVR8.Window)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Window::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void Window::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Window::Clear() {
// @@protoc_insertion_point(message_clear_start:IVR8.Window)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    ::memset(&_impl_.start_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.tardycostcoef_) -
        reinterpret_cast<char*>(&_impl_.start_)) + sizeof(_impl_.tardycostcoef_));
    _impl_.slackmax_ = -1;
    _impl_.tardymax_ = -1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Window::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 0, 2> Window::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Window, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Window_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required float start = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(Window, _impl_.start_)}},
    // required float end = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(Window, _impl_.end_)}},
    // optional float slackCostCoef = 3 [default = 0];
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(Window, _impl_.slackcostcoef_)}},
    // optional float tardyCostCoef = 4 [default = 0];
    {::_pbi::TcParser::FastF32S1,
     {37, 3, 0, PROTOBUF_FIELD_OFFSET(Window, _impl_.tardycostcoef_)}},
    // optional float slackMax = 5 [default = -1];
    {::_pbi::TcParser::FastF32S1,
     {45, 4, 0, PROTOBUF_FIELD_OFFSET(Window, _impl_.slackmax_)}},
    // optional float tardyMax = 6 [default = -1];
    {::_pbi::TcParser::FastF32S1,
     {53, 5, 0, PROTOBUF_FIELD_OFFSET(Window, _impl_.tardymax_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required float start = 1;
    {PROTOBUF_FIELD_OFFSET(Window, _impl_.start_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float end = 2;
    {PROTOBUF_FIELD_OFFSET(Window, _impl_.end_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float slackCostCoef = 3 [default = 0];
    {PROTOBUF_FIELD_OFFSET(Window, _impl_.slackcostcoef_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float tardyCostCoef = 4 [default = 0];
    {PROTOBUF_FIELD_OFFSET(Window, _impl_.tardycostcoef_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float slackMax = 5 [default = -1];
    {PROTOBUF_FIELD_OFFSET(Window, _impl_.slackmax_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float tardyMax = 6 [default = -1];
    {PROTOBUF_FIELD_OFFSET(Window, _impl_.tardymax_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Window::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IVR8.Window)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required float start = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_start(), target);
  }

  // required float end = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_end(), target);
  }

  // optional float slackCostCoef = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_slackcostcoef(), target);
  }

  // optional float tardyCostCoef = 4 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_tardycostcoef(), target);
  }

  // optional float slackMax = 5 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this->_internal_slackmax(), target);
  }

  // optional float tardyMax = 6 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        6, this->_internal_tardymax(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVR8.Window)
  return target;
}

::size_t Window::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IVR8.Window)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required float start = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 5;
    }

    // required float end = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 5;
    }

  }
  if (cached_has_bits & 0x0000003cu) {
    // optional float slackCostCoef = 3 [default = 0];
    if (cached_has_bits & 0x00000004u) {
      total_size += 5;
    }

    // optional float tardyCostCoef = 4 [default = 0];
    if (cached_has_bits & 0x00000008u) {
      total_size += 5;
    }

    // optional float slackMax = 5 [default = -1];
    if (cached_has_bits & 0x00000010u) {
      total_size += 5;
    }

    // optional float tardyMax = 6 [default = -1];
    if (cached_has_bits & 0x00000020u) {
      total_size += 5;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Window::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Window::MergeImpl
};
const ::google::protobuf::Message::ClassData*Window::GetClassData() const { return &_class_data_; }


void Window::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Window*>(&to_msg);
  auto& from = static_cast<const Window&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVR8.Window)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.start_ = from._impl_.start_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.end_ = from._impl_.end_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.slackcostcoef_ = from._impl_.slackcostcoef_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.tardycostcoef_ = from._impl_.tardycostcoef_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.slackmax_ = from._impl_.slackmax_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.tardymax_ = from._impl_.tardymax_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Window::CopyFrom(const Window& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVR8.Window)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Window::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

void Window::InternalSwap(Window* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Window, _impl_.tardymax_)
      + sizeof(Window::_impl_.tardymax_)
      - PROTOBUF_FIELD_OFFSET(Window, _impl_.start_)>(
          reinterpret_cast<char*>(&_impl_.start_),
          reinterpret_cast<char*>(&other->_impl_.start_));
}

::google::protobuf::Metadata Window::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter, &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
      file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[4]);
}
// ===================================================================

class Location_Attribute::_Internal {
 public:
  using HasBits = decltype(std::declval<Location_Attribute>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Location_Attribute, _impl_._has_bits_);
  static void set_has_dimensionid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_vehicleid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_quantity(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

Location_Attribute::Location_Attribute(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVR8.Location.Attribute)
}
Location_Attribute::Location_Attribute(const Location_Attribute& from) : ::google::protobuf::Message() {
  Location_Attribute* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.arrivalwindows_){from._impl_.arrivalwindows_},
      decltype(_impl_.departurewindows_){from._impl_.departurewindows_},
      decltype(_impl_.dimensionid_){},
      decltype(_impl_.vehicleid_){},
      decltype(_impl_.quantity_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.dimensionid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dimensionid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.dimensionid_.Set(from._internal_dimensionid(), _this->GetArenaForAllocation());
  }
  _impl_.vehicleid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.vehicleid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.vehicleid_.Set(from._internal_vehicleid(), _this->GetArenaForAllocation());
  }
  _this->_impl_.quantity_ = from._impl_.quantity_;

  // @@protoc_insertion_point(copy_constructor:IVR8.Location.Attribute)
}
inline void Location_Attribute::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.arrivalwindows_){arena},
      decltype(_impl_.departurewindows_){arena},
      decltype(_impl_.dimensionid_){},
      decltype(_impl_.vehicleid_){},
      decltype(_impl_.quantity_){0},
  };
  _impl_.dimensionid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dimensionid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.vehicleid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.vehicleid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
Location_Attribute::~Location_Attribute() {
  // @@protoc_insertion_point(destructor:IVR8.Location.Attribute)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Location_Attribute::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.arrivalwindows_.~RepeatedPtrField();
  _impl_.departurewindows_.~RepeatedPtrField();
  _impl_.dimensionid_.Destroy();
  _impl_.vehicleid_.Destroy();
}
void Location_Attribute::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Location_Attribute::Clear() {
// @@protoc_insertion_point(message_clear_start:IVR8.Location.Attribute)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_arrivalwindows()->Clear();
  _internal_mutable_departurewindows()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.dimensionid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.vehicleid_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.quantity_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Location_Attribute::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 52, 2> Location_Attribute::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Location_Attribute, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Location_Attribute_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string dimensionId = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Location_Attribute, _impl_.dimensionid_)}},
    // optional string vehicleId = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Location_Attribute, _impl_.vehicleid_)}},
    // optional float quantity = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(Location_Attribute, _impl_.quantity_)}},
    // repeated .IVR8.Window arrivalWindows = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Location_Attribute, _impl_.arrivalwindows_)}},
    // repeated .IVR8.Window departureWindows = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 1, PROTOBUF_FIELD_OFFSET(Location_Attribute, _impl_.departurewindows_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required string dimensionId = 1;
    {PROTOBUF_FIELD_OFFSET(Location_Attribute, _impl_.dimensionid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string vehicleId = 2;
    {PROTOBUF_FIELD_OFFSET(Location_Attribute, _impl_.vehicleid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional float quantity = 3;
    {PROTOBUF_FIELD_OFFSET(Location_Attribute, _impl_.quantity_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // repeated .IVR8.Window arrivalWindows = 4;
    {PROTOBUF_FIELD_OFFSET(Location_Attribute, _impl_.arrivalwindows_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .IVR8.Window departureWindows = 5;
    {PROTOBUF_FIELD_OFFSET(Location_Attribute, _impl_.departurewindows_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::IVR8::Window>()},
    {::_pbi::TcParser::GetTable<::IVR8::Window>()},
  }}, {{
    "\27\13\11\0\0\0\0\0"
    "IVR8.Location.Attribute"
    "dimensionId"
    "vehicleId"
  }},
};

::uint8_t* Location_Attribute::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IVR8.Location.Attribute)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string dimensionId = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_dimensionid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.Location.Attribute.dimensionId");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string vehicleId = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_vehicleid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.Location.Attribute.vehicleId");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional float quantity = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_quantity(), target);
  }

  // repeated .IVR8.Window arrivalWindows = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_arrivalwindows_size()); i < n; i++) {
    const auto& repfield = this->_internal_arrivalwindows().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .IVR8.Window departureWindows = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_departurewindows_size()); i < n; i++) {
    const auto& repfield = this->_internal_departurewindows().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVR8.Location.Attribute)
  return target;
}

::size_t Location_Attribute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IVR8.Location.Attribute)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .IVR8.Window arrivalWindows = 4;
  total_size += 1UL * this->_internal_arrivalwindows_size();
  for (const auto& msg : this->_internal_arrivalwindows()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .IVR8.Window departureWindows = 5;
  total_size += 1UL * this->_internal_departurewindows_size();
  for (const auto& msg : this->_internal_departurewindows()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // required string dimensionId = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_dimensionid());
  }

  if (cached_has_bits & 0x00000006u) {
    // optional string vehicleId = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_vehicleid());
    }

    // optional float quantity = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 5;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Location_Attribute::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Location_Attribute::MergeImpl
};
const ::google::protobuf::Message::ClassData*Location_Attribute::GetClassData() const { return &_class_data_; }


void Location_Attribute::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Location_Attribute*>(&to_msg);
  auto& from = static_cast<const Location_Attribute&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVR8.Location.Attribute)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_arrivalwindows()->MergeFrom(from._internal_arrivalwindows());
  _this->_internal_mutable_departurewindows()->MergeFrom(from._internal_departurewindows());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_dimensionid(from._internal_dimensionid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_vehicleid(from._internal_vehicleid());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.quantity_ = from._impl_.quantity_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Location_Attribute::CopyFrom(const Location_Attribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVR8.Location.Attribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Location_Attribute::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(_internal_arrivalwindows()))
    return false;
  if (!::google::protobuf::internal::AllAreInitialized(_internal_departurewindows()))
    return false;
  return true;
}

void Location_Attribute::InternalSwap(Location_Attribute* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.arrivalwindows_.InternalSwap(&other->_impl_.arrivalwindows_);
  _impl_.departurewindows_.InternalSwap(&other->_impl_.departurewindows_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dimensionid_, lhs_arena,
                                       &other->_impl_.dimensionid_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.vehicleid_, lhs_arena,
                                       &other->_impl_.vehicleid_, rhs_arena);
        swap(_impl_.quantity_, other->_impl_.quantity_);
}

::google::protobuf::Metadata Location_Attribute::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter, &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
      file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[5]);
}
// ===================================================================

class Location::_Internal {
 public:
  using HasBits = decltype(std::declval<Location>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Location, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::IVR8::Geocode& geocode(const Location* msg);
  static void set_has_geocode(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::IVR8::Geocode& Location::_Internal::geocode(const Location* msg) {
  return *msg->_impl_.geocode_;
}
Location::Location(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVR8.Location)
}
Location::Location(const Location& from) : ::google::protobuf::Message() {
  Location* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.attributes_){from._impl_.attributes_},
      decltype(_impl_.id_){},
      decltype(_impl_.geocode_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.id_.Set(from._internal_id(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.geocode_ = new ::IVR8::Geocode(*from._impl_.geocode_);
  }

  // @@protoc_insertion_point(copy_constructor:IVR8.Location)
}
inline void Location::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.attributes_){arena},
      decltype(_impl_.id_){},
      decltype(_impl_.geocode_){nullptr},
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
Location::~Location() {
  // @@protoc_insertion_point(destructor:IVR8.Location)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Location::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.attributes_.~RepeatedPtrField();
  _impl_.id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.geocode_;
}
void Location::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Location::Clear() {
// @@protoc_insertion_point(message_clear_start:IVR8.Location)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_attributes()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.geocode_ != nullptr);
      _impl_.geocode_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Location::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 24, 2> Location::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Location, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Location_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Location, _impl_.id_)}},
    // optional .IVR8.Geocode geocode = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Location, _impl_.geocode_)}},
    // repeated .IVR8.Location.Attribute attributes = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(Location, _impl_.attributes_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(Location, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .IVR8.Geocode geocode = 2;
    {PROTOBUF_FIELD_OFFSET(Location, _impl_.geocode_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .IVR8.Location.Attribute attributes = 3;
    {PROTOBUF_FIELD_OFFSET(Location, _impl_.attributes_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::IVR8::Geocode>()},
    {::_pbi::TcParser::GetTable<::IVR8::Location_Attribute>()},
  }}, {{
    "\15\2\0\0\0\0\0\0"
    "IVR8.Location"
    "id"
  }},
};

::uint8_t* Location::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IVR8.Location)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.Location.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional .IVR8.Geocode geocode = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::geocode(this),
        _Internal::geocode(this).GetCachedSize(), target, stream);
  }

  // repeated .IVR8.Location.Attribute attributes = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_attributes_size()); i < n; i++) {
    const auto& repfield = this->_internal_attributes().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVR8.Location)
  return target;
}

::size_t Location::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IVR8.Location)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .IVR8.Location.Attribute attributes = 3;
  total_size += 1UL * this->_internal_attributes_size();
  for (const auto& msg : this->_internal_attributes()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // required string id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  // optional .IVR8.Geocode geocode = 2;
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.geocode_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Location::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Location::MergeImpl
};
const ::google::protobuf::Message::ClassData*Location::GetClassData() const { return &_class_data_; }


void Location::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Location*>(&to_msg);
  auto& from = static_cast<const Location&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVR8.Location)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_attributes()->MergeFrom(from._internal_attributes());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_geocode()->::IVR8::Geocode::MergeFrom(
          from._internal_geocode());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Location::CopyFrom(const Location& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVR8.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Location::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(_internal_attributes()))
    return false;
  if ((_impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!_impl_.geocode_->IsInitialized()) return false;
  }
  return true;
}

void Location::InternalSwap(Location* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.attributes_.InternalSwap(&other->_impl_.attributes_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, lhs_arena,
                                       &other->_impl_.id_, rhs_arena);
  swap(_impl_.geocode_, other->_impl_.geocode_);
}

::google::protobuf::Metadata Location::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter, &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
      file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[6]);
}
// ===================================================================

class Job_VehicleRelation::_Internal {
 public:
  using HasBits = decltype(std::declval<Job_VehicleRelation>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Job_VehicleRelation, _impl_._has_bits_);
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

Job_VehicleRelation::Job_VehicleRelation(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVR8.Job.VehicleRelation)
}
Job_VehicleRelation::Job_VehicleRelation(const Job_VehicleRelation& from) : ::google::protobuf::Message() {
  Job_VehicleRelation* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.vehicleids_){from._impl_.vehicleids_},
      decltype(_impl_.type_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _this->_impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:IVR8.Job.VehicleRelation)
}
inline void Job_VehicleRelation::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.vehicleids_){arena},
      decltype(_impl_.type_){0},
  };
}
Job_VehicleRelation::~Job_VehicleRelation() {
  // @@protoc_insertion_point(destructor:IVR8.Job.VehicleRelation)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Job_VehicleRelation::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_vehicleids()->~RepeatedPtrField();
}
void Job_VehicleRelation::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Job_VehicleRelation::Clear() {
// @@protoc_insertion_point(message_clear_start:IVR8.Job.VehicleRelation)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_vehicleids()->Clear();
  _impl_.type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Job_VehicleRelation::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 43, 2> Job_VehicleRelation::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Job_VehicleRelation, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Job_VehicleRelation_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string vehicleIds = 2;
    {::_pbi::TcParser::FastSR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Job_VehicleRelation, _impl_.vehicleids_)}},
    // required .IVR8.Job.VehicleRelation.Type type = 1;
    {::_pbi::TcParser::FastEr0S1,
     {8, 0, 1, PROTOBUF_FIELD_OFFSET(Job_VehicleRelation, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required .IVR8.Job.VehicleRelation.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(Job_VehicleRelation, _impl_.type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // repeated string vehicleIds = 2;
    {PROTOBUF_FIELD_OFFSET(Job_VehicleRelation, _impl_.vehicleids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }}, {{
    {0, 2},
  }}, {{
    "\30\0\12\0\0\0\0\0"
    "IVR8.Job.VehicleRelation"
    "vehicleIds"
  }},
};

::uint8_t* Job_VehicleRelation::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IVR8.Job.VehicleRelation)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .IVR8.Job.VehicleRelation.Type type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  // repeated string vehicleIds = 2;
  for (int i = 0, n = this->_internal_vehicleids_size(); i < n; ++i) {
    const auto& s = this->_internal_vehicleids().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.Job.VehicleRelation.vehicleIds");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVR8.Job.VehicleRelation)
  return target;
}

::size_t Job_VehicleRelation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IVR8.Job.VehicleRelation)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string vehicleIds = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_vehicleids().size());
  for (int i = 0, n = _internal_vehicleids().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_vehicleids().Get(i));
  }
  // required .IVR8.Job.VehicleRelation.Type type = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Job_VehicleRelation::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Job_VehicleRelation::MergeImpl
};
const ::google::protobuf::Message::ClassData*Job_VehicleRelation::GetClassData() const { return &_class_data_; }


void Job_VehicleRelation::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Job_VehicleRelation*>(&to_msg);
  auto& from = static_cast<const Job_VehicleRelation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVR8.Job.VehicleRelation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_vehicleids()->MergeFrom(from._internal_vehicleids());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Job_VehicleRelation::CopyFrom(const Job_VehicleRelation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVR8.Job.VehicleRelation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Job_VehicleRelation::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

void Job_VehicleRelation::InternalSwap(Job_VehicleRelation* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.vehicleids_.InternalSwap(&other->_impl_.vehicleids_);
  swap(_impl_.type_, other->_impl_.type_);
}

::google::protobuf::Metadata Job_VehicleRelation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter, &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
      file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[7]);
}
// ===================================================================

class Job_CompartmentRelation::_Internal {
 public:
  using HasBits = decltype(std::declval<Job_CompartmentRelation>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Job_CompartmentRelation, _impl_._has_bits_);
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

Job_CompartmentRelation::Job_CompartmentRelation(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVR8.Job.CompartmentRelation)
}
Job_CompartmentRelation::Job_CompartmentRelation(const Job_CompartmentRelation& from) : ::google::protobuf::Message() {
  Job_CompartmentRelation* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.compartmentids_){from._impl_.compartmentids_},
      decltype(_impl_.type_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _this->_impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:IVR8.Job.CompartmentRelation)
}
inline void Job_CompartmentRelation::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.compartmentids_){arena},
      decltype(_impl_.type_){0},
  };
}
Job_CompartmentRelation::~Job_CompartmentRelation() {
  // @@protoc_insertion_point(destructor:IVR8.Job.CompartmentRelation)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Job_CompartmentRelation::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_compartmentids()->~RepeatedPtrField();
}
void Job_CompartmentRelation::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Job_CompartmentRelation::Clear() {
// @@protoc_insertion_point(message_clear_start:IVR8.Job.CompartmentRelation)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_compartmentids()->Clear();
  _impl_.type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Job_CompartmentRelation::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 51, 2> Job_CompartmentRelation::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Job_CompartmentRelation, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Job_CompartmentRelation_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string compartmentIds = 2;
    {::_pbi::TcParser::FastSR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Job_CompartmentRelation, _impl_.compartmentids_)}},
    // required .IVR8.Job.CompartmentRelation.Type type = 1;
    {::_pbi::TcParser::FastEr0S1,
     {8, 0, 1, PROTOBUF_FIELD_OFFSET(Job_CompartmentRelation, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required .IVR8.Job.CompartmentRelation.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(Job_CompartmentRelation, _impl_.type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // repeated string compartmentIds = 2;
    {PROTOBUF_FIELD_OFFSET(Job_CompartmentRelation, _impl_.compartmentids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }}, {{
    {0, 2},
  }}, {{
    "\34\0\16\0\0\0\0\0"
    "IVR8.Job.CompartmentRelation"
    "compartmentIds"
  }},
};

::uint8_t* Job_CompartmentRelation::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IVR8.Job.CompartmentRelation)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .IVR8.Job.CompartmentRelation.Type type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  // repeated string compartmentIds = 2;
  for (int i = 0, n = this->_internal_compartmentids_size(); i < n; ++i) {
    const auto& s = this->_internal_compartmentids().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.Job.CompartmentRelation.compartmentIds");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVR8.Job.CompartmentRelation)
  return target;
}

::size_t Job_CompartmentRelation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IVR8.Job.CompartmentRelation)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string compartmentIds = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_compartmentids().size());
  for (int i = 0, n = _internal_compartmentids().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_compartmentids().Get(i));
  }
  // required .IVR8.Job.CompartmentRelation.Type type = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Job_CompartmentRelation::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Job_CompartmentRelation::MergeImpl
};
const ::google::protobuf::Message::ClassData*Job_CompartmentRelation::GetClassData() const { return &_class_data_; }


void Job_CompartmentRelation::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Job_CompartmentRelation*>(&to_msg);
  auto& from = static_cast<const Job_CompartmentRelation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVR8.Job.CompartmentRelation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_compartmentids()->MergeFrom(from._internal_compartmentids());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Job_CompartmentRelation::CopyFrom(const Job_CompartmentRelation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVR8.Job.CompartmentRelation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Job_CompartmentRelation::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

void Job_CompartmentRelation::InternalSwap(Job_CompartmentRelation* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.compartmentids_.InternalSwap(&other->_impl_.compartmentids_);
  swap(_impl_.type_, other->_impl_.type_);
}

::google::protobuf::Metadata Job_CompartmentRelation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter, &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
      file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[8]);
}
// ===================================================================

class Job_Task_Attribute::_Internal {
 public:
  using HasBits = decltype(std::declval<Job_Task_Attribute>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Job_Task_Attribute, _impl_._has_bits_);
  static void set_has_dimensionid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_quantity(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

Job_Task_Attribute::Job_Task_Attribute(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVR8.Job.Task.Attribute)
}
Job_Task_Attribute::Job_Task_Attribute(const Job_Task_Attribute& from) : ::google::protobuf::Message() {
  Job_Task_Attribute* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.windows_){from._impl_.windows_},
      decltype(_impl_.vehicleids_){from._impl_.vehicleids_},
      decltype(_impl_.dimensionid_){},
      decltype(_impl_.quantity_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.dimensionid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dimensionid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.dimensionid_.Set(from._internal_dimensionid(), _this->GetArenaForAllocation());
  }
  _this->_impl_.quantity_ = from._impl_.quantity_;

  // @@protoc_insertion_point(copy_constructor:IVR8.Job.Task.Attribute)
}
inline void Job_Task_Attribute::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.windows_){arena},
      decltype(_impl_.vehicleids_){arena},
      decltype(_impl_.dimensionid_){},
      decltype(_impl_.quantity_){0},
  };
  _impl_.dimensionid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dimensionid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
Job_Task_Attribute::~Job_Task_Attribute() {
  // @@protoc_insertion_point(destructor:IVR8.Job.Task.Attribute)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Job_Task_Attribute::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.windows_.~RepeatedPtrField();
  _internal_mutable_vehicleids()->~RepeatedPtrField();
  _impl_.dimensionid_.Destroy();
}
void Job_Task_Attribute::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Job_Task_Attribute::Clear() {
// @@protoc_insertion_point(message_clear_start:IVR8.Job.Task.Attribute)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_windows()->Clear();
  _internal_mutable_vehicleids()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.dimensionid_.ClearNonDefaultToEmpty();
  }
  _impl_.quantity_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Job_Task_Attribute::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 53, 2> Job_Task_Attribute::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Job_Task_Attribute, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Job_Task_Attribute_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string vehicleIds = 4;
    {::_pbi::TcParser::FastSR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Job_Task_Attribute, _impl_.vehicleids_)}},
    // required string dimensionId = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Job_Task_Attribute, _impl_.dimensionid_)}},
    // optional float quantity = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(Job_Task_Attribute, _impl_.quantity_)}},
    // repeated .IVR8.Window windows = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Job_Task_Attribute, _impl_.windows_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string dimensionId = 1;
    {PROTOBUF_FIELD_OFFSET(Job_Task_Attribute, _impl_.dimensionid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional float quantity = 2;
    {PROTOBUF_FIELD_OFFSET(Job_Task_Attribute, _impl_.quantity_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // repeated .IVR8.Window windows = 3;
    {PROTOBUF_FIELD_OFFSET(Job_Task_Attribute, _impl_.windows_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string vehicleIds = 4;
    {PROTOBUF_FIELD_OFFSET(Job_Task_Attribute, _impl_.vehicleids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::IVR8::Window>()},
  }}, {{
    "\27\13\0\0\12\0\0\0"
    "IVR8.Job.Task.Attribute"
    "dimensionId"
    "vehicleIds"
  }},
};

::uint8_t* Job_Task_Attribute::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IVR8.Job.Task.Attribute)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string dimensionId = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_dimensionid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.Job.Task.Attribute.dimensionId");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional float quantity = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_quantity(), target);
  }

  // repeated .IVR8.Window windows = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_windows_size()); i < n; i++) {
    const auto& repfield = this->_internal_windows().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated string vehicleIds = 4;
  for (int i = 0, n = this->_internal_vehicleids_size(); i < n; ++i) {
    const auto& s = this->_internal_vehicleids().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.Job.Task.Attribute.vehicleIds");
    target = stream->WriteString(4, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVR8.Job.Task.Attribute)
  return target;
}

::size_t Job_Task_Attribute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IVR8.Job.Task.Attribute)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .IVR8.Window windows = 3;
  total_size += 1UL * this->_internal_windows_size();
  for (const auto& msg : this->_internal_windows()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated string vehicleIds = 4;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_vehicleids().size());
  for (int i = 0, n = _internal_vehicleids().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_vehicleids().Get(i));
  }
  // required string dimensionId = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_dimensionid());
  }

  // optional float quantity = 2;
  if (cached_has_bits & 0x00000002u) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Job_Task_Attribute::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Job_Task_Attribute::MergeImpl
};
const ::google::protobuf::Message::ClassData*Job_Task_Attribute::GetClassData() const { return &_class_data_; }


void Job_Task_Attribute::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Job_Task_Attribute*>(&to_msg);
  auto& from = static_cast<const Job_Task_Attribute&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVR8.Job.Task.Attribute)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_windows()->MergeFrom(from._internal_windows());
  _this->_internal_mutable_vehicleids()->MergeFrom(from._internal_vehicleids());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_dimensionid(from._internal_dimensionid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.quantity_ = from._impl_.quantity_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Job_Task_Attribute::CopyFrom(const Job_Task_Attribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVR8.Job.Task.Attribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Job_Task_Attribute::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(_internal_windows()))
    return false;
  return true;
}

void Job_Task_Attribute::InternalSwap(Job_Task_Attribute* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.windows_.InternalSwap(&other->_impl_.windows_);
  _impl_.vehicleids_.InternalSwap(&other->_impl_.vehicleids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dimensionid_, lhs_arena,
                                       &other->_impl_.dimensionid_, rhs_arena);
        swap(_impl_.quantity_, other->_impl_.quantity_);
}

::google::protobuf::Metadata Job_Task_Attribute::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter, &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
      file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[9]);
}
// ===================================================================

class Job_Task_TaskRelation::_Internal {
 public:
  using HasBits = decltype(std::declval<Job_Task_TaskRelation>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Job_Task_TaskRelation, _impl_._has_bits_);
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

Job_Task_TaskRelation::Job_Task_TaskRelation(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVR8.Job.Task.TaskRelation)
}
Job_Task_TaskRelation::Job_Task_TaskRelation(const Job_Task_TaskRelation& from) : ::google::protobuf::Message() {
  Job_Task_TaskRelation* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.taskids_){from._impl_.taskids_},
      decltype(_impl_.type_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _this->_impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:IVR8.Job.Task.TaskRelation)
}
inline void Job_Task_TaskRelation::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.taskids_){arena},
      decltype(_impl_.type_){0},
  };
}
Job_Task_TaskRelation::~Job_Task_TaskRelation() {
  // @@protoc_insertion_point(destructor:IVR8.Job.Task.TaskRelation)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Job_Task_TaskRelation::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_taskids()->~RepeatedPtrField();
}
void Job_Task_TaskRelation::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Job_Task_TaskRelation::Clear() {
// @@protoc_insertion_point(message_clear_start:IVR8.Job.Task.TaskRelation)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_taskids()->Clear();
  _impl_.type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Job_Task_TaskRelation::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 42, 2> Job_Task_TaskRelation::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Job_Task_TaskRelation, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Job_Task_TaskRelation_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string taskIds = 2;
    {::_pbi::TcParser::FastSR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Job_Task_TaskRelation, _impl_.taskids_)}},
    // required .IVR8.Job.Task.TaskRelation.Type type = 1;
    {::_pbi::TcParser::FastEr0S1,
     {8, 0, 1, PROTOBUF_FIELD_OFFSET(Job_Task_TaskRelation, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required .IVR8.Job.Task.TaskRelation.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(Job_Task_TaskRelation, _impl_.type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // repeated string taskIds = 2;
    {PROTOBUF_FIELD_OFFSET(Job_Task_TaskRelation, _impl_.taskids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }}, {{
    {0, 2},
  }}, {{
    "\32\0\7\0\0\0\0\0"
    "IVR8.Job.Task.TaskRelation"
    "taskIds"
  }},
};

::uint8_t* Job_Task_TaskRelation::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IVR8.Job.Task.TaskRelation)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .IVR8.Job.Task.TaskRelation.Type type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  // repeated string taskIds = 2;
  for (int i = 0, n = this->_internal_taskids_size(); i < n; ++i) {
    const auto& s = this->_internal_taskids().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.Job.Task.TaskRelation.taskIds");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVR8.Job.Task.TaskRelation)
  return target;
}

::size_t Job_Task_TaskRelation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IVR8.Job.Task.TaskRelation)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string taskIds = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_taskids().size());
  for (int i = 0, n = _internal_taskids().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_taskids().Get(i));
  }
  // required .IVR8.Job.Task.TaskRelation.Type type = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Job_Task_TaskRelation::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Job_Task_TaskRelation::MergeImpl
};
const ::google::protobuf::Message::ClassData*Job_Task_TaskRelation::GetClassData() const { return &_class_data_; }


void Job_Task_TaskRelation::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Job_Task_TaskRelation*>(&to_msg);
  auto& from = static_cast<const Job_Task_TaskRelation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVR8.Job.Task.TaskRelation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_taskids()->MergeFrom(from._internal_taskids());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Job_Task_TaskRelation::CopyFrom(const Job_Task_TaskRelation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVR8.Job.Task.TaskRelation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Job_Task_TaskRelation::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

void Job_Task_TaskRelation::InternalSwap(Job_Task_TaskRelation* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.taskids_.InternalSwap(&other->_impl_.taskids_);
  swap(_impl_.type_, other->_impl_.type_);
}

::google::protobuf::Metadata Job_Task_TaskRelation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter, &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
      file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[10]);
}
// ===================================================================

class Job_Task::_Internal {
 public:
  using HasBits = decltype(std::declval<Job_Task>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Job_Task, _impl_._has_bits_);
  static void set_has_taskid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_locationid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::IVR8::Job_Task_TaskRelation& predecessors(const Job_Task* msg);
  static void set_has_predecessors(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::IVR8::Job_Task_TaskRelation& successors(const Job_Task* msg);
  static void set_has_successors(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

const ::IVR8::Job_Task_TaskRelation& Job_Task::_Internal::predecessors(const Job_Task* msg) {
  return *msg->_impl_.predecessors_;
}
const ::IVR8::Job_Task_TaskRelation& Job_Task::_Internal::successors(const Job_Task* msg) {
  return *msg->_impl_.successors_;
}
Job_Task::Job_Task(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVR8.Job.Task)
}
Job_Task::Job_Task(const Job_Task& from) : ::google::protobuf::Message() {
  Job_Task* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.attributes_){from._impl_.attributes_},
      decltype(_impl_.tripconstraints_){from._internal_tripconstraints()},
      decltype(_impl_.taskid_){},
      decltype(_impl_.locationid_){},
      decltype(_impl_.predecessors_){nullptr},
      decltype(_impl_.successors_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.taskid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.taskid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.taskid_.Set(from._internal_taskid(), _this->GetArenaForAllocation());
  }
  _impl_.locationid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.locationid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.locationid_.Set(from._internal_locationid(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.predecessors_ = new ::IVR8::Job_Task_TaskRelation(*from._impl_.predecessors_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000008u) != 0) {
    _this->_impl_.successors_ = new ::IVR8::Job_Task_TaskRelation(*from._impl_.successors_);
  }

  // @@protoc_insertion_point(copy_constructor:IVR8.Job.Task)
}
inline void Job_Task::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.attributes_){arena},
      decltype(_impl_.tripconstraints_){arena},
      decltype(_impl_.taskid_){},
      decltype(_impl_.locationid_){},
      decltype(_impl_.predecessors_){nullptr},
      decltype(_impl_.successors_){nullptr},
  };
  _impl_.taskid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.taskid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.locationid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.locationid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
Job_Task::~Job_Task() {
  // @@protoc_insertion_point(destructor:IVR8.Job.Task)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Job_Task::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.attributes_.~RepeatedPtrField();
  _internal_mutable_tripconstraints()->~RepeatedField();
  _impl_.taskid_.Destroy();
  _impl_.locationid_.Destroy();
  if (this != internal_default_instance()) delete _impl_.predecessors_;
  if (this != internal_default_instance()) delete _impl_.successors_;
}
void Job_Task::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Job_Task::Clear() {
// @@protoc_insertion_point(message_clear_start:IVR8.Job.Task)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_attributes()->Clear();
  _internal_mutable_tripconstraints()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.taskid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.locationid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.predecessors_ != nullptr);
      _impl_.predecessors_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.successors_ != nullptr);
      _impl_.successors_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Job_Task::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 4, 38, 2> Job_Task::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Job_Task, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Job_Task_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string taskId = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Job_Task, _impl_.taskid_)}},
    // required string locationId = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Job_Task, _impl_.locationid_)}},
    // repeated .IVR8.Job.Task.Attribute attributes = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Job_Task, _impl_.attributes_)}},
    // repeated .IVR8.Job.Task.TripConstraint tripConstraints = 4;
    {::_pbi::TcParser::FastEr0R1,
     {32, 63, 1, PROTOBUF_FIELD_OFFSET(Job_Task, _impl_.tripconstraints_)}},
    // optional .IVR8.Job.Task.TaskRelation predecessors = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 2, 2, PROTOBUF_FIELD_OFFSET(Job_Task, _impl_.predecessors_)}},
    // optional .IVR8.Job.Task.TaskRelation successors = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 3, 3, PROTOBUF_FIELD_OFFSET(Job_Task, _impl_.successors_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required string taskId = 1;
    {PROTOBUF_FIELD_OFFSET(Job_Task, _impl_.taskid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string locationId = 2;
    {PROTOBUF_FIELD_OFFSET(Job_Task, _impl_.locationid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated .IVR8.Job.Task.Attribute attributes = 3;
    {PROTOBUF_FIELD_OFFSET(Job_Task, _impl_.attributes_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .IVR8.Job.Task.TripConstraint tripConstraints = 4;
    {PROTOBUF_FIELD_OFFSET(Job_Task, _impl_.tripconstraints_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kEnumRange)},
    // optional .IVR8.Job.Task.TaskRelation predecessors = 5;
    {PROTOBUF_FIELD_OFFSET(Job_Task, _impl_.predecessors_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .IVR8.Job.Task.TaskRelation successors = 6;
    {PROTOBUF_FIELD_OFFSET(Job_Task, _impl_.successors_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::IVR8::Job_Task_Attribute>()},
    {0, 2},
    {::_pbi::TcParser::GetTable<::IVR8::Job_Task_TaskRelation>()},
    {::_pbi::TcParser::GetTable<::IVR8::Job_Task_TaskRelation>()},
  }}, {{
    "\15\6\12\0\0\0\0\0"
    "IVR8.Job.Task"
    "taskId"
    "locationId"
  }},
};

::uint8_t* Job_Task::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IVR8.Job.Task)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string taskId = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_taskid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.Job.Task.taskId");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required string locationId = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_locationid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.Job.Task.locationId");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // repeated .IVR8.Job.Task.Attribute attributes = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_attributes_size()); i < n; i++) {
    const auto& repfield = this->_internal_attributes().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .IVR8.Job.Task.TripConstraint tripConstraints = 4;
  for (int i = 0, n = this->_internal_tripconstraints_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, static_cast<::IVR8::Job_Task_TripConstraint>(this->_internal_tripconstraints().Get(i)),
        target);
  }

  // optional .IVR8.Job.Task.TaskRelation predecessors = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::predecessors(this),
        _Internal::predecessors(this).GetCachedSize(), target, stream);
  }

  // optional .IVR8.Job.Task.TaskRelation successors = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::successors(this),
        _Internal::successors(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVR8.Job.Task)
  return target;
}

::size_t Job_Task::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IVR8.Job.Task)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .IVR8.Job.Task.Attribute attributes = 3;
  total_size += 1UL * this->_internal_attributes_size();
  for (const auto& msg : this->_internal_attributes()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .IVR8.Job.Task.TripConstraint tripConstraints = 4;
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_tripconstraints_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_tripconstraints().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    total_size += std::size_t{1} * count;
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required string taskId = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_taskid());
    }

    // required string locationId = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_locationid());
    }

  }
  if (cached_has_bits & 0x0000000cu) {
    // optional .IVR8.Job.Task.TaskRelation predecessors = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.predecessors_);
    }

    // optional .IVR8.Job.Task.TaskRelation successors = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.successors_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Job_Task::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Job_Task::MergeImpl
};
const ::google::protobuf::Message::ClassData*Job_Task::GetClassData() const { return &_class_data_; }


void Job_Task::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Job_Task*>(&to_msg);
  auto& from = static_cast<const Job_Task&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVR8.Job.Task)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_attributes()->MergeFrom(from._internal_attributes());
  _this->_internal_mutable_tripconstraints()->MergeFrom(from._internal_tripconstraints());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_taskid(from._internal_taskid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_locationid(from._internal_locationid());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_predecessors()->::IVR8::Job_Task_TaskRelation::MergeFrom(
          from._internal_predecessors());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_successors()->::IVR8::Job_Task_TaskRelation::MergeFrom(
          from._internal_successors());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Job_Task::CopyFrom(const Job_Task& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVR8.Job.Task)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Job_Task::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(_internal_attributes()))
    return false;
  if ((_impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!_impl_.predecessors_->IsInitialized()) return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (!_impl_.successors_->IsInitialized()) return false;
  }
  return true;
}

void Job_Task::InternalSwap(Job_Task* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.attributes_.InternalSwap(&other->_impl_.attributes_);
  _impl_.tripconstraints_.InternalSwap(&other->_impl_.tripconstraints_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.taskid_, lhs_arena,
                                       &other->_impl_.taskid_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.locationid_, lhs_arena,
                                       &other->_impl_.locationid_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Job_Task, _impl_.successors_)
      + sizeof(Job_Task::_impl_.successors_)
      - PROTOBUF_FIELD_OFFSET(Job_Task, _impl_.predecessors_)>(
          reinterpret_cast<char*>(&_impl_.predecessors_),
          reinterpret_cast<char*>(&other->_impl_.predecessors_));
}

::google::protobuf::Metadata Job_Task::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter, &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
      file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[11]);
}
// ===================================================================

class Job::_Internal {
 public:
  using HasBits = decltype(std::declval<Job>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Job, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::IVR8::Job_Task& pickuptask(const Job* msg);
  static void set_has_pickuptask(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::IVR8::Job_Task& dropofftask(const Job* msg);
  static void set_has_dropofftask(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_penalty(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::IVR8::Job_VehicleRelation& vehiclerelations(const Job* msg);
  static void set_has_vehiclerelations(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::IVR8::Job_CompartmentRelation& compartmentrelations(const Job* msg);
  static void set_has_compartmentrelations(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000021) ^ 0x00000021) != 0;
  }
};

const ::IVR8::Job_Task& Job::_Internal::pickuptask(const Job* msg) {
  return *msg->_impl_.pickuptask_;
}
const ::IVR8::Job_Task& Job::_Internal::dropofftask(const Job* msg) {
  return *msg->_impl_.dropofftask_;
}
const ::IVR8::Job_VehicleRelation& Job::_Internal::vehiclerelations(const Job* msg) {
  return *msg->_impl_.vehiclerelations_;
}
const ::IVR8::Job_CompartmentRelation& Job::_Internal::compartmentrelations(const Job* msg) {
  return *msg->_impl_.compartmentrelations_;
}
Job::Job(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVR8.Job)
}
Job::Job(const Job& from) : ::google::protobuf::Message() {
  Job* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.id_){},
      decltype(_impl_.pickuptask_){nullptr},
      decltype(_impl_.dropofftask_){nullptr},
      decltype(_impl_.vehiclerelations_){nullptr},
      decltype(_impl_.compartmentrelations_){nullptr},
      decltype(_impl_.penalty_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.id_.Set(from._internal_id(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.pickuptask_ = new ::IVR8::Job_Task(*from._impl_.pickuptask_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.dropofftask_ = new ::IVR8::Job_Task(*from._impl_.dropofftask_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000008u) != 0) {
    _this->_impl_.vehiclerelations_ = new ::IVR8::Job_VehicleRelation(*from._impl_.vehiclerelations_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000010u) != 0) {
    _this->_impl_.compartmentrelations_ = new ::IVR8::Job_CompartmentRelation(*from._impl_.compartmentrelations_);
  }
  _this->_impl_.penalty_ = from._impl_.penalty_;

  // @@protoc_insertion_point(copy_constructor:IVR8.Job)
}
inline void Job::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.id_){},
      decltype(_impl_.pickuptask_){nullptr},
      decltype(_impl_.dropofftask_){nullptr},
      decltype(_impl_.vehiclerelations_){nullptr},
      decltype(_impl_.compartmentrelations_){nullptr},
      decltype(_impl_.penalty_){0},
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
Job::~Job() {
  // @@protoc_insertion_point(destructor:IVR8.Job)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Job::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.pickuptask_;
  if (this != internal_default_instance()) delete _impl_.dropofftask_;
  if (this != internal_default_instance()) delete _impl_.vehiclerelations_;
  if (this != internal_default_instance()) delete _impl_.compartmentrelations_;
}
void Job::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Job::Clear() {
// @@protoc_insertion_point(message_clear_start:IVR8.Job)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.pickuptask_ != nullptr);
      _impl_.pickuptask_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.dropofftask_ != nullptr);
      _impl_.dropofftask_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.vehiclerelations_ != nullptr);
      _impl_.vehiclerelations_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.compartmentrelations_ != nullptr);
      _impl_.compartmentrelations_->Clear();
    }
  }
  _impl_.penalty_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Job::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 4, 19, 2> Job::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Job, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Job_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Job, _impl_.id_)}},
    // optional .IVR8.Job.Task pickupTask = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Job, _impl_.pickuptask_)}},
    // optional .IVR8.Job.Task dropoffTask = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 1, PROTOBUF_FIELD_OFFSET(Job, _impl_.dropofftask_)}},
    // required float penalty = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 5, 0, PROTOBUF_FIELD_OFFSET(Job, _impl_.penalty_)}},
    // optional .IVR8.Job.VehicleRelation vehicleRelations = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 3, 2, PROTOBUF_FIELD_OFFSET(Job, _impl_.vehiclerelations_)}},
    // optional .IVR8.Job.CompartmentRelation compartmentRelations = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 4, 3, PROTOBUF_FIELD_OFFSET(Job, _impl_.compartmentrelations_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(Job, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .IVR8.Job.Task pickupTask = 2;
    {PROTOBUF_FIELD_OFFSET(Job, _impl_.pickuptask_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .IVR8.Job.Task dropoffTask = 3;
    {PROTOBUF_FIELD_OFFSET(Job, _impl_.dropofftask_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required float penalty = 4;
    {PROTOBUF_FIELD_OFFSET(Job, _impl_.penalty_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional .IVR8.Job.VehicleRelation vehicleRelations = 5;
    {PROTOBUF_FIELD_OFFSET(Job, _impl_.vehiclerelations_), _Internal::kHasBitsOffset + 3, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .IVR8.Job.CompartmentRelation compartmentRelations = 6;
    {PROTOBUF_FIELD_OFFSET(Job, _impl_.compartmentrelations_), _Internal::kHasBitsOffset + 4, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::IVR8::Job_Task>()},
    {::_pbi::TcParser::GetTable<::IVR8::Job_Task>()},
    {::_pbi::TcParser::GetTable<::IVR8::Job_VehicleRelation>()},
    {::_pbi::TcParser::GetTable<::IVR8::Job_CompartmentRelation>()},
  }}, {{
    "\10\2\0\0\0\0\0\0"
    "IVR8.Job"
    "id"
  }},
};

::uint8_t* Job::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IVR8.Job)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.Job.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional .IVR8.Job.Task pickupTask = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::pickuptask(this),
        _Internal::pickuptask(this).GetCachedSize(), target, stream);
  }

  // optional .IVR8.Job.Task dropoffTask = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::dropofftask(this),
        _Internal::dropofftask(this).GetCachedSize(), target, stream);
  }

  // required float penalty = 4;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_penalty(), target);
  }

  // optional .IVR8.Job.VehicleRelation vehicleRelations = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::vehiclerelations(this),
        _Internal::vehiclerelations(this).GetCachedSize(), target, stream);
  }

  // optional .IVR8.Job.CompartmentRelation compartmentRelations = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::compartmentrelations(this),
        _Internal::compartmentrelations(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVR8.Job)
  return target;
}

::size_t Job::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IVR8.Job)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  if (cached_has_bits & 0x0000001eu) {
    // optional .IVR8.Job.Task pickupTask = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.pickuptask_);
    }

    // optional .IVR8.Job.Task dropoffTask = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.dropofftask_);
    }

    // optional .IVR8.Job.VehicleRelation vehicleRelations = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.vehiclerelations_);
    }

    // optional .IVR8.Job.CompartmentRelation compartmentRelations = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.compartmentrelations_);
    }

  }
  // required float penalty = 4;
  if (cached_has_bits & 0x00000020u) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Job::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Job::MergeImpl
};
const ::google::protobuf::Message::ClassData*Job::GetClassData() const { return &_class_data_; }


void Job::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Job*>(&to_msg);
  auto& from = static_cast<const Job&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVR8.Job)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_pickuptask()->::IVR8::Job_Task::MergeFrom(
          from._internal_pickuptask());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_dropofftask()->::IVR8::Job_Task::MergeFrom(
          from._internal_dropofftask());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_vehiclerelations()->::IVR8::Job_VehicleRelation::MergeFrom(
          from._internal_vehiclerelations());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_compartmentrelations()->::IVR8::Job_CompartmentRelation::MergeFrom(
          from._internal_compartmentrelations());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.penalty_ = from._impl_.penalty_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Job::CopyFrom(const Job& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVR8.Job)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Job::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!_impl_.pickuptask_->IsInitialized()) return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!_impl_.dropofftask_->IsInitialized()) return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (!_impl_.vehiclerelations_->IsInitialized()) return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (!_impl_.compartmentrelations_->IsInitialized()) return false;
  }
  return true;
}

void Job::InternalSwap(Job* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, lhs_arena,
                                       &other->_impl_.id_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Job, _impl_.penalty_)
      + sizeof(Job::_impl_.penalty_)
      - PROTOBUF_FIELD_OFFSET(Job, _impl_.pickuptask_)>(
          reinterpret_cast<char*>(&_impl_.pickuptask_),
          reinterpret_cast<char*>(&other->_impl_.pickuptask_));
}

::google::protobuf::Metadata Job::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter, &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
      file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[12]);
}
// ===================================================================

class TransitSet_TransitValue::_Internal {
 public:
  using HasBits = decltype(std::declval<TransitSet_TransitValue>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TransitSet_TransitValue, _impl_._has_bits_);
  static void set_has_fromid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_toid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000007) ^ 0x00000007) != 0;
  }
};

TransitSet_TransitValue::TransitSet_TransitValue(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVR8.TransitSet.TransitValue)
}
TransitSet_TransitValue::TransitSet_TransitValue(const TransitSet_TransitValue& from) : ::google::protobuf::Message() {
  TransitSet_TransitValue* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.fromid_){},
      decltype(_impl_.toid_){},
      decltype(_impl_.value_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.fromid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.fromid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.fromid_.Set(from._internal_fromid(), _this->GetArenaForAllocation());
  }
  _impl_.toid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.toid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.toid_.Set(from._internal_toid(), _this->GetArenaForAllocation());
  }
  _this->_impl_.value_ = from._impl_.value_;

  // @@protoc_insertion_point(copy_constructor:IVR8.TransitSet.TransitValue)
}
inline void TransitSet_TransitValue::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.fromid_){},
      decltype(_impl_.toid_){},
      decltype(_impl_.value_){0},
  };
  _impl_.fromid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.fromid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.toid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.toid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
TransitSet_TransitValue::~TransitSet_TransitValue() {
  // @@protoc_insertion_point(destructor:IVR8.TransitSet.TransitValue)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TransitSet_TransitValue::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.fromid_.Destroy();
  _impl_.toid_.Destroy();
}
void TransitSet_TransitValue::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TransitSet_TransitValue::Clear() {
// @@protoc_insertion_point(message_clear_start:IVR8.TransitSet.TransitValue)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.fromid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.toid_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.value_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TransitSet_TransitValue::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 47, 2> TransitSet_TransitValue::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TransitSet_TransitValue, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TransitSet_TransitValue_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string fromId = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TransitSet_TransitValue, _impl_.fromid_)}},
    // required string toId = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(TransitSet_TransitValue, _impl_.toid_)}},
    // required float value = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(TransitSet_TransitValue, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string fromId = 1;
    {PROTOBUF_FIELD_OFFSET(TransitSet_TransitValue, _impl_.fromid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string toId = 2;
    {PROTOBUF_FIELD_OFFSET(TransitSet_TransitValue, _impl_.toid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required float value = 3;
    {PROTOBUF_FIELD_OFFSET(TransitSet_TransitValue, _impl_.value_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
    "\34\6\4\0\0\0\0\0"
    "IVR8.TransitSet.TransitValue"
    "fromId"
    "toId"
  }},
};

::uint8_t* TransitSet_TransitValue::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IVR8.TransitSet.TransitValue)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string fromId = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_fromid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.TransitSet.TransitValue.fromId");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required string toId = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_toid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.TransitSet.TransitValue.toId");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // required float value = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVR8.TransitSet.TransitValue)
  return target;
}

::size_t TransitSet_TransitValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IVR8.TransitSet.TransitValue)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // required string fromId = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_fromid());
    }

    // required string toId = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_toid());
    }

    // required float value = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 5;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TransitSet_TransitValue::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TransitSet_TransitValue::MergeImpl
};
const ::google::protobuf::Message::ClassData*TransitSet_TransitValue::GetClassData() const { return &_class_data_; }


void TransitSet_TransitValue::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TransitSet_TransitValue*>(&to_msg);
  auto& from = static_cast<const TransitSet_TransitValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVR8.TransitSet.TransitValue)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_fromid(from._internal_fromid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_toid(from._internal_toid());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.value_ = from._impl_.value_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TransitSet_TransitValue::CopyFrom(const TransitSet_TransitValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVR8.TransitSet.TransitValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TransitSet_TransitValue::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

void TransitSet_TransitValue::InternalSwap(TransitSet_TransitValue* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.fromid_, lhs_arena,
                                       &other->_impl_.fromid_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.toid_, lhs_arena,
                                       &other->_impl_.toid_, rhs_arena);
        swap(_impl_.value_, other->_impl_.value_);
}

::google::protobuf::Metadata TransitSet_TransitValue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter, &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
      file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[13]);
}
// ===================================================================

class TransitSet::_Internal {
 public:
};

TransitSet::TransitSet(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVR8.TransitSet)
}
TransitSet::TransitSet(const TransitSet& from) : ::google::protobuf::Message() {
  TransitSet* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.transits_){from._impl_.transits_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:IVR8.TransitSet)
}
inline void TransitSet::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.transits_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
TransitSet::~TransitSet() {
  // @@protoc_insertion_point(destructor:IVR8.TransitSet)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TransitSet::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.transits_.~RepeatedPtrField();
}
void TransitSet::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TransitSet::Clear() {
// @@protoc_insertion_point(message_clear_start:IVR8.TransitSet)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_transits()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TransitSet::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> TransitSet::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TransitSet_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .IVR8.TransitSet.TransitValue transits = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TransitSet, _impl_.transits_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .IVR8.TransitSet.TransitValue transits = 1;
    {PROTOBUF_FIELD_OFFSET(TransitSet, _impl_.transits_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::IVR8::TransitSet_TransitValue>()},
  }}, {{
  }},
};

::uint8_t* TransitSet::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IVR8.TransitSet)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .IVR8.TransitSet.TransitValue transits = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_transits_size()); i < n; i++) {
    const auto& repfield = this->_internal_transits().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVR8.TransitSet)
  return target;
}

::size_t TransitSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IVR8.TransitSet)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .IVR8.TransitSet.TransitValue transits = 1;
  total_size += 1UL * this->_internal_transits_size();
  for (const auto& msg : this->_internal_transits()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TransitSet::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TransitSet::MergeImpl
};
const ::google::protobuf::Message::ClassData*TransitSet::GetClassData() const { return &_class_data_; }


void TransitSet::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TransitSet*>(&to_msg);
  auto& from = static_cast<const TransitSet&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVR8.TransitSet)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_transits()->MergeFrom(from._internal_transits());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TransitSet::CopyFrom(const TransitSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVR8.TransitSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TransitSet::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(_internal_transits()))
    return false;
  return true;
}

void TransitSet::InternalSwap(TransitSet* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.transits_.InternalSwap(&other->_impl_.transits_);
}

::google::protobuf::Metadata TransitSet::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter, &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
      file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[14]);
}
// ===================================================================

class TransitGenerator::_Internal {
 public:
  using HasBits = decltype(std::declval<TransitGenerator>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TransitGenerator, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_requestid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::IVR8::TransitSet& transitset(const TransitGenerator* msg);
  static void set_has_transitset(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::IVR8::TransitSet& TransitGenerator::_Internal::transitset(const TransitGenerator* msg) {
  return *msg->_impl_.transitset_;
}
TransitGenerator::TransitGenerator(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVR8.TransitGenerator)
}
TransitGenerator::TransitGenerator(const TransitGenerator& from) : ::google::protobuf::Message() {
  TransitGenerator* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.id_){},
      decltype(_impl_.requestid_){},
      decltype(_impl_.transitset_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.id_.Set(from._internal_id(), _this->GetArenaForAllocation());
  }
  _impl_.requestid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.requestid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.requestid_.Set(from._internal_requestid(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.transitset_ = new ::IVR8::TransitSet(*from._impl_.transitset_);
  }

  // @@protoc_insertion_point(copy_constructor:IVR8.TransitGenerator)
}
inline void TransitGenerator::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.id_){},
      decltype(_impl_.requestid_){},
      decltype(_impl_.transitset_){nullptr},
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.requestid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.requestid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
TransitGenerator::~TransitGenerator() {
  // @@protoc_insertion_point(destructor:IVR8.TransitGenerator)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TransitGenerator::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
  _impl_.requestid_.Destroy();
  if (this != internal_default_instance()) delete _impl_.transitset_;
}
void TransitGenerator::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TransitGenerator::Clear() {
// @@protoc_insertion_point(message_clear_start:IVR8.TransitGenerator)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.requestid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.transitset_ != nullptr);
      _impl_.transitset_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TransitGenerator::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 41, 2> TransitGenerator::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TransitGenerator, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TransitGenerator_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TransitGenerator, _impl_.id_)}},
    // optional string requestId = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(TransitGenerator, _impl_.requestid_)}},
    // optional .IVR8.TransitSet transitSet = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(TransitGenerator, _impl_.transitset_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(TransitGenerator, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string requestId = 2;
    {PROTOBUF_FIELD_OFFSET(TransitGenerator, _impl_.requestid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .IVR8.TransitSet transitSet = 3;
    {PROTOBUF_FIELD_OFFSET(TransitGenerator, _impl_.transitset_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::IVR8::TransitSet>()},
  }}, {{
    "\25\2\11\0\0\0\0\0"
    "IVR8.TransitGenerator"
    "id"
    "requestId"
  }},
};

::uint8_t* TransitGenerator::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IVR8.TransitGenerator)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.TransitGenerator.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string requestId = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_requestid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.TransitGenerator.requestId");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional .IVR8.TransitSet transitSet = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::transitset(this),
        _Internal::transitset(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVR8.TransitGenerator)
  return target;
}

::size_t TransitGenerator::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IVR8.TransitGenerator)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  if (cached_has_bits & 0x00000006u) {
    // optional string requestId = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_requestid());
    }

    // optional .IVR8.TransitSet transitSet = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.transitset_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TransitGenerator::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TransitGenerator::MergeImpl
};
const ::google::protobuf::Message::ClassData*TransitGenerator::GetClassData() const { return &_class_data_; }


void TransitGenerator::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TransitGenerator*>(&to_msg);
  auto& from = static_cast<const TransitGenerator&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVR8.TransitGenerator)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_requestid(from._internal_requestid());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_transitset()->::IVR8::TransitSet::MergeFrom(
          from._internal_transitset());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TransitGenerator::CopyFrom(const TransitGenerator& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVR8.TransitGenerator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TransitGenerator::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!_impl_.transitset_->IsInitialized()) return false;
  }
  return true;
}

void TransitGenerator::InternalSwap(TransitGenerator* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, lhs_arena,
                                       &other->_impl_.id_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.requestid_, lhs_arena,
                                       &other->_impl_.requestid_, rhs_arena);
  swap(_impl_.transitset_, other->_impl_.transitset_);
}

::google::protobuf::Metadata TransitGenerator::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter, &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
      file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[15]);
}
// ===================================================================

class VehicleClass_Attribute::_Internal {
 public:
  using HasBits = decltype(std::declval<VehicleClass_Attribute>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VehicleClass_Attribute, _impl_._has_bits_);
  static void set_has_dimensionid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_transitgeneratorid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_transitcoef(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_taskcoef(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_locationcoef(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

VehicleClass_Attribute::VehicleClass_Attribute(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVR8.VehicleClass.Attribute)
}
VehicleClass_Attribute::VehicleClass_Attribute(const VehicleClass_Attribute& from) : ::google::protobuf::Message() {
  VehicleClass_Attribute* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.dimensionid_){},
      decltype(_impl_.transitgeneratorid_){},
      decltype(_impl_.transitcoef_){},
      decltype(_impl_.taskcoef_){},
      decltype(_impl_.locationcoef_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.dimensionid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dimensionid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.dimensionid_.Set(from._internal_dimensionid(), _this->GetArenaForAllocation());
  }
  _impl_.transitgeneratorid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.transitgeneratorid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.transitgeneratorid_.Set(from._internal_transitgeneratorid(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.transitcoef_, &from._impl_.transitcoef_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.locationcoef_) -
    reinterpret_cast<char*>(&_impl_.transitcoef_)) + sizeof(_impl_.locationcoef_));

  // @@protoc_insertion_point(copy_constructor:IVR8.VehicleClass.Attribute)
}
inline void VehicleClass_Attribute::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.dimensionid_){},
      decltype(_impl_.transitgeneratorid_){},
      decltype(_impl_.transitcoef_){0},
      decltype(_impl_.taskcoef_){0},
      decltype(_impl_.locationcoef_){0},
  };
  _impl_.dimensionid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dimensionid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.transitgeneratorid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.transitgeneratorid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
VehicleClass_Attribute::~VehicleClass_Attribute() {
  // @@protoc_insertion_point(destructor:IVR8.VehicleClass.Attribute)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VehicleClass_Attribute::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.dimensionid_.Destroy();
  _impl_.transitgeneratorid_.Destroy();
}
void VehicleClass_Attribute::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void VehicleClass_Attribute::Clear() {
// @@protoc_insertion_point(message_clear_start:IVR8.VehicleClass.Attribute)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.dimensionid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.transitgeneratorid_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&_impl_.transitcoef_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.locationcoef_) -
        reinterpret_cast<char*>(&_impl_.transitcoef_)) + sizeof(_impl_.locationcoef_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VehicleClass_Attribute::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 65, 2> VehicleClass_Attribute::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VehicleClass_Attribute, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_VehicleClass_Attribute_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string dimensionId = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(VehicleClass_Attribute, _impl_.dimensionid_)}},
    // optional string transitGeneratorId = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(VehicleClass_Attribute, _impl_.transitgeneratorid_)}},
    // optional float transitCoef = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(VehicleClass_Attribute, _impl_.transitcoef_)}},
    // optional float taskCoef = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 3, 0, PROTOBUF_FIELD_OFFSET(VehicleClass_Attribute, _impl_.taskcoef_)}},
    // optional float locationCoef = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 4, 0, PROTOBUF_FIELD_OFFSET(VehicleClass_Attribute, _impl_.locationcoef_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required string dimensionId = 1;
    {PROTOBUF_FIELD_OFFSET(VehicleClass_Attribute, _impl_.dimensionid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string transitGeneratorId = 2;
    {PROTOBUF_FIELD_OFFSET(VehicleClass_Attribute, _impl_.transitgeneratorid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional float transitCoef = 3;
    {PROTOBUF_FIELD_OFFSET(VehicleClass_Attribute, _impl_.transitcoef_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float taskCoef = 4;
    {PROTOBUF_FIELD_OFFSET(VehicleClass_Attribute, _impl_.taskcoef_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float locationCoef = 5;
    {PROTOBUF_FIELD_OFFSET(VehicleClass_Attribute, _impl_.locationcoef_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
    "\33\13\22\0\0\0\0\0"
    "IVR8.VehicleClass.Attribute"
    "dimensionId"
    "transitGeneratorId"
  }},
};

::uint8_t* VehicleClass_Attribute::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IVR8.VehicleClass.Attribute)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string dimensionId = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_dimensionid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.VehicleClass.Attribute.dimensionId");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string transitGeneratorId = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_transitgeneratorid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.VehicleClass.Attribute.transitGeneratorId");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional float transitCoef = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_transitcoef(), target);
  }

  // optional float taskCoef = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_taskcoef(), target);
  }

  // optional float locationCoef = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this->_internal_locationcoef(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVR8.VehicleClass.Attribute)
  return target;
}

::size_t VehicleClass_Attribute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IVR8.VehicleClass.Attribute)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string dimensionId = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_dimensionid());
  }

  if (cached_has_bits & 0x0000001eu) {
    // optional string transitGeneratorId = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_transitgeneratorid());
    }

    // optional float transitCoef = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 5;
    }

    // optional float taskCoef = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 5;
    }

    // optional float locationCoef = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 5;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VehicleClass_Attribute::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    VehicleClass_Attribute::MergeImpl
};
const ::google::protobuf::Message::ClassData*VehicleClass_Attribute::GetClassData() const { return &_class_data_; }


void VehicleClass_Attribute::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VehicleClass_Attribute*>(&to_msg);
  auto& from = static_cast<const VehicleClass_Attribute&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVR8.VehicleClass.Attribute)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_dimensionid(from._internal_dimensionid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_transitgeneratorid(from._internal_transitgeneratorid());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.transitcoef_ = from._impl_.transitcoef_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.taskcoef_ = from._impl_.taskcoef_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.locationcoef_ = from._impl_.locationcoef_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VehicleClass_Attribute::CopyFrom(const VehicleClass_Attribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVR8.VehicleClass.Attribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VehicleClass_Attribute::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

void VehicleClass_Attribute::InternalSwap(VehicleClass_Attribute* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dimensionid_, lhs_arena,
                                       &other->_impl_.dimensionid_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.transitgeneratorid_, lhs_arena,
                                       &other->_impl_.transitgeneratorid_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VehicleClass_Attribute, _impl_.locationcoef_)
      + sizeof(VehicleClass_Attribute::_impl_.locationcoef_)
      - PROTOBUF_FIELD_OFFSET(VehicleClass_Attribute, _impl_.transitcoef_)>(
          reinterpret_cast<char*>(&_impl_.transitcoef_),
          reinterpret_cast<char*>(&other->_impl_.transitcoef_));
}

::google::protobuf::Metadata VehicleClass_Attribute::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter, &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
      file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[16]);
}
// ===================================================================

class VehicleClass::_Internal {
 public:
  using HasBits = decltype(std::declval<VehicleClass>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VehicleClass, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_compartmentsetid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

VehicleClass::VehicleClass(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVR8.VehicleClass)
}
VehicleClass::VehicleClass(const VehicleClass& from) : ::google::protobuf::Message() {
  VehicleClass* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.attributes_){from._impl_.attributes_},
      decltype(_impl_.transitruleids_){from._impl_.transitruleids_},
      decltype(_impl_.id_){},
      decltype(_impl_.compartmentsetid_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.id_.Set(from._internal_id(), _this->GetArenaForAllocation());
  }
  _impl_.compartmentsetid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.compartmentsetid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.compartmentsetid_.Set(from._internal_compartmentsetid(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:IVR8.VehicleClass)
}
inline void VehicleClass::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.attributes_){arena},
      decltype(_impl_.transitruleids_){arena},
      decltype(_impl_.id_){},
      decltype(_impl_.compartmentsetid_){},
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.compartmentsetid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.compartmentsetid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
VehicleClass::~VehicleClass() {
  // @@protoc_insertion_point(destructor:IVR8.VehicleClass)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VehicleClass::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.attributes_.~RepeatedPtrField();
  _internal_mutable_transitruleids()->~RepeatedPtrField();
  _impl_.id_.Destroy();
  _impl_.compartmentsetid_.Destroy();
}
void VehicleClass::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void VehicleClass::Clear() {
// @@protoc_insertion_point(message_clear_start:IVR8.VehicleClass)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_attributes()->Clear();
  _internal_mutable_transitruleids()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.compartmentsetid_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VehicleClass::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 58, 2> VehicleClass::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VehicleClass, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VehicleClass_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string compartmentSetId = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(VehicleClass, _impl_.compartmentsetid_)}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(VehicleClass, _impl_.id_)}},
    // repeated .IVR8.VehicleClass.Attribute attributes = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(VehicleClass, _impl_.attributes_)}},
    // repeated string transitRuleIds = 3;
    {::_pbi::TcParser::FastSR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(VehicleClass, _impl_.transitruleids_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(VehicleClass, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated .IVR8.VehicleClass.Attribute attributes = 2;
    {PROTOBUF_FIELD_OFFSET(VehicleClass, _impl_.attributes_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string transitRuleIds = 3;
    {PROTOBUF_FIELD_OFFSET(VehicleClass, _impl_.transitruleids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // optional string compartmentSetId = 4;
    {PROTOBUF_FIELD_OFFSET(VehicleClass, _impl_.compartmentsetid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::IVR8::VehicleClass_Attribute>()},
  }}, {{
    "\21\2\0\16\20\0\0\0"
    "IVR8.VehicleClass"
    "id"
    "transitRuleIds"
    "compartmentSetId"
  }},
};

::uint8_t* VehicleClass::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IVR8.VehicleClass)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.VehicleClass.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .IVR8.VehicleClass.Attribute attributes = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_attributes_size()); i < n; i++) {
    const auto& repfield = this->_internal_attributes().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated string transitRuleIds = 3;
  for (int i = 0, n = this->_internal_transitruleids_size(); i < n; ++i) {
    const auto& s = this->_internal_transitruleids().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.VehicleClass.transitRuleIds");
    target = stream->WriteString(3, s, target);
  }

  // optional string compartmentSetId = 4;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_compartmentsetid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.VehicleClass.compartmentSetId");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVR8.VehicleClass)
  return target;
}

::size_t VehicleClass::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IVR8.VehicleClass)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .IVR8.VehicleClass.Attribute attributes = 2;
  total_size += 1UL * this->_internal_attributes_size();
  for (const auto& msg : this->_internal_attributes()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated string transitRuleIds = 3;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_transitruleids().size());
  for (int i = 0, n = _internal_transitruleids().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_transitruleids().Get(i));
  }
  // required string id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  // optional string compartmentSetId = 4;
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_compartmentsetid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VehicleClass::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    VehicleClass::MergeImpl
};
const ::google::protobuf::Message::ClassData*VehicleClass::GetClassData() const { return &_class_data_; }


void VehicleClass::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VehicleClass*>(&to_msg);
  auto& from = static_cast<const VehicleClass&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVR8.VehicleClass)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_attributes()->MergeFrom(from._internal_attributes());
  _this->_internal_mutable_transitruleids()->MergeFrom(from._internal_transitruleids());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_compartmentsetid(from._internal_compartmentsetid());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VehicleClass::CopyFrom(const VehicleClass& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVR8.VehicleClass)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VehicleClass::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(_internal_attributes()))
    return false;
  return true;
}

void VehicleClass::InternalSwap(VehicleClass* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.attributes_.InternalSwap(&other->_impl_.attributes_);
  _impl_.transitruleids_.InternalSwap(&other->_impl_.transitruleids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, lhs_arena,
                                       &other->_impl_.id_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.compartmentsetid_, lhs_arena,
                                       &other->_impl_.compartmentsetid_, rhs_arena);
}

::google::protobuf::Metadata VehicleClass::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter, &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
      file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[17]);
}
// ===================================================================

class VehicleCostClass_Attribute::_Internal {
 public:
  using HasBits = decltype(std::declval<VehicleCostClass_Attribute>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VehicleCostClass_Attribute, _impl_._has_bits_);
  static void set_has_dimensionid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_transitcostcoef(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_taskcostcoef(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_locationcostcoef(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_slackcostcoef(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_tardycostcoef(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

VehicleCostClass_Attribute::VehicleCostClass_Attribute(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVR8.VehicleCostClass.Attribute)
}
VehicleCostClass_Attribute::VehicleCostClass_Attribute(const VehicleCostClass_Attribute& from) : ::google::protobuf::Message() {
  VehicleCostClass_Attribute* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.dimensionid_){},
      decltype(_impl_.transitcostcoef_){},
      decltype(_impl_.taskcostcoef_){},
      decltype(_impl_.locationcostcoef_){},
      decltype(_impl_.slackcostcoef_){},
      decltype(_impl_.tardycostcoef_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.dimensionid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dimensionid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.dimensionid_.Set(from._internal_dimensionid(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.transitcostcoef_, &from._impl_.transitcostcoef_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.tardycostcoef_) -
    reinterpret_cast<char*>(&_impl_.transitcostcoef_)) + sizeof(_impl_.tardycostcoef_));

  // @@protoc_insertion_point(copy_constructor:IVR8.VehicleCostClass.Attribute)
}
inline void VehicleCostClass_Attribute::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.dimensionid_){},
      decltype(_impl_.transitcostcoef_){0},
      decltype(_impl_.taskcostcoef_){0},
      decltype(_impl_.locationcostcoef_){0},
      decltype(_impl_.slackcostcoef_){0},
      decltype(_impl_.tardycostcoef_){0},
  };
  _impl_.dimensionid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dimensionid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
VehicleCostClass_Attribute::~VehicleCostClass_Attribute() {
  // @@protoc_insertion_point(destructor:IVR8.VehicleCostClass.Attribute)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VehicleCostClass_Attribute::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.dimensionid_.Destroy();
}
void VehicleCostClass_Attribute::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void VehicleCostClass_Attribute::Clear() {
// @@protoc_insertion_point(message_clear_start:IVR8.VehicleCostClass.Attribute)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.dimensionid_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000003eu) {
    ::memset(&_impl_.transitcostcoef_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.tardycostcoef_) -
        reinterpret_cast<char*>(&_impl_.transitcostcoef_)) + sizeof(_impl_.tardycostcoef_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VehicleCostClass_Attribute::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 51, 2> VehicleCostClass_Attribute::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VehicleCostClass_Attribute, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_VehicleCostClass_Attribute_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string dimensionId = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(VehicleCostClass_Attribute, _impl_.dimensionid_)}},
    // optional float transitCostCoef = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(VehicleCostClass_Attribute, _impl_.transitcostcoef_)}},
    // optional float taskCostCoef = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(VehicleCostClass_Attribute, _impl_.taskcostcoef_)}},
    // optional float locationCostCoef = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 3, 0, PROTOBUF_FIELD_OFFSET(VehicleCostClass_Attribute, _impl_.locationcostcoef_)}},
    // optional float slackCostCoef = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 4, 0, PROTOBUF_FIELD_OFFSET(VehicleCostClass_Attribute, _impl_.slackcostcoef_)}},
    // optional float tardyCostCoef = 6;
    {::_pbi::TcParser::FastF32S1,
     {53, 5, 0, PROTOBUF_FIELD_OFFSET(VehicleCostClass_Attribute, _impl_.tardycostcoef_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required string dimensionId = 1;
    {PROTOBUF_FIELD_OFFSET(VehicleCostClass_Attribute, _impl_.dimensionid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional float transitCostCoef = 2;
    {PROTOBUF_FIELD_OFFSET(VehicleCostClass_Attribute, _impl_.transitcostcoef_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float taskCostCoef = 3;
    {PROTOBUF_FIELD_OFFSET(VehicleCostClass_Attribute, _impl_.taskcostcoef_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float locationCostCoef = 4;
    {PROTOBUF_FIELD_OFFSET(VehicleCostClass_Attribute, _impl_.locationcostcoef_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float slackCostCoef = 5;
    {PROTOBUF_FIELD_OFFSET(VehicleCostClass_Attribute, _impl_.slackcostcoef_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float tardyCostCoef = 6;
    {PROTOBUF_FIELD_OFFSET(VehicleCostClass_Attribute, _impl_.tardycostcoef_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
    "\37\13\0\0\0\0\0\0"
    "IVR8.VehicleCostClass.Attribute"
    "dimensionId"
  }},
};

::uint8_t* VehicleCostClass_Attribute::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IVR8.VehicleCostClass.Attribute)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string dimensionId = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_dimensionid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.VehicleCostClass.Attribute.dimensionId");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional float transitCostCoef = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_transitcostcoef(), target);
  }

  // optional float taskCostCoef = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_taskcostcoef(), target);
  }

  // optional float locationCostCoef = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_locationcostcoef(), target);
  }

  // optional float slackCostCoef = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this->_internal_slackcostcoef(), target);
  }

  // optional float tardyCostCoef = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        6, this->_internal_tardycostcoef(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVR8.VehicleCostClass.Attribute)
  return target;
}

::size_t VehicleCostClass_Attribute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IVR8.VehicleCostClass.Attribute)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string dimensionId = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_dimensionid());
  }

  if (cached_has_bits & 0x0000003eu) {
    // optional float transitCostCoef = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 5;
    }

    // optional float taskCostCoef = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 5;
    }

    // optional float locationCostCoef = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 5;
    }

    // optional float slackCostCoef = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 5;
    }

    // optional float tardyCostCoef = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 5;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VehicleCostClass_Attribute::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    VehicleCostClass_Attribute::MergeImpl
};
const ::google::protobuf::Message::ClassData*VehicleCostClass_Attribute::GetClassData() const { return &_class_data_; }


void VehicleCostClass_Attribute::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VehicleCostClass_Attribute*>(&to_msg);
  auto& from = static_cast<const VehicleCostClass_Attribute&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVR8.VehicleCostClass.Attribute)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_dimensionid(from._internal_dimensionid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.transitcostcoef_ = from._impl_.transitcostcoef_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.taskcostcoef_ = from._impl_.taskcostcoef_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.locationcostcoef_ = from._impl_.locationcostcoef_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.slackcostcoef_ = from._impl_.slackcostcoef_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.tardycostcoef_ = from._impl_.tardycostcoef_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VehicleCostClass_Attribute::CopyFrom(const VehicleCostClass_Attribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVR8.VehicleCostClass.Attribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VehicleCostClass_Attribute::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

void VehicleCostClass_Attribute::InternalSwap(VehicleCostClass_Attribute* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dimensionid_, lhs_arena,
                                       &other->_impl_.dimensionid_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VehicleCostClass_Attribute, _impl_.tardycostcoef_)
      + sizeof(VehicleCostClass_Attribute::_impl_.tardycostcoef_)
      - PROTOBUF_FIELD_OFFSET(VehicleCostClass_Attribute, _impl_.transitcostcoef_)>(
          reinterpret_cast<char*>(&_impl_.transitcostcoef_),
          reinterpret_cast<char*>(&other->_impl_.transitcostcoef_));
}

::google::protobuf::Metadata VehicleCostClass_Attribute::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter, &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
      file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[18]);
}
// ===================================================================

class VehicleCostClass::_Internal {
 public:
  using HasBits = decltype(std::declval<VehicleCostClass>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VehicleCostClass, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_fixedcost(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

VehicleCostClass::VehicleCostClass(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVR8.VehicleCostClass)
}
VehicleCostClass::VehicleCostClass(const VehicleCostClass& from) : ::google::protobuf::Message() {
  VehicleCostClass* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.attributes_){from._impl_.attributes_},
      decltype(_impl_.id_){},
      decltype(_impl_.fixedcost_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.id_.Set(from._internal_id(), _this->GetArenaForAllocation());
  }
  _this->_impl_.fixedcost_ = from._impl_.fixedcost_;

  // @@protoc_insertion_point(copy_constructor:IVR8.VehicleCostClass)
}
inline void VehicleCostClass::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.attributes_){arena},
      decltype(_impl_.id_){},
      decltype(_impl_.fixedcost_){0},
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
VehicleCostClass::~VehicleCostClass() {
  // @@protoc_insertion_point(destructor:IVR8.VehicleCostClass)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VehicleCostClass::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.attributes_.~RepeatedPtrField();
  _impl_.id_.Destroy();
}
void VehicleCostClass::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void VehicleCostClass::Clear() {
// @@protoc_insertion_point(message_clear_start:IVR8.VehicleCostClass)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_attributes()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.id_.ClearNonDefaultToEmpty();
  }
  _impl_.fixedcost_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VehicleCostClass::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 32, 2> VehicleCostClass::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VehicleCostClass, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VehicleCostClass_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(VehicleCostClass, _impl_.id_)}},
    // required float fixedCost = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(VehicleCostClass, _impl_.fixedcost_)}},
    // repeated .IVR8.VehicleCostClass.Attribute attributes = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(VehicleCostClass, _impl_.attributes_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(VehicleCostClass, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required float fixedCost = 2;
    {PROTOBUF_FIELD_OFFSET(VehicleCostClass, _impl_.fixedcost_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // repeated .IVR8.VehicleCostClass.Attribute attributes = 3;
    {PROTOBUF_FIELD_OFFSET(VehicleCostClass, _impl_.attributes_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::IVR8::VehicleCostClass_Attribute>()},
  }}, {{
    "\25\2\0\0\0\0\0\0"
    "IVR8.VehicleCostClass"
    "id"
  }},
};

::uint8_t* VehicleCostClass::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IVR8.VehicleCostClass)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.VehicleCostClass.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required float fixedCost = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_fixedcost(), target);
  }

  // repeated .IVR8.VehicleCostClass.Attribute attributes = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_attributes_size()); i < n; i++) {
    const auto& repfield = this->_internal_attributes().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVR8.VehicleCostClass)
  return target;
}

::size_t VehicleCostClass::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IVR8.VehicleCostClass)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .IVR8.VehicleCostClass.Attribute attributes = 3;
  total_size += 1UL * this->_internal_attributes_size();
  for (const auto& msg : this->_internal_attributes()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required string id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_id());
    }

    // required float fixedCost = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 5;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VehicleCostClass::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    VehicleCostClass::MergeImpl
};
const ::google::protobuf::Message::ClassData*VehicleCostClass::GetClassData() const { return &_class_data_; }


void VehicleCostClass::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VehicleCostClass*>(&to_msg);
  auto& from = static_cast<const VehicleCostClass&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVR8.VehicleCostClass)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_attributes()->MergeFrom(from._internal_attributes());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.fixedcost_ = from._impl_.fixedcost_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VehicleCostClass::CopyFrom(const VehicleCostClass& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVR8.VehicleCostClass)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VehicleCostClass::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(_internal_attributes()))
    return false;
  return true;
}

void VehicleCostClass::InternalSwap(VehicleCostClass* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.attributes_.InternalSwap(&other->_impl_.attributes_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, lhs_arena,
                                       &other->_impl_.id_, rhs_arena);
        swap(_impl_.fixedcost_, other->_impl_.fixedcost_);
}

::google::protobuf::Metadata VehicleCostClass::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter, &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
      file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[19]);
}
// ===================================================================

class Vehicle_Task_Attribute::_Internal {
 public:
  using HasBits = decltype(std::declval<Vehicle_Task_Attribute>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Vehicle_Task_Attribute, _impl_._has_bits_);
  static void set_has_dimensionid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_quantity(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

Vehicle_Task_Attribute::Vehicle_Task_Attribute(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVR8.Vehicle.Task.Attribute)
}
Vehicle_Task_Attribute::Vehicle_Task_Attribute(const Vehicle_Task_Attribute& from) : ::google::protobuf::Message() {
  Vehicle_Task_Attribute* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.windows_){from._impl_.windows_},
      decltype(_impl_.dimensionid_){},
      decltype(_impl_.quantity_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.dimensionid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dimensionid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.dimensionid_.Set(from._internal_dimensionid(), _this->GetArenaForAllocation());
  }
  _this->_impl_.quantity_ = from._impl_.quantity_;

  // @@protoc_insertion_point(copy_constructor:IVR8.Vehicle.Task.Attribute)
}
inline void Vehicle_Task_Attribute::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.windows_){arena},
      decltype(_impl_.dimensionid_){},
      decltype(_impl_.quantity_){0},
  };
  _impl_.dimensionid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dimensionid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
Vehicle_Task_Attribute::~Vehicle_Task_Attribute() {
  // @@protoc_insertion_point(destructor:IVR8.Vehicle.Task.Attribute)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Vehicle_Task_Attribute::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.windows_.~RepeatedPtrField();
  _impl_.dimensionid_.Destroy();
}
void Vehicle_Task_Attribute::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Vehicle_Task_Attribute::Clear() {
// @@protoc_insertion_point(message_clear_start:IVR8.Vehicle.Task.Attribute)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_windows()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.dimensionid_.ClearNonDefaultToEmpty();
  }
  _impl_.quantity_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Vehicle_Task_Attribute::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 47, 2> Vehicle_Task_Attribute::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Vehicle_Task_Attribute, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Vehicle_Task_Attribute_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string dimensionId = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Vehicle_Task_Attribute, _impl_.dimensionid_)}},
    // optional float quantity = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(Vehicle_Task_Attribute, _impl_.quantity_)}},
    // repeated .IVR8.Window windows = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Vehicle_Task_Attribute, _impl_.windows_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string dimensionId = 1;
    {PROTOBUF_FIELD_OFFSET(Vehicle_Task_Attribute, _impl_.dimensionid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional float quantity = 2;
    {PROTOBUF_FIELD_OFFSET(Vehicle_Task_Attribute, _impl_.quantity_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // repeated .IVR8.Window windows = 3;
    {PROTOBUF_FIELD_OFFSET(Vehicle_Task_Attribute, _impl_.windows_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::IVR8::Window>()},
  }}, {{
    "\33\13\0\0\0\0\0\0"
    "IVR8.Vehicle.Task.Attribute"
    "dimensionId"
  }},
};

::uint8_t* Vehicle_Task_Attribute::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IVR8.Vehicle.Task.Attribute)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string dimensionId = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_dimensionid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.Vehicle.Task.Attribute.dimensionId");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional float quantity = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_quantity(), target);
  }

  // repeated .IVR8.Window windows = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_windows_size()); i < n; i++) {
    const auto& repfield = this->_internal_windows().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVR8.Vehicle.Task.Attribute)
  return target;
}

::size_t Vehicle_Task_Attribute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IVR8.Vehicle.Task.Attribute)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .IVR8.Window windows = 3;
  total_size += 1UL * this->_internal_windows_size();
  for (const auto& msg : this->_internal_windows()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // required string dimensionId = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_dimensionid());
  }

  // optional float quantity = 2;
  if (cached_has_bits & 0x00000002u) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Vehicle_Task_Attribute::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Vehicle_Task_Attribute::MergeImpl
};
const ::google::protobuf::Message::ClassData*Vehicle_Task_Attribute::GetClassData() const { return &_class_data_; }


void Vehicle_Task_Attribute::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Vehicle_Task_Attribute*>(&to_msg);
  auto& from = static_cast<const Vehicle_Task_Attribute&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVR8.Vehicle.Task.Attribute)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_windows()->MergeFrom(from._internal_windows());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_dimensionid(from._internal_dimensionid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.quantity_ = from._impl_.quantity_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Vehicle_Task_Attribute::CopyFrom(const Vehicle_Task_Attribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVR8.Vehicle.Task.Attribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Vehicle_Task_Attribute::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(_internal_windows()))
    return false;
  return true;
}

void Vehicle_Task_Attribute::InternalSwap(Vehicle_Task_Attribute* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.windows_.InternalSwap(&other->_impl_.windows_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dimensionid_, lhs_arena,
                                       &other->_impl_.dimensionid_, rhs_arena);
        swap(_impl_.quantity_, other->_impl_.quantity_);
}

::google::protobuf::Metadata Vehicle_Task_Attribute::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter, &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
      file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[20]);
}
// ===================================================================

class Vehicle_Task::_Internal {
 public:
  using HasBits = decltype(std::declval<Vehicle_Task>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Vehicle_Task, _impl_._has_bits_);
  static void set_has_locationid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

Vehicle_Task::Vehicle_Task(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVR8.Vehicle.Task)
}
Vehicle_Task::Vehicle_Task(const Vehicle_Task& from) : ::google::protobuf::Message() {
  Vehicle_Task* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.attributes_){from._impl_.attributes_},
      decltype(_impl_.locationid_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.locationid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.locationid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.locationid_.Set(from._internal_locationid(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:IVR8.Vehicle.Task)
}
inline void Vehicle_Task::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.attributes_){arena},
      decltype(_impl_.locationid_){},
  };
  _impl_.locationid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.locationid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
Vehicle_Task::~Vehicle_Task() {
  // @@protoc_insertion_point(destructor:IVR8.Vehicle.Task)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Vehicle_Task::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.attributes_.~RepeatedPtrField();
  _impl_.locationid_.Destroy();
}
void Vehicle_Task::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Vehicle_Task::Clear() {
// @@protoc_insertion_point(message_clear_start:IVR8.Vehicle.Task)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_attributes()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.locationid_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Vehicle_Task::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 36, 2> Vehicle_Task::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Vehicle_Task, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Vehicle_Task_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .IVR8.Vehicle.Task.Attribute attributes = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Vehicle_Task, _impl_.attributes_)}},
    // required string locationId = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Vehicle_Task, _impl_.locationid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string locationId = 1;
    {PROTOBUF_FIELD_OFFSET(Vehicle_Task, _impl_.locationid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated .IVR8.Vehicle.Task.Attribute attributes = 2;
    {PROTOBUF_FIELD_OFFSET(Vehicle_Task, _impl_.attributes_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::IVR8::Vehicle_Task_Attribute>()},
  }}, {{
    "\21\12\0\0\0\0\0\0"
    "IVR8.Vehicle.Task"
    "locationId"
  }},
};

::uint8_t* Vehicle_Task::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IVR8.Vehicle.Task)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string locationId = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_locationid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.Vehicle.Task.locationId");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .IVR8.Vehicle.Task.Attribute attributes = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_attributes_size()); i < n; i++) {
    const auto& repfield = this->_internal_attributes().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVR8.Vehicle.Task)
  return target;
}

::size_t Vehicle_Task::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IVR8.Vehicle.Task)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .IVR8.Vehicle.Task.Attribute attributes = 2;
  total_size += 1UL * this->_internal_attributes_size();
  for (const auto& msg : this->_internal_attributes()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // required string locationId = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_locationid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Vehicle_Task::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Vehicle_Task::MergeImpl
};
const ::google::protobuf::Message::ClassData*Vehicle_Task::GetClassData() const { return &_class_data_; }


void Vehicle_Task::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Vehicle_Task*>(&to_msg);
  auto& from = static_cast<const Vehicle_Task&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVR8.Vehicle.Task)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_attributes()->MergeFrom(from._internal_attributes());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_locationid(from._internal_locationid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Vehicle_Task::CopyFrom(const Vehicle_Task& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVR8.Vehicle.Task)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Vehicle_Task::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(_internal_attributes()))
    return false;
  return true;
}

void Vehicle_Task::InternalSwap(Vehicle_Task* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.attributes_.InternalSwap(&other->_impl_.attributes_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.locationid_, lhs_arena,
                                       &other->_impl_.locationid_, rhs_arena);
}

::google::protobuf::Metadata Vehicle_Task::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter, &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
      file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[21]);
}
// ===================================================================

class Vehicle_Shift::_Internal {
 public:
  using HasBits = decltype(std::declval<Vehicle_Shift>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Vehicle_Shift, _impl_._has_bits_);
  static const ::IVR8::Vehicle_Task& shiftstart(const Vehicle_Shift* msg);
  static void set_has_shiftstart(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::IVR8::Vehicle_Task& shiftend(const Vehicle_Shift* msg);
  static void set_has_shiftend(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::IVR8::Vehicle_Task& Vehicle_Shift::_Internal::shiftstart(const Vehicle_Shift* msg) {
  return *msg->_impl_.shiftstart_;
}
const ::IVR8::Vehicle_Task& Vehicle_Shift::_Internal::shiftend(const Vehicle_Shift* msg) {
  return *msg->_impl_.shiftend_;
}
Vehicle_Shift::Vehicle_Shift(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVR8.Vehicle.Shift)
}
Vehicle_Shift::Vehicle_Shift(const Vehicle_Shift& from) : ::google::protobuf::Message() {
  Vehicle_Shift* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.shiftstart_){nullptr},
      decltype(_impl_.shiftend_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.shiftstart_ = new ::IVR8::Vehicle_Task(*from._impl_.shiftstart_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.shiftend_ = new ::IVR8::Vehicle_Task(*from._impl_.shiftend_);
  }

  // @@protoc_insertion_point(copy_constructor:IVR8.Vehicle.Shift)
}
inline void Vehicle_Shift::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.shiftstart_){nullptr},
      decltype(_impl_.shiftend_){nullptr},
  };
}
Vehicle_Shift::~Vehicle_Shift() {
  // @@protoc_insertion_point(destructor:IVR8.Vehicle.Shift)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Vehicle_Shift::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.shiftstart_;
  if (this != internal_default_instance()) delete _impl_.shiftend_;
}
void Vehicle_Shift::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Vehicle_Shift::Clear() {
// @@protoc_insertion_point(message_clear_start:IVR8.Vehicle.Shift)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.shiftstart_ != nullptr);
      _impl_.shiftstart_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.shiftend_ != nullptr);
      _impl_.shiftend_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Vehicle_Shift::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> Vehicle_Shift::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Vehicle_Shift, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Vehicle_Shift_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .IVR8.Vehicle.Task shiftEnd = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Vehicle_Shift, _impl_.shiftend_)}},
    // required .IVR8.Vehicle.Task shiftStart = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Vehicle_Shift, _impl_.shiftstart_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required .IVR8.Vehicle.Task shiftStart = 1;
    {PROTOBUF_FIELD_OFFSET(Vehicle_Shift, _impl_.shiftstart_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .IVR8.Vehicle.Task shiftEnd = 2;
    {PROTOBUF_FIELD_OFFSET(Vehicle_Shift, _impl_.shiftend_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::IVR8::Vehicle_Task>()},
    {::_pbi::TcParser::GetTable<::IVR8::Vehicle_Task>()},
  }}, {{
  }},
};

::uint8_t* Vehicle_Shift::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IVR8.Vehicle.Shift)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .IVR8.Vehicle.Task shiftStart = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::shiftstart(this),
        _Internal::shiftstart(this).GetCachedSize(), target, stream);
  }

  // optional .IVR8.Vehicle.Task shiftEnd = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::shiftend(this),
        _Internal::shiftend(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVR8.Vehicle.Shift)
  return target;
}

::size_t Vehicle_Shift::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IVR8.Vehicle.Shift)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required .IVR8.Vehicle.Task shiftStart = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.shiftstart_);
  }

  // optional .IVR8.Vehicle.Task shiftEnd = 2;
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.shiftend_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Vehicle_Shift::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Vehicle_Shift::MergeImpl
};
const ::google::protobuf::Message::ClassData*Vehicle_Shift::GetClassData() const { return &_class_data_; }


void Vehicle_Shift::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Vehicle_Shift*>(&to_msg);
  auto& from = static_cast<const Vehicle_Shift&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVR8.Vehicle.Shift)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_shiftstart()->::IVR8::Vehicle_Task::MergeFrom(
          from._internal_shiftstart());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_shiftend()->::IVR8::Vehicle_Task::MergeFrom(
          from._internal_shiftend());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Vehicle_Shift::CopyFrom(const Vehicle_Shift& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVR8.Vehicle.Shift)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Vehicle_Shift::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!_impl_.shiftstart_->IsInitialized()) return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!_impl_.shiftend_->IsInitialized()) return false;
  }
  return true;
}

void Vehicle_Shift::InternalSwap(Vehicle_Shift* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Vehicle_Shift, _impl_.shiftend_)
      + sizeof(Vehicle_Shift::_impl_.shiftend_)
      - PROTOBUF_FIELD_OFFSET(Vehicle_Shift, _impl_.shiftstart_)>(
          reinterpret_cast<char*>(&_impl_.shiftstart_),
          reinterpret_cast<char*>(&other->_impl_.shiftstart_));
}

::google::protobuf::Metadata Vehicle_Shift::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter, &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
      file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[22]);
}
// ===================================================================

class Vehicle_Capacity::_Internal {
 public:
  using HasBits = decltype(std::declval<Vehicle_Capacity>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Vehicle_Capacity, _impl_._has_bits_);
  static void set_has_dimensionid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_capacity(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

Vehicle_Capacity::Vehicle_Capacity(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVR8.Vehicle.Capacity)
}
Vehicle_Capacity::Vehicle_Capacity(const Vehicle_Capacity& from) : ::google::protobuf::Message() {
  Vehicle_Capacity* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.dimensionid_){},
      decltype(_impl_.capacity_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.dimensionid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dimensionid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.dimensionid_.Set(from._internal_dimensionid(), _this->GetArenaForAllocation());
  }
  _this->_impl_.capacity_ = from._impl_.capacity_;

  // @@protoc_insertion_point(copy_constructor:IVR8.Vehicle.Capacity)
}
inline void Vehicle_Capacity::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.dimensionid_){},
      decltype(_impl_.capacity_){0},
  };
  _impl_.dimensionid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dimensionid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
Vehicle_Capacity::~Vehicle_Capacity() {
  // @@protoc_insertion_point(destructor:IVR8.Vehicle.Capacity)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Vehicle_Capacity::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.dimensionid_.Destroy();
}
void Vehicle_Capacity::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Vehicle_Capacity::Clear() {
// @@protoc_insertion_point(message_clear_start:IVR8.Vehicle.Capacity)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.dimensionid_.ClearNonDefaultToEmpty();
  }
  _impl_.capacity_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Vehicle_Capacity::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 41, 2> Vehicle_Capacity::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Vehicle_Capacity, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Vehicle_Capacity_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required float capacity = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(Vehicle_Capacity, _impl_.capacity_)}},
    // required string dimensionId = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Vehicle_Capacity, _impl_.dimensionid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string dimensionId = 1;
    {PROTOBUF_FIELD_OFFSET(Vehicle_Capacity, _impl_.dimensionid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required float capacity = 2;
    {PROTOBUF_FIELD_OFFSET(Vehicle_Capacity, _impl_.capacity_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
    "\25\13\0\0\0\0\0\0"
    "IVR8.Vehicle.Capacity"
    "dimensionId"
  }},
};

::uint8_t* Vehicle_Capacity::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IVR8.Vehicle.Capacity)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string dimensionId = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_dimensionid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.Vehicle.Capacity.dimensionId");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required float capacity = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_capacity(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVR8.Vehicle.Capacity)
  return target;
}

::size_t Vehicle_Capacity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IVR8.Vehicle.Capacity)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required string dimensionId = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_dimensionid());
    }

    // required float capacity = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 5;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Vehicle_Capacity::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Vehicle_Capacity::MergeImpl
};
const ::google::protobuf::Message::ClassData*Vehicle_Capacity::GetClassData() const { return &_class_data_; }


void Vehicle_Capacity::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Vehicle_Capacity*>(&to_msg);
  auto& from = static_cast<const Vehicle_Capacity&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVR8.Vehicle.Capacity)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_dimensionid(from._internal_dimensionid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.capacity_ = from._impl_.capacity_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Vehicle_Capacity::CopyFrom(const Vehicle_Capacity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVR8.Vehicle.Capacity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Vehicle_Capacity::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

void Vehicle_Capacity::InternalSwap(Vehicle_Capacity* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dimensionid_, lhs_arena,
                                       &other->_impl_.dimensionid_, rhs_arena);
        swap(_impl_.capacity_, other->_impl_.capacity_);
}

::google::protobuf::Metadata Vehicle_Capacity::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter, &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
      file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[23]);
}
// ===================================================================

class Vehicle::_Internal {
 public:
  using HasBits = decltype(std::declval<Vehicle>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Vehicle, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_classid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_costclassid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::IVR8::Vehicle_Shift& shift(const Vehicle* msg);
  static void set_has_shift(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_compartmentsetid(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000017) ^ 0x00000017) != 0;
  }
};

const ::IVR8::Vehicle_Shift& Vehicle::_Internal::shift(const Vehicle* msg) {
  return *msg->_impl_.shift_;
}
Vehicle::Vehicle(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVR8.Vehicle)
}
Vehicle::Vehicle(const Vehicle& from) : ::google::protobuf::Message() {
  Vehicle* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.capacities_){from._impl_.capacities_},
      decltype(_impl_.transitruleids_){from._impl_.transitruleids_},
      decltype(_impl_.id_){},
      decltype(_impl_.classid_){},
      decltype(_impl_.costclassid_){},
      decltype(_impl_.compartmentsetid_){},
      decltype(_impl_.shift_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.id_.Set(from._internal_id(), _this->GetArenaForAllocation());
  }
  _impl_.classid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.classid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.classid_.Set(from._internal_classid(), _this->GetArenaForAllocation());
  }
  _impl_.costclassid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.costclassid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.costclassid_.Set(from._internal_costclassid(), _this->GetArenaForAllocation());
  }
  _impl_.compartmentsetid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.compartmentsetid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000008u) != 0) {
    _this->_impl_.compartmentsetid_.Set(from._internal_compartmentsetid(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000010u) != 0) {
    _this->_impl_.shift_ = new ::IVR8::Vehicle_Shift(*from._impl_.shift_);
  }

  // @@protoc_insertion_point(copy_constructor:IVR8.Vehicle)
}
inline void Vehicle::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.capacities_){arena},
      decltype(_impl_.transitruleids_){arena},
      decltype(_impl_.id_){},
      decltype(_impl_.classid_){},
      decltype(_impl_.costclassid_){},
      decltype(_impl_.compartmentsetid_){},
      decltype(_impl_.shift_){nullptr},
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.classid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.classid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.costclassid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.costclassid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.compartmentsetid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.compartmentsetid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
Vehicle::~Vehicle() {
  // @@protoc_insertion_point(destructor:IVR8.Vehicle)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Vehicle::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.capacities_.~RepeatedPtrField();
  _internal_mutable_transitruleids()->~RepeatedPtrField();
  _impl_.id_.Destroy();
  _impl_.classid_.Destroy();
  _impl_.costclassid_.Destroy();
  _impl_.compartmentsetid_.Destroy();
  if (this != internal_default_instance()) delete _impl_.shift_;
}
void Vehicle::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Vehicle::Clear() {
// @@protoc_insertion_point(message_clear_start:IVR8.Vehicle)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_capacities()->Clear();
  _internal_mutable_transitruleids()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.classid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.costclassid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.compartmentsetid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.shift_ != nullptr);
      _impl_.shift_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Vehicle::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 2, 71, 2> Vehicle::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Vehicle, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Vehicle_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Vehicle, _impl_.id_)}},
    // required string classId = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Vehicle, _impl_.classid_)}},
    // required string costClassId = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(Vehicle, _impl_.costclassid_)}},
    // required .IVR8.Vehicle.Shift shift = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 4, 0, PROTOBUF_FIELD_OFFSET(Vehicle, _impl_.shift_)}},
    // repeated .IVR8.Vehicle.Capacity capacities = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 1, PROTOBUF_FIELD_OFFSET(Vehicle, _impl_.capacities_)}},
    // repeated string transitRuleIds = 6;
    {::_pbi::TcParser::FastSR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Vehicle, _impl_.transitruleids_)}},
    // optional string compartmentSetId = 7;
    {::_pbi::TcParser::FastSS1,
     {58, 3, 0, PROTOBUF_FIELD_OFFSET(Vehicle, _impl_.compartmentsetid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(Vehicle, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string classId = 2;
    {PROTOBUF_FIELD_OFFSET(Vehicle, _impl_.classid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string costClassId = 3;
    {PROTOBUF_FIELD_OFFSET(Vehicle, _impl_.costclassid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required .IVR8.Vehicle.Shift shift = 4;
    {PROTOBUF_FIELD_OFFSET(Vehicle, _impl_.shift_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .IVR8.Vehicle.Capacity capacities = 5;
    {PROTOBUF_FIELD_OFFSET(Vehicle, _impl_.capacities_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string transitRuleIds = 6;
    {PROTOBUF_FIELD_OFFSET(Vehicle, _impl_.transitruleids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // optional string compartmentSetId = 7;
    {PROTOBUF_FIELD_OFFSET(Vehicle, _impl_.compartmentsetid_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::IVR8::Vehicle_Shift>()},
    {::_pbi::TcParser::GetTable<::IVR8::Vehicle_Capacity>()},
  }}, {{
    "\14\2\7\13\0\0\16\20"
    "IVR8.Vehicle"
    "id"
    "classId"
    "costClassId"
    "transitRuleIds"
    "compartmentSetId"
  }},
};

::uint8_t* Vehicle::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IVR8.Vehicle)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.Vehicle.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required string classId = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_classid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.Vehicle.classId");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // required string costClassId = 3;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_costclassid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.Vehicle.costClassId");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // required .IVR8.Vehicle.Shift shift = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::shift(this),
        _Internal::shift(this).GetCachedSize(), target, stream);
  }

  // repeated .IVR8.Vehicle.Capacity capacities = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_capacities_size()); i < n; i++) {
    const auto& repfield = this->_internal_capacities().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated string transitRuleIds = 6;
  for (int i = 0, n = this->_internal_transitruleids_size(); i < n; ++i) {
    const auto& s = this->_internal_transitruleids().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.Vehicle.transitRuleIds");
    target = stream->WriteString(6, s, target);
  }

  // optional string compartmentSetId = 7;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_compartmentsetid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.Vehicle.compartmentSetId");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVR8.Vehicle)
  return target;
}

::size_t Vehicle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IVR8.Vehicle)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .IVR8.Vehicle.Capacity capacities = 5;
  total_size += 1UL * this->_internal_capacities_size();
  for (const auto& msg : this->_internal_capacities()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated string transitRuleIds = 6;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_transitruleids().size());
  for (int i = 0, n = _internal_transitruleids().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_transitruleids().Get(i));
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // required string id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_id());
    }

    // required string classId = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_classid());
    }

    // required string costClassId = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_costclassid());
    }

  }
  // optional string compartmentSetId = 7;
  if (cached_has_bits & 0x00000008u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_compartmentsetid());
  }

  // required .IVR8.Vehicle.Shift shift = 4;
  if (cached_has_bits & 0x00000010u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.shift_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Vehicle::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Vehicle::MergeImpl
};
const ::google::protobuf::Message::ClassData*Vehicle::GetClassData() const { return &_class_data_; }


void Vehicle::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Vehicle*>(&to_msg);
  auto& from = static_cast<const Vehicle&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVR8.Vehicle)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_capacities()->MergeFrom(from._internal_capacities());
  _this->_internal_mutable_transitruleids()->MergeFrom(from._internal_transitruleids());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_classid(from._internal_classid());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_costclassid(from._internal_costclassid());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_compartmentsetid(from._internal_compartmentsetid());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_shift()->::IVR8::Vehicle_Shift::MergeFrom(
          from._internal_shift());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Vehicle::CopyFrom(const Vehicle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVR8.Vehicle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Vehicle::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(_internal_capacities()))
    return false;
  if ((_impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (!_impl_.shift_->IsInitialized()) return false;
  }
  return true;
}

void Vehicle::InternalSwap(Vehicle* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.capacities_.InternalSwap(&other->_impl_.capacities_);
  _impl_.transitruleids_.InternalSwap(&other->_impl_.transitruleids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, lhs_arena,
                                       &other->_impl_.id_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.classid_, lhs_arena,
                                       &other->_impl_.classid_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.costclassid_, lhs_arena,
                                       &other->_impl_.costclassid_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.compartmentsetid_, lhs_arena,
                                       &other->_impl_.compartmentsetid_, rhs_arena);
  swap(_impl_.shift_, other->_impl_.shift_);
}

::google::protobuf::Metadata Vehicle::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter, &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
      file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[24]);
}
// ===================================================================

class TaskSequence::_Internal {
 public:
  using HasBits = decltype(std::declval<TaskSequence>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TaskSequence, _impl_._has_bits_);
  static void set_has_vehicleid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

TaskSequence::TaskSequence(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVR8.TaskSequence)
}
TaskSequence::TaskSequence(const TaskSequence& from) : ::google::protobuf::Message() {
  TaskSequence* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.taskid_){from._impl_.taskid_},
      decltype(_impl_.compartmentid_){from._impl_.compartmentid_},
      decltype(_impl_.vehicleid_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.vehicleid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.vehicleid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.vehicleid_.Set(from._internal_vehicleid(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:IVR8.TaskSequence)
}
inline void TaskSequence::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.taskid_){arena},
      decltype(_impl_.compartmentid_){arena},
      decltype(_impl_.vehicleid_){},
  };
  _impl_.vehicleid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.vehicleid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
TaskSequence::~TaskSequence() {
  // @@protoc_insertion_point(destructor:IVR8.TaskSequence)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TaskSequence::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_taskid()->~RepeatedPtrField();
  _internal_mutable_compartmentid()->~RepeatedPtrField();
  _impl_.vehicleid_.Destroy();
}
void TaskSequence::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TaskSequence::Clear() {
// @@protoc_insertion_point(message_clear_start:IVR8.TaskSequence)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_taskid()->Clear();
  _internal_mutable_compartmentid()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.vehicleid_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TaskSequence::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 54, 2> TaskSequence::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TaskSequence, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TaskSequence_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string vehicleId = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TaskSequence, _impl_.vehicleid_)}},
    // repeated string taskId = 2;
    {::_pbi::TcParser::FastSR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TaskSequence, _impl_.taskid_)}},
    // repeated string compartmentId = 3;
    {::_pbi::TcParser::FastSR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(TaskSequence, _impl_.compartmentid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string vehicleId = 1;
    {PROTOBUF_FIELD_OFFSET(TaskSequence, _impl_.vehicleid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated string taskId = 2;
    {PROTOBUF_FIELD_OFFSET(TaskSequence, _impl_.taskid_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // repeated string compartmentId = 3;
    {PROTOBUF_FIELD_OFFSET(TaskSequence, _impl_.compartmentid_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\21\11\6\15\0\0\0\0"
    "IVR8.TaskSequence"
    "vehicleId"
    "taskId"
    "compartmentId"
  }},
};

::uint8_t* TaskSequence::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IVR8.TaskSequence)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string vehicleId = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_vehicleid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.TaskSequence.vehicleId");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated string taskId = 2;
  for (int i = 0, n = this->_internal_taskid_size(); i < n; ++i) {
    const auto& s = this->_internal_taskid().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.TaskSequence.taskId");
    target = stream->WriteString(2, s, target);
  }

  // repeated string compartmentId = 3;
  for (int i = 0, n = this->_internal_compartmentid_size(); i < n; ++i) {
    const auto& s = this->_internal_compartmentid().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.TaskSequence.compartmentId");
    target = stream->WriteString(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVR8.TaskSequence)
  return target;
}

::size_t TaskSequence::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IVR8.TaskSequence)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string taskId = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_taskid().size());
  for (int i = 0, n = _internal_taskid().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_taskid().Get(i));
  }
  // repeated string compartmentId = 3;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_compartmentid().size());
  for (int i = 0, n = _internal_compartmentid().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_compartmentid().Get(i));
  }
  // required string vehicleId = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_vehicleid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TaskSequence::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TaskSequence::MergeImpl
};
const ::google::protobuf::Message::ClassData*TaskSequence::GetClassData() const { return &_class_data_; }


void TaskSequence::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TaskSequence*>(&to_msg);
  auto& from = static_cast<const TaskSequence&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVR8.TaskSequence)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_taskid()->MergeFrom(from._internal_taskid());
  _this->_internal_mutable_compartmentid()->MergeFrom(from._internal_compartmentid());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_vehicleid(from._internal_vehicleid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TaskSequence::CopyFrom(const TaskSequence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVR8.TaskSequence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TaskSequence::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

void TaskSequence::InternalSwap(TaskSequence* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.taskid_.InternalSwap(&other->_impl_.taskid_);
  _impl_.compartmentid_.InternalSwap(&other->_impl_.compartmentid_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.vehicleid_, lhs_arena,
                                       &other->_impl_.vehicleid_, rhs_arena);
}

::google::protobuf::Metadata TaskSequence::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter, &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
      file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[25]);
}
// ===================================================================

class TransitRule_Trigger::_Internal {
 public:
  using HasBits = decltype(std::declval<TransitRule_Trigger>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TransitRule_Trigger, _impl_._has_bits_);
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_quantity(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

TransitRule_Trigger::TransitRule_Trigger(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVR8.TransitRule.Trigger)
}
TransitRule_Trigger::TransitRule_Trigger(const TransitRule_Trigger& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:IVR8.TransitRule.Trigger)
}
inline void TransitRule_Trigger::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.value_){0},
      decltype(_impl_.quantity_){0},
  };
}
TransitRule_Trigger::~TransitRule_Trigger() {
  // @@protoc_insertion_point(destructor:IVR8.TransitRule.Trigger)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TransitRule_Trigger::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void TransitRule_Trigger::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TransitRule_Trigger::Clear() {
// @@protoc_insertion_point(message_clear_start:IVR8.TransitRule.Trigger)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.value_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.quantity_) -
        reinterpret_cast<char*>(&_impl_.value_)) + sizeof(_impl_.quantity_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TransitRule_Trigger::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> TransitRule_Trigger::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TransitRule_Trigger, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TransitRule_Trigger_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required float quantity = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(TransitRule_Trigger, _impl_.quantity_)}},
    // required float value = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(TransitRule_Trigger, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required float value = 1;
    {PROTOBUF_FIELD_OFFSET(TransitRule_Trigger, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float quantity = 2;
    {PROTOBUF_FIELD_OFFSET(TransitRule_Trigger, _impl_.quantity_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TransitRule_Trigger::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IVR8.TransitRule.Trigger)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required float value = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_value(), target);
  }

  // required float quantity = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_quantity(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVR8.TransitRule.Trigger)
  return target;
}

::size_t TransitRule_Trigger::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IVR8.TransitRule.Trigger)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required float value = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 5;
    }

    // required float quantity = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 5;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TransitRule_Trigger::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TransitRule_Trigger::MergeImpl
};
const ::google::protobuf::Message::ClassData*TransitRule_Trigger::GetClassData() const { return &_class_data_; }


void TransitRule_Trigger::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TransitRule_Trigger*>(&to_msg);
  auto& from = static_cast<const TransitRule_Trigger&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVR8.TransitRule.Trigger)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.value_ = from._impl_.value_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.quantity_ = from._impl_.quantity_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TransitRule_Trigger::CopyFrom(const TransitRule_Trigger& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVR8.TransitRule.Trigger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TransitRule_Trigger::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

void TransitRule_Trigger::InternalSwap(TransitRule_Trigger* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TransitRule_Trigger, _impl_.quantity_)
      + sizeof(TransitRule_Trigger::_impl_.quantity_)
      - PROTOBUF_FIELD_OFFSET(TransitRule_Trigger, _impl_.value_)>(
          reinterpret_cast<char*>(&_impl_.value_),
          reinterpret_cast<char*>(&other->_impl_.value_));
}

::google::protobuf::Metadata TransitRule_Trigger::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter, &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
      file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[26]);
}
// ===================================================================

class TransitRule::_Internal {
 public:
  using HasBits = decltype(std::declval<TransitRule>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TransitRule, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_dimensionid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_usestandingstate(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_usetransitstate(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_ruleidprefix(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000007) ^ 0x00000007) != 0;
  }
};

TransitRule::TransitRule(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVR8.TransitRule)
}
TransitRule::TransitRule(const TransitRule& from) : ::google::protobuf::Message() {
  TransitRule* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.triggers_){from._impl_.triggers_},
      decltype(_impl_.id_){},
      decltype(_impl_.dimensionid_){},
      decltype(_impl_.ruleidprefix_){},
      decltype(_impl_.usetransitstate_){},
      decltype(_impl_.usestandingstate_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.id_.Set(from._internal_id(), _this->GetArenaForAllocation());
  }
  _impl_.dimensionid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dimensionid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.dimensionid_.Set(from._internal_dimensionid(), _this->GetArenaForAllocation());
  }
  _impl_.ruleidprefix_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.ruleidprefix_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.ruleidprefix_.Set(from._internal_ruleidprefix(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.usetransitstate_, &from._impl_.usetransitstate_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.usestandingstate_) -
    reinterpret_cast<char*>(&_impl_.usetransitstate_)) + sizeof(_impl_.usestandingstate_));

  // @@protoc_insertion_point(copy_constructor:IVR8.TransitRule)
}
inline void TransitRule::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.triggers_){arena},
      decltype(_impl_.id_){},
      decltype(_impl_.dimensionid_){},
      decltype(_impl_.ruleidprefix_){},
      decltype(_impl_.usetransitstate_){false},
      decltype(_impl_.usestandingstate_){true},
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.dimensionid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dimensionid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.ruleidprefix_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.ruleidprefix_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
TransitRule::~TransitRule() {
  // @@protoc_insertion_point(destructor:IVR8.TransitRule)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TransitRule::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.triggers_.~RepeatedPtrField();
  _impl_.id_.Destroy();
  _impl_.dimensionid_.Destroy();
  _impl_.ruleidprefix_.Destroy();
}
void TransitRule::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TransitRule::Clear() {
// @@protoc_insertion_point(message_clear_start:IVR8.TransitRule)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_triggers()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.dimensionid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.ruleidprefix_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000018u) {
    _impl_.usetransitstate_ = false;
    _impl_.usestandingstate_ = true;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TransitRule::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 50, 2> TransitRule::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TransitRule, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TransitRule_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TransitRule, _impl_.id_)}},
    // required string dimensionId = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(TransitRule, _impl_.dimensionid_)}},
    // optional bool useStandingState = 3 [default = true];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TransitRule, _impl_.usestandingstate_), 4>(),
     {24, 4, 0, PROTOBUF_FIELD_OFFSET(TransitRule, _impl_.usestandingstate_)}},
    // optional bool useTransitState = 4 [default = false];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TransitRule, _impl_.usetransitstate_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(TransitRule, _impl_.usetransitstate_)}},
    // required string ruleIdPrefix = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 2, 0, PROTOBUF_FIELD_OFFSET(TransitRule, _impl_.ruleidprefix_)}},
    // repeated .IVR8.TransitRule.Trigger triggers = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(TransitRule, _impl_.triggers_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(TransitRule, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string dimensionId = 2;
    {PROTOBUF_FIELD_OFFSET(TransitRule, _impl_.dimensionid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool useStandingState = 3 [default = true];
    {PROTOBUF_FIELD_OFFSET(TransitRule, _impl_.usestandingstate_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool useTransitState = 4 [default = false];
    {PROTOBUF_FIELD_OFFSET(TransitRule, _impl_.usetransitstate_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required string ruleIdPrefix = 5;
    {PROTOBUF_FIELD_OFFSET(TransitRule, _impl_.ruleidprefix_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated .IVR8.TransitRule.Trigger triggers = 6;
    {PROTOBUF_FIELD_OFFSET(TransitRule, _impl_.triggers_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::IVR8::TransitRule_Trigger>()},
  }}, {{
    "\20\2\13\0\0\14\0\0"
    "IVR8.TransitRule"
    "id"
    "dimensionId"
    "ruleIdPrefix"
  }},
};

::uint8_t* TransitRule::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IVR8.TransitRule)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.TransitRule.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required string dimensionId = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_dimensionid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.TransitRule.dimensionId");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional bool useStandingState = 3 [default = true];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_usestandingstate(), target);
  }

  // optional bool useTransitState = 4 [default = false];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_usetransitstate(), target);
  }

  // required string ruleIdPrefix = 5;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_ruleidprefix();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.TransitRule.ruleIdPrefix");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // repeated .IVR8.TransitRule.Trigger triggers = 6;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_triggers_size()); i < n; i++) {
    const auto& repfield = this->_internal_triggers().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVR8.TransitRule)
  return target;
}

::size_t TransitRule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IVR8.TransitRule)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .IVR8.TransitRule.Trigger triggers = 6;
  total_size += 1UL * this->_internal_triggers_size();
  for (const auto& msg : this->_internal_triggers()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // required string id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_id());
    }

    // required string dimensionId = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_dimensionid());
    }

    // required string ruleIdPrefix = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_ruleidprefix());
    }

  }
  if (cached_has_bits & 0x00000018u) {
    // optional bool useTransitState = 4 [default = false];
    if (cached_has_bits & 0x00000008u) {
      total_size += 2;
    }

    // optional bool useStandingState = 3 [default = true];
    if (cached_has_bits & 0x00000010u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TransitRule::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TransitRule::MergeImpl
};
const ::google::protobuf::Message::ClassData*TransitRule::GetClassData() const { return &_class_data_; }


void TransitRule::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TransitRule*>(&to_msg);
  auto& from = static_cast<const TransitRule&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVR8.TransitRule)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_triggers()->MergeFrom(from._internal_triggers());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_dimensionid(from._internal_dimensionid());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_ruleidprefix(from._internal_ruleidprefix());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.usetransitstate_ = from._impl_.usetransitstate_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.usestandingstate_ = from._impl_.usestandingstate_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TransitRule::CopyFrom(const TransitRule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVR8.TransitRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TransitRule::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(_internal_triggers()))
    return false;
  return true;
}

void TransitRule::InternalSwap(TransitRule* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.triggers_.InternalSwap(&other->_impl_.triggers_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, lhs_arena,
                                       &other->_impl_.id_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dimensionid_, lhs_arena,
                                       &other->_impl_.dimensionid_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ruleidprefix_, lhs_arena,
                                       &other->_impl_.ruleidprefix_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TransitRule, _impl_.usestandingstate_)
      + sizeof(TransitRule::_impl_.usestandingstate_)
      - PROTOBUF_FIELD_OFFSET(TransitRule, _impl_.usetransitstate_)>(
          reinterpret_cast<char*>(&_impl_.usetransitstate_),
          reinterpret_cast<char*>(&other->_impl_.usetransitstate_));
}

::google::protobuf::Metadata TransitRule::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter, &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
      file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[27]);
}
// ===================================================================

class Compartment_Capacity::_Internal {
 public:
  using HasBits = decltype(std::declval<Compartment_Capacity>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Compartment_Capacity, _impl_._has_bits_);
  static void set_has_dimensionid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_capacity(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

Compartment_Capacity::Compartment_Capacity(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVR8.Compartment.Capacity)
}
Compartment_Capacity::Compartment_Capacity(const Compartment_Capacity& from) : ::google::protobuf::Message() {
  Compartment_Capacity* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.dimensionid_){},
      decltype(_impl_.capacity_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.dimensionid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dimensionid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.dimensionid_.Set(from._internal_dimensionid(), _this->GetArenaForAllocation());
  }
  _this->_impl_.capacity_ = from._impl_.capacity_;

  // @@protoc_insertion_point(copy_constructor:IVR8.Compartment.Capacity)
}
inline void Compartment_Capacity::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.dimensionid_){},
      decltype(_impl_.capacity_){0},
  };
  _impl_.dimensionid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dimensionid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
Compartment_Capacity::~Compartment_Capacity() {
  // @@protoc_insertion_point(destructor:IVR8.Compartment.Capacity)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Compartment_Capacity::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.dimensionid_.Destroy();
}
void Compartment_Capacity::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Compartment_Capacity::Clear() {
// @@protoc_insertion_point(message_clear_start:IVR8.Compartment.Capacity)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.dimensionid_.ClearNonDefaultToEmpty();
  }
  _impl_.capacity_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Compartment_Capacity::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 45, 2> Compartment_Capacity::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Compartment_Capacity, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Compartment_Capacity_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required float capacity = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(Compartment_Capacity, _impl_.capacity_)}},
    // required string dimensionId = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Compartment_Capacity, _impl_.dimensionid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string dimensionId = 1;
    {PROTOBUF_FIELD_OFFSET(Compartment_Capacity, _impl_.dimensionid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required float capacity = 2;
    {PROTOBUF_FIELD_OFFSET(Compartment_Capacity, _impl_.capacity_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
    "\31\13\0\0\0\0\0\0"
    "IVR8.Compartment.Capacity"
    "dimensionId"
  }},
};

::uint8_t* Compartment_Capacity::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IVR8.Compartment.Capacity)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string dimensionId = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_dimensionid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.Compartment.Capacity.dimensionId");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required float capacity = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_capacity(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVR8.Compartment.Capacity)
  return target;
}

::size_t Compartment_Capacity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IVR8.Compartment.Capacity)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required string dimensionId = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_dimensionid());
    }

    // required float capacity = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 5;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Compartment_Capacity::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Compartment_Capacity::MergeImpl
};
const ::google::protobuf::Message::ClassData*Compartment_Capacity::GetClassData() const { return &_class_data_; }


void Compartment_Capacity::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Compartment_Capacity*>(&to_msg);
  auto& from = static_cast<const Compartment_Capacity&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVR8.Compartment.Capacity)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_dimensionid(from._internal_dimensionid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.capacity_ = from._impl_.capacity_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Compartment_Capacity::CopyFrom(const Compartment_Capacity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVR8.Compartment.Capacity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Compartment_Capacity::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

void Compartment_Capacity::InternalSwap(Compartment_Capacity* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dimensionid_, lhs_arena,
                                       &other->_impl_.dimensionid_, rhs_arena);
        swap(_impl_.capacity_, other->_impl_.capacity_);
}

::google::protobuf::Metadata Compartment_Capacity::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter, &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
      file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[28]);
}
// ===================================================================

class Compartment::_Internal {
 public:
  using HasBits = decltype(std::declval<Compartment>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Compartment, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

Compartment::Compartment(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVR8.Compartment)
}
Compartment::Compartment(const Compartment& from) : ::google::protobuf::Message() {
  Compartment* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.capacities_){from._impl_.capacities_},
      decltype(_impl_.id_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.id_.Set(from._internal_id(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:IVR8.Compartment)
}
inline void Compartment::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.capacities_){arena},
      decltype(_impl_.id_){},
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
Compartment::~Compartment() {
  // @@protoc_insertion_point(destructor:IVR8.Compartment)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Compartment::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.capacities_.~RepeatedPtrField();
  _impl_.id_.Destroy();
}
void Compartment::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Compartment::Clear() {
// @@protoc_insertion_point(message_clear_start:IVR8.Compartment)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_capacities()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Compartment::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 27, 2> Compartment::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Compartment, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Compartment_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .IVR8.Compartment.Capacity capacities = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Compartment, _impl_.capacities_)}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Compartment, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(Compartment, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated .IVR8.Compartment.Capacity capacities = 2;
    {PROTOBUF_FIELD_OFFSET(Compartment, _impl_.capacities_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::IVR8::Compartment_Capacity>()},
  }}, {{
    "\20\2\0\0\0\0\0\0"
    "IVR8.Compartment"
    "id"
  }},
};

::uint8_t* Compartment::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IVR8.Compartment)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.Compartment.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .IVR8.Compartment.Capacity capacities = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_capacities_size()); i < n; i++) {
    const auto& repfield = this->_internal_capacities().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVR8.Compartment)
  return target;
}

::size_t Compartment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IVR8.Compartment)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .IVR8.Compartment.Capacity capacities = 2;
  total_size += 1UL * this->_internal_capacities_size();
  for (const auto& msg : this->_internal_capacities()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // required string id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Compartment::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Compartment::MergeImpl
};
const ::google::protobuf::Message::ClassData*Compartment::GetClassData() const { return &_class_data_; }


void Compartment::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Compartment*>(&to_msg);
  auto& from = static_cast<const Compartment&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVR8.Compartment)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_capacities()->MergeFrom(from._internal_capacities());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Compartment::CopyFrom(const Compartment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVR8.Compartment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Compartment::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(_internal_capacities()))
    return false;
  return true;
}

void Compartment::InternalSwap(Compartment* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.capacities_.InternalSwap(&other->_impl_.capacities_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, lhs_arena,
                                       &other->_impl_.id_, rhs_arena);
}

::google::protobuf::Metadata Compartment::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter, &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
      file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[29]);
}
// ===================================================================

class CompartmentSet_GroupLimit::_Internal {
 public:
  using HasBits = decltype(std::declval<CompartmentSet_GroupLimit>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CompartmentSet_GroupLimit, _impl_._has_bits_);
  static void set_has_dimensionid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_limit(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_checkstandingstate(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

CompartmentSet_GroupLimit::CompartmentSet_GroupLimit(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVR8.CompartmentSet.GroupLimit)
}
CompartmentSet_GroupLimit::CompartmentSet_GroupLimit(const CompartmentSet_GroupLimit& from) : ::google::protobuf::Message() {
  CompartmentSet_GroupLimit* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.compartmentids_){from._impl_.compartmentids_},
      decltype(_impl_.coefficients_){from._impl_.coefficients_},
      decltype(_impl_.dimensionid_){},
      decltype(_impl_.limit_){},
      decltype(_impl_.checkstandingstate_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.dimensionid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dimensionid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.dimensionid_.Set(from._internal_dimensionid(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.limit_, &from._impl_.limit_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.checkstandingstate_) -
    reinterpret_cast<char*>(&_impl_.limit_)) + sizeof(_impl_.checkstandingstate_));

  // @@protoc_insertion_point(copy_constructor:IVR8.CompartmentSet.GroupLimit)
}
inline void CompartmentSet_GroupLimit::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.compartmentids_){arena},
      decltype(_impl_.coefficients_){arena},
      decltype(_impl_.dimensionid_){},
      decltype(_impl_.limit_){0},
      decltype(_impl_.checkstandingstate_){false},
  };
  _impl_.dimensionid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dimensionid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CompartmentSet_GroupLimit::~CompartmentSet_GroupLimit() {
  // @@protoc_insertion_point(destructor:IVR8.CompartmentSet.GroupLimit)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CompartmentSet_GroupLimit::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_compartmentids()->~RepeatedPtrField();
  _impl_.coefficients_.~RepeatedField();
  _impl_.dimensionid_.Destroy();
}
void CompartmentSet_GroupLimit::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CompartmentSet_GroupLimit::Clear() {
// @@protoc_insertion_point(message_clear_start:IVR8.CompartmentSet.GroupLimit)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_compartmentids()->Clear();
  _internal_mutable_coefficients()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.dimensionid_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.limit_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.checkstandingstate_) -
        reinterpret_cast<char*>(&_impl_.limit_)) + sizeof(_impl_.checkstandingstate_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CompartmentSet_GroupLimit::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 64, 2> CompartmentSet_GroupLimit::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CompartmentSet_GroupLimit, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CompartmentSet_GroupLimit_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string compartmentIds = 1;
    {::_pbi::TcParser::FastSR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CompartmentSet_GroupLimit, _impl_.compartmentids_)}},
    // repeated float coefficients = 2;
    {::_pbi::TcParser::FastF32R1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(CompartmentSet_GroupLimit, _impl_.coefficients_)}},
    // required string dimensionId = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(CompartmentSet_GroupLimit, _impl_.dimensionid_)}},
    // required float limit = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 1, 0, PROTOBUF_FIELD_OFFSET(CompartmentSet_GroupLimit, _impl_.limit_)}},
    // optional bool checkStandingState = 5 [default = false];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CompartmentSet_GroupLimit, _impl_.checkstandingstate_), 2>(),
     {40, 2, 0, PROTOBUF_FIELD_OFFSET(CompartmentSet_GroupLimit, _impl_.checkstandingstate_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string compartmentIds = 1;
    {PROTOBUF_FIELD_OFFSET(CompartmentSet_GroupLimit, _impl_.compartmentids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // repeated float coefficients = 2;
    {PROTOBUF_FIELD_OFFSET(CompartmentSet_GroupLimit, _impl_.coefficients_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kFloat)},
    // required string dimensionId = 3;
    {PROTOBUF_FIELD_OFFSET(CompartmentSet_GroupLimit, _impl_.dimensionid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required float limit = 4;
    {PROTOBUF_FIELD_OFFSET(CompartmentSet_GroupLimit, _impl_.limit_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional bool checkStandingState = 5 [default = false];
    {PROTOBUF_FIELD_OFFSET(CompartmentSet_GroupLimit, _impl_.checkstandingstate_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\36\16\0\13\0\0\0\0"
    "IVR8.CompartmentSet.GroupLimit"
    "compartmentIds"
    "dimensionId"
  }},
};

::uint8_t* CompartmentSet_GroupLimit::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IVR8.CompartmentSet.GroupLimit)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string compartmentIds = 1;
  for (int i = 0, n = this->_internal_compartmentids_size(); i < n; ++i) {
    const auto& s = this->_internal_compartmentids().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.CompartmentSet.GroupLimit.compartmentIds");
    target = stream->WriteString(1, s, target);
  }

  // repeated float coefficients = 2;
  for (int i = 0, n = this->_internal_coefficients_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_coefficients().Get(i), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // required string dimensionId = 3;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_dimensionid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.CompartmentSet.GroupLimit.dimensionId");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // required float limit = 4;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_limit(), target);
  }

  // optional bool checkStandingState = 5 [default = false];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_checkstandingstate(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVR8.CompartmentSet.GroupLimit)
  return target;
}

::size_t CompartmentSet_GroupLimit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IVR8.CompartmentSet.GroupLimit)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string compartmentIds = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_compartmentids().size());
  for (int i = 0, n = _internal_compartmentids().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_compartmentids().Get(i));
  }
  // repeated float coefficients = 2;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_coefficients_size())
    ;
    std::size_t tag_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_coefficients_size());
    ;
    total_size += tag_size + data_size;
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required string dimensionId = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_dimensionid());
    }

    // required float limit = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 5;
    }

  }
  // optional bool checkStandingState = 5 [default = false];
  if (cached_has_bits & 0x00000004u) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CompartmentSet_GroupLimit::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CompartmentSet_GroupLimit::MergeImpl
};
const ::google::protobuf::Message::ClassData*CompartmentSet_GroupLimit::GetClassData() const { return &_class_data_; }


void CompartmentSet_GroupLimit::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CompartmentSet_GroupLimit*>(&to_msg);
  auto& from = static_cast<const CompartmentSet_GroupLimit&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVR8.CompartmentSet.GroupLimit)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_compartmentids()->MergeFrom(from._internal_compartmentids());
  _this->_internal_mutable_coefficients()->MergeFrom(from._internal_coefficients());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_dimensionid(from._internal_dimensionid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.limit_ = from._impl_.limit_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.checkstandingstate_ = from._impl_.checkstandingstate_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CompartmentSet_GroupLimit::CopyFrom(const CompartmentSet_GroupLimit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVR8.CompartmentSet.GroupLimit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CompartmentSet_GroupLimit::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

void CompartmentSet_GroupLimit::InternalSwap(CompartmentSet_GroupLimit* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.compartmentids_.InternalSwap(&other->_impl_.compartmentids_);
  _impl_.coefficients_.InternalSwap(&other->_impl_.coefficients_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dimensionid_, lhs_arena,
                                       &other->_impl_.dimensionid_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CompartmentSet_GroupLimit, _impl_.checkstandingstate_)
      + sizeof(CompartmentSet_GroupLimit::_impl_.checkstandingstate_)
      - PROTOBUF_FIELD_OFFSET(CompartmentSet_GroupLimit, _impl_.limit_)>(
          reinterpret_cast<char*>(&_impl_.limit_),
          reinterpret_cast<char*>(&other->_impl_.limit_));
}

::google::protobuf::Metadata CompartmentSet_GroupLimit::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter, &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
      file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[30]);
}
// ===================================================================

class CompartmentSet::_Internal {
 public:
  using HasBits = decltype(std::declval<CompartmentSet>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CompartmentSet, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

CompartmentSet::CompartmentSet(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVR8.CompartmentSet)
}
CompartmentSet::CompartmentSet(const CompartmentSet& from) : ::google::protobuf::Message() {
  CompartmentSet* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.compartmentids_){from._impl_.compartmentids_},
      decltype(_impl_.grouplimits_){from._impl_.grouplimits_},
      decltype(_impl_.id_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.id_.Set(from._internal_id(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:IVR8.CompartmentSet)
}
inline void CompartmentSet::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.compartmentids_){arena},
      decltype(_impl_.grouplimits_){arena},
      decltype(_impl_.id_){},
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CompartmentSet::~CompartmentSet() {
  // @@protoc_insertion_point(destructor:IVR8.CompartmentSet)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CompartmentSet::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_compartmentids()->~RepeatedPtrField();
  _impl_.grouplimits_.~RepeatedPtrField();
  _impl_.id_.Destroy();
}
void CompartmentSet::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CompartmentSet::Clear() {
// @@protoc_insertion_point(message_clear_start:IVR8.CompartmentSet)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_compartmentids()->Clear();
  _internal_mutable_grouplimits()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CompartmentSet::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 44, 2> CompartmentSet::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CompartmentSet, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CompartmentSet_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CompartmentSet, _impl_.id_)}},
    // repeated string compartmentIds = 2;
    {::_pbi::TcParser::FastSR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CompartmentSet, _impl_.compartmentids_)}},
    // repeated .IVR8.CompartmentSet.GroupLimit groupLimits = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(CompartmentSet, _impl_.grouplimits_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(CompartmentSet, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated string compartmentIds = 2;
    {PROTOBUF_FIELD_OFFSET(CompartmentSet, _impl_.compartmentids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // repeated .IVR8.CompartmentSet.GroupLimit groupLimits = 3;
    {PROTOBUF_FIELD_OFFSET(CompartmentSet, _impl_.grouplimits_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::IVR8::CompartmentSet_GroupLimit>()},
  }}, {{
    "\23\2\16\0\0\0\0\0"
    "IVR8.CompartmentSet"
    "id"
    "compartmentIds"
  }},
};

::uint8_t* CompartmentSet::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IVR8.CompartmentSet)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.CompartmentSet.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated string compartmentIds = 2;
  for (int i = 0, n = this->_internal_compartmentids_size(); i < n; ++i) {
    const auto& s = this->_internal_compartmentids().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.CompartmentSet.compartmentIds");
    target = stream->WriteString(2, s, target);
  }

  // repeated .IVR8.CompartmentSet.GroupLimit groupLimits = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_grouplimits_size()); i < n; i++) {
    const auto& repfield = this->_internal_grouplimits().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVR8.CompartmentSet)
  return target;
}

::size_t CompartmentSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IVR8.CompartmentSet)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string compartmentIds = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_compartmentids().size());
  for (int i = 0, n = _internal_compartmentids().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_compartmentids().Get(i));
  }
  // repeated .IVR8.CompartmentSet.GroupLimit groupLimits = 3;
  total_size += 1UL * this->_internal_grouplimits_size();
  for (const auto& msg : this->_internal_grouplimits()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // required string id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CompartmentSet::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CompartmentSet::MergeImpl
};
const ::google::protobuf::Message::ClassData*CompartmentSet::GetClassData() const { return &_class_data_; }


void CompartmentSet::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CompartmentSet*>(&to_msg);
  auto& from = static_cast<const CompartmentSet&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVR8.CompartmentSet)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_compartmentids()->MergeFrom(from._internal_compartmentids());
  _this->_internal_mutable_grouplimits()->MergeFrom(from._internal_grouplimits());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CompartmentSet::CopyFrom(const CompartmentSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVR8.CompartmentSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CompartmentSet::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(_internal_grouplimits()))
    return false;
  return true;
}

void CompartmentSet::InternalSwap(CompartmentSet* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.compartmentids_.InternalSwap(&other->_impl_.compartmentids_);
  _impl_.grouplimits_.InternalSwap(&other->_impl_.grouplimits_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, lhs_arena,
                                       &other->_impl_.id_, rhs_arena);
}

::google::protobuf::Metadata CompartmentSet::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter, &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
      file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[31]);
}
// ===================================================================

class Model::_Internal {
 public:
  using HasBits = decltype(std::declval<Model>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Model, _impl_._has_bits_);
  static const ::IVR8::DimensionConfiguration& dimensions(const Model* msg);
  static void set_has_dimensions(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::IVR8::DimensionConfiguration& Model::_Internal::dimensions(const Model* msg) {
  return *msg->_impl_.dimensions_;
}
Model::Model(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVR8.Model)
}
Model::Model(const Model& from) : ::google::protobuf::Message() {
  Model* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.locations_){from._impl_.locations_},
      decltype(_impl_.jobs_){from._impl_.jobs_},
      decltype(_impl_.vehicles_){from._impl_.vehicles_},
      decltype(_impl_.vehicleclasses_){from._impl_.vehicleclasses_},
      decltype(_impl_.vehiclecostclasses_){from._impl_.vehiclecostclasses_},
      decltype(_impl_.transitrules_){from._impl_.transitrules_},
      decltype(_impl_.transitgenerators_){from._impl_.transitgenerators_},
      decltype(_impl_.tasksequence_){from._impl_.tasksequence_},
      decltype(_impl_.compartments_){from._impl_.compartments_},
      decltype(_impl_.compartmentsets_){from._impl_.compartmentsets_},
      decltype(_impl_.dimensions_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.dimensions_ = new ::IVR8::DimensionConfiguration(*from._impl_.dimensions_);
  }

  // @@protoc_insertion_point(copy_constructor:IVR8.Model)
}
inline void Model::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.locations_){arena},
      decltype(_impl_.jobs_){arena},
      decltype(_impl_.vehicles_){arena},
      decltype(_impl_.vehicleclasses_){arena},
      decltype(_impl_.vehiclecostclasses_){arena},
      decltype(_impl_.transitrules_){arena},
      decltype(_impl_.transitgenerators_){arena},
      decltype(_impl_.tasksequence_){arena},
      decltype(_impl_.compartments_){arena},
      decltype(_impl_.compartmentsets_){arena},
      decltype(_impl_.dimensions_){nullptr},
  };
}
Model::~Model() {
  // @@protoc_insertion_point(destructor:IVR8.Model)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Model::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.locations_.~RepeatedPtrField();
  _impl_.jobs_.~RepeatedPtrField();
  _impl_.vehicles_.~RepeatedPtrField();
  _impl_.vehicleclasses_.~RepeatedPtrField();
  _impl_.vehiclecostclasses_.~RepeatedPtrField();
  _impl_.transitrules_.~RepeatedPtrField();
  _impl_.transitgenerators_.~RepeatedPtrField();
  _impl_.tasksequence_.~RepeatedPtrField();
  _impl_.compartments_.~RepeatedPtrField();
  _impl_.compartmentsets_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.dimensions_;
}
void Model::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Model::Clear() {
// @@protoc_insertion_point(message_clear_start:IVR8.Model)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_locations()->Clear();
  _internal_mutable_jobs()->Clear();
  _internal_mutable_vehicles()->Clear();
  _internal_mutable_vehicleclasses()->Clear();
  _internal_mutable_vehiclecostclasses()->Clear();
  _internal_mutable_transitrules()->Clear();
  _internal_mutable_transitgenerators()->Clear();
  _internal_mutable_tasksequence()->Clear();
  _internal_mutable_compartments()->Clear();
  _internal_mutable_compartmentsets()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.dimensions_ != nullptr);
    _impl_.dimensions_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Model::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 11, 0, 2> Model::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Model, _impl_._has_bits_),
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    11,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Model_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required .IVR8.DimensionConfiguration dimensions = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Model, _impl_.dimensions_)}},
    // repeated .IVR8.Location locations = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(Model, _impl_.locations_)}},
    // repeated .IVR8.Job jobs = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(Model, _impl_.jobs_)}},
    // repeated .IVR8.Vehicle vehicles = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 3, PROTOBUF_FIELD_OFFSET(Model, _impl_.vehicles_)}},
    // repeated .IVR8.VehicleClass vehicleClasses = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 4, PROTOBUF_FIELD_OFFSET(Model, _impl_.vehicleclasses_)}},
    // repeated .IVR8.VehicleCostClass vehicleCostClasses = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 5, PROTOBUF_FIELD_OFFSET(Model, _impl_.vehiclecostclasses_)}},
    // repeated .IVR8.TransitRule transitRules = 7;
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 6, PROTOBUF_FIELD_OFFSET(Model, _impl_.transitrules_)}},
    // repeated .IVR8.TransitGenerator transitGenerators = 8;
    {::_pbi::TcParser::FastMtR1,
     {66, 63, 7, PROTOBUF_FIELD_OFFSET(Model, _impl_.transitgenerators_)}},
    // repeated .IVR8.TaskSequence taskSequence = 9;
    {::_pbi::TcParser::FastMtR1,
     {74, 63, 8, PROTOBUF_FIELD_OFFSET(Model, _impl_.tasksequence_)}},
    // repeated .IVR8.Compartment compartments = 10;
    {::_pbi::TcParser::FastMtR1,
     {82, 63, 9, PROTOBUF_FIELD_OFFSET(Model, _impl_.compartments_)}},
    // repeated .IVR8.CompartmentSet compartmentSets = 11;
    {::_pbi::TcParser::FastMtR1,
     {90, 63, 10, PROTOBUF_FIELD_OFFSET(Model, _impl_.compartmentsets_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required .IVR8.DimensionConfiguration dimensions = 1;
    {PROTOBUF_FIELD_OFFSET(Model, _impl_.dimensions_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .IVR8.Location locations = 2;
    {PROTOBUF_FIELD_OFFSET(Model, _impl_.locations_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .IVR8.Job jobs = 3;
    {PROTOBUF_FIELD_OFFSET(Model, _impl_.jobs_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .IVR8.Vehicle vehicles = 4;
    {PROTOBUF_FIELD_OFFSET(Model, _impl_.vehicles_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .IVR8.VehicleClass vehicleClasses = 5;
    {PROTOBUF_FIELD_OFFSET(Model, _impl_.vehicleclasses_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .IVR8.VehicleCostClass vehicleCostClasses = 6;
    {PROTOBUF_FIELD_OFFSET(Model, _impl_.vehiclecostclasses_), -1, 5,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .IVR8.TransitRule transitRules = 7;
    {PROTOBUF_FIELD_OFFSET(Model, _impl_.transitrules_), -1, 6,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .IVR8.TransitGenerator transitGenerators = 8;
    {PROTOBUF_FIELD_OFFSET(Model, _impl_.transitgenerators_), -1, 7,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .IVR8.TaskSequence taskSequence = 9;
    {PROTOBUF_FIELD_OFFSET(Model, _impl_.tasksequence_), -1, 8,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .IVR8.Compartment compartments = 10;
    {PROTOBUF_FIELD_OFFSET(Model, _impl_.compartments_), -1, 9,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .IVR8.CompartmentSet compartmentSets = 11;
    {PROTOBUF_FIELD_OFFSET(Model, _impl_.compartmentsets_), -1, 10,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::IVR8::DimensionConfiguration>()},
    {::_pbi::TcParser::GetTable<::IVR8::Location>()},
    {::_pbi::TcParser::GetTable<::IVR8::Job>()},
    {::_pbi::TcParser::GetTable<::IVR8::Vehicle>()},
    {::_pbi::TcParser::GetTable<::IVR8::VehicleClass>()},
    {::_pbi::TcParser::GetTable<::IVR8::VehicleCostClass>()},
    {::_pbi::TcParser::GetTable<::IVR8::TransitRule>()},
    {::_pbi::TcParser::GetTable<::IVR8::TransitGenerator>()},
    {::_pbi::TcParser::GetTable<::IVR8::TaskSequence>()},
    {::_pbi::TcParser::GetTable<::IVR8::Compartment>()},
    {::_pbi::TcParser::GetTable<::IVR8::CompartmentSet>()},
  }}, {{
  }},
};

::uint8_t* Model::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IVR8.Model)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .IVR8.DimensionConfiguration dimensions = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::dimensions(this),
        _Internal::dimensions(this).GetCachedSize(), target, stream);
  }

  // repeated .IVR8.Location locations = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_locations_size()); i < n; i++) {
    const auto& repfield = this->_internal_locations().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .IVR8.Job jobs = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_jobs_size()); i < n; i++) {
    const auto& repfield = this->_internal_jobs().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .IVR8.Vehicle vehicles = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_vehicles_size()); i < n; i++) {
    const auto& repfield = this->_internal_vehicles().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .IVR8.VehicleClass vehicleClasses = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_vehicleclasses_size()); i < n; i++) {
    const auto& repfield = this->_internal_vehicleclasses().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .IVR8.VehicleCostClass vehicleCostClasses = 6;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_vehiclecostclasses_size()); i < n; i++) {
    const auto& repfield = this->_internal_vehiclecostclasses().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .IVR8.TransitRule transitRules = 7;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_transitrules_size()); i < n; i++) {
    const auto& repfield = this->_internal_transitrules().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(7, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .IVR8.TransitGenerator transitGenerators = 8;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_transitgenerators_size()); i < n; i++) {
    const auto& repfield = this->_internal_transitgenerators().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(8, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .IVR8.TaskSequence taskSequence = 9;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_tasksequence_size()); i < n; i++) {
    const auto& repfield = this->_internal_tasksequence().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(9, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .IVR8.Compartment compartments = 10;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_compartments_size()); i < n; i++) {
    const auto& repfield = this->_internal_compartments().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(10, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .IVR8.CompartmentSet compartmentSets = 11;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_compartmentsets_size()); i < n; i++) {
    const auto& repfield = this->_internal_compartmentsets().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(11, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVR8.Model)
  return target;
}

::size_t Model::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IVR8.Model)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .IVR8.Location locations = 2;
  total_size += 1UL * this->_internal_locations_size();
  for (const auto& msg : this->_internal_locations()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .IVR8.Job jobs = 3;
  total_size += 1UL * this->_internal_jobs_size();
  for (const auto& msg : this->_internal_jobs()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .IVR8.Vehicle vehicles = 4;
  total_size += 1UL * this->_internal_vehicles_size();
  for (const auto& msg : this->_internal_vehicles()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .IVR8.VehicleClass vehicleClasses = 5;
  total_size += 1UL * this->_internal_vehicleclasses_size();
  for (const auto& msg : this->_internal_vehicleclasses()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .IVR8.VehicleCostClass vehicleCostClasses = 6;
  total_size += 1UL * this->_internal_vehiclecostclasses_size();
  for (const auto& msg : this->_internal_vehiclecostclasses()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .IVR8.TransitRule transitRules = 7;
  total_size += 1UL * this->_internal_transitrules_size();
  for (const auto& msg : this->_internal_transitrules()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .IVR8.TransitGenerator transitGenerators = 8;
  total_size += 1UL * this->_internal_transitgenerators_size();
  for (const auto& msg : this->_internal_transitgenerators()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .IVR8.TaskSequence taskSequence = 9;
  total_size += 1UL * this->_internal_tasksequence_size();
  for (const auto& msg : this->_internal_tasksequence()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .IVR8.Compartment compartments = 10;
  total_size += 1UL * this->_internal_compartments_size();
  for (const auto& msg : this->_internal_compartments()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .IVR8.CompartmentSet compartmentSets = 11;
  total_size += 1UL * this->_internal_compartmentsets_size();
  for (const auto& msg : this->_internal_compartmentsets()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // required .IVR8.DimensionConfiguration dimensions = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.dimensions_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Model::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Model::MergeImpl
};
const ::google::protobuf::Message::ClassData*Model::GetClassData() const { return &_class_data_; }


void Model::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Model*>(&to_msg);
  auto& from = static_cast<const Model&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVR8.Model)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_locations()->MergeFrom(from._internal_locations());
  _this->_internal_mutable_jobs()->MergeFrom(from._internal_jobs());
  _this->_internal_mutable_vehicles()->MergeFrom(from._internal_vehicles());
  _this->_internal_mutable_vehicleclasses()->MergeFrom(from._internal_vehicleclasses());
  _this->_internal_mutable_vehiclecostclasses()->MergeFrom(from._internal_vehiclecostclasses());
  _this->_internal_mutable_transitrules()->MergeFrom(from._internal_transitrules());
  _this->_internal_mutable_transitgenerators()->MergeFrom(from._internal_transitgenerators());
  _this->_internal_mutable_tasksequence()->MergeFrom(from._internal_tasksequence());
  _this->_internal_mutable_compartments()->MergeFrom(from._internal_compartments());
  _this->_internal_mutable_compartmentsets()->MergeFrom(from._internal_compartmentsets());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_dimensions()->::IVR8::DimensionConfiguration::MergeFrom(
        from._internal_dimensions());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Model::CopyFrom(const Model& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVR8.Model)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Model::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(_internal_locations()))
    return false;
  if (!::google::protobuf::internal::AllAreInitialized(_internal_jobs()))
    return false;
  if (!::google::protobuf::internal::AllAreInitialized(_internal_vehicles()))
    return false;
  if (!::google::protobuf::internal::AllAreInitialized(_internal_vehicleclasses()))
    return false;
  if (!::google::protobuf::internal::AllAreInitialized(_internal_vehiclecostclasses()))
    return false;
  if (!::google::protobuf::internal::AllAreInitialized(_internal_transitrules()))
    return false;
  if (!::google::protobuf::internal::AllAreInitialized(_internal_transitgenerators()))
    return false;
  if (!::google::protobuf::internal::AllAreInitialized(_internal_tasksequence()))
    return false;
  if (!::google::protobuf::internal::AllAreInitialized(_internal_compartments()))
    return false;
  if (!::google::protobuf::internal::AllAreInitialized(_internal_compartmentsets()))
    return false;
  if ((_impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!_impl_.dimensions_->IsInitialized()) return false;
  }
  return true;
}

void Model::InternalSwap(Model* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.locations_.InternalSwap(&other->_impl_.locations_);
  _impl_.jobs_.InternalSwap(&other->_impl_.jobs_);
  _impl_.vehicles_.InternalSwap(&other->_impl_.vehicles_);
  _impl_.vehicleclasses_.InternalSwap(&other->_impl_.vehicleclasses_);
  _impl_.vehiclecostclasses_.InternalSwap(&other->_impl_.vehiclecostclasses_);
  _impl_.transitrules_.InternalSwap(&other->_impl_.transitrules_);
  _impl_.transitgenerators_.InternalSwap(&other->_impl_.transitgenerators_);
  _impl_.tasksequence_.InternalSwap(&other->_impl_.tasksequence_);
  _impl_.compartments_.InternalSwap(&other->_impl_.compartments_);
  _impl_.compartmentsets_.InternalSwap(&other->_impl_.compartmentsets_);
  swap(_impl_.dimensions_, other->_impl_.dimensions_);
}

::google::protobuf::Metadata Model::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter, &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
      file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[32]);
}
// ===================================================================

class SolveRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SolveRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SolveRequest, _impl_._has_bits_);
  static const ::IVR8::Model& model(const SolveRequest* msg);
  static void set_has_model(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_modelid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_solvetype(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::IVR8::Model& SolveRequest::_Internal::model(const SolveRequest* msg) {
  return *msg->_impl_.model_;
}
SolveRequest::SolveRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVR8.SolveRequest)
}
SolveRequest::SolveRequest(const SolveRequest& from) : ::google::protobuf::Message() {
  SolveRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.routes_){from._impl_.routes_},
      decltype(_impl_.modelid_){},
      decltype(_impl_.model_){nullptr},
      decltype(_impl_.solvetype_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.modelid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.modelid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.modelid_.Set(from._internal_modelid(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.model_ = new ::IVR8::Model(*from._impl_.model_);
  }
  _this->_impl_.solvetype_ = from._impl_.solvetype_;

  // @@protoc_insertion_point(copy_constructor:IVR8.SolveRequest)
}
inline void SolveRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.routes_){arena},
      decltype(_impl_.modelid_){},
      decltype(_impl_.model_){nullptr},
      decltype(_impl_.solvetype_){0},
  };
  _impl_.modelid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.modelid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
SolveRequest::~SolveRequest() {
  // @@protoc_insertion_point(destructor:IVR8.SolveRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SolveRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.routes_.~RepeatedPtrField();
  _impl_.modelid_.Destroy();
  if (this != internal_default_instance()) delete _impl_.model_;
}
void SolveRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SolveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:IVR8.SolveRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_routes()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.modelid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.model_ != nullptr);
      _impl_.model_->Clear();
    }
  }
  _impl_.solvetype_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SolveRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 3, 33, 2> SolveRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SolveRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SolveRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .IVR8.SolveRequest.SolveType solveType = 4 [default = Optimise];
    {::_pbi::TcParser::FastEr0S1,
     {32, 2, 2, PROTOBUF_FIELD_OFFSET(SolveRequest, _impl_.solvetype_)}},
    // optional .IVR8.Model model = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 1, 0, PROTOBUF_FIELD_OFFSET(SolveRequest, _impl_.model_)}},
    // optional string modelID = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(SolveRequest, _impl_.modelid_)}},
    // repeated .IVR8.TaskSequence routes = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(SolveRequest, _impl_.routes_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .IVR8.Model model = 1;
    {PROTOBUF_FIELD_OFFSET(SolveRequest, _impl_.model_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string modelID = 2;
    {PROTOBUF_FIELD_OFFSET(SolveRequest, _impl_.modelid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated .IVR8.TaskSequence routes = 3;
    {PROTOBUF_FIELD_OFFSET(SolveRequest, _impl_.routes_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .IVR8.SolveRequest.SolveType solveType = 4 [default = Optimise];
    {PROTOBUF_FIELD_OFFSET(SolveRequest, _impl_.solvetype_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
  }}, {{
    {::_pbi::TcParser::GetTable<::IVR8::Model>()},
    {::_pbi::TcParser::GetTable<::IVR8::TaskSequence>()},
    {0, 3},
  }}, {{
    "\21\0\7\0\0\0\0\0"
    "IVR8.SolveRequest"
    "modelID"
  }},
};

::uint8_t* SolveRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IVR8.SolveRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .IVR8.Model model = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::model(this),
        _Internal::model(this).GetCachedSize(), target, stream);
  }

  // optional string modelID = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_modelid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.SolveRequest.modelID");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // repeated .IVR8.TaskSequence routes = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_routes_size()); i < n; i++) {
    const auto& repfield = this->_internal_routes().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional .IVR8.SolveRequest.SolveType solveType = 4 [default = Optimise];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_solvetype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVR8.SolveRequest)
  return target;
}

::size_t SolveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IVR8.SolveRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .IVR8.TaskSequence routes = 3;
  total_size += 1UL * this->_internal_routes_size();
  for (const auto& msg : this->_internal_routes()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string modelID = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_modelid());
    }

    // optional .IVR8.Model model = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.model_);
    }

    // optional .IVR8.SolveRequest.SolveType solveType = 4 [default = Optimise];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_solvetype());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SolveRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SolveRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*SolveRequest::GetClassData() const { return &_class_data_; }


void SolveRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SolveRequest*>(&to_msg);
  auto& from = static_cast<const SolveRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVR8.SolveRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_routes()->MergeFrom(from._internal_routes());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_modelid(from._internal_modelid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_model()->::IVR8::Model::MergeFrom(
          from._internal_model());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.solvetype_ = from._impl_.solvetype_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SolveRequest::CopyFrom(const SolveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVR8.SolveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SolveRequest::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(_internal_routes()))
    return false;
  if ((_impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!_impl_.model_->IsInitialized()) return false;
  }
  return true;
}

void SolveRequest::InternalSwap(SolveRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.routes_.InternalSwap(&other->_impl_.routes_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.modelid_, lhs_arena,
                                       &other->_impl_.modelid_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SolveRequest, _impl_.solvetype_)
      + sizeof(SolveRequest::_impl_.solvetype_)
      - PROTOBUF_FIELD_OFFSET(SolveRequest, _impl_.model_)>(
          reinterpret_cast<char*>(&_impl_.model_),
          reinterpret_cast<char*>(&other->_impl_.model_));
}

::google::protobuf::Metadata SolveRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter, &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
      file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[33]);
}
// ===================================================================

class SolutionResponse_StopAttribute::_Internal {
 public:
  using HasBits = decltype(std::declval<SolutionResponse_StopAttribute>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SolutionResponse_StopAttribute, _impl_._has_bits_);
  static void set_has_dimid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_startvalue(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_endvalue(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_cost(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_slackvalue(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_slackcost(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_tardyvalue(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_tardycost(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x000000ff) ^ 0x000000ff) != 0;
  }
};

SolutionResponse_StopAttribute::SolutionResponse_StopAttribute(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVR8.SolutionResponse.StopAttribute)
}
SolutionResponse_StopAttribute::SolutionResponse_StopAttribute(const SolutionResponse_StopAttribute& from) : ::google::protobuf::Message() {
  SolutionResponse_StopAttribute* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.dimid_){},
      decltype(_impl_.startvalue_){},
      decltype(_impl_.endvalue_){},
      decltype(_impl_.cost_){},
      decltype(_impl_.slackvalue_){},
      decltype(_impl_.slackcost_){},
      decltype(_impl_.tardyvalue_){},
      decltype(_impl_.tardycost_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.dimid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dimid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.dimid_.Set(from._internal_dimid(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.startvalue_, &from._impl_.startvalue_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.tardycost_) -
    reinterpret_cast<char*>(&_impl_.startvalue_)) + sizeof(_impl_.tardycost_));

  // @@protoc_insertion_point(copy_constructor:IVR8.SolutionResponse.StopAttribute)
}
inline void SolutionResponse_StopAttribute::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.dimid_){},
      decltype(_impl_.startvalue_){0},
      decltype(_impl_.endvalue_){0},
      decltype(_impl_.cost_){0},
      decltype(_impl_.slackvalue_){0},
      decltype(_impl_.slackcost_){0},
      decltype(_impl_.tardyvalue_){0},
      decltype(_impl_.tardycost_){0},
  };
  _impl_.dimid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dimid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
SolutionResponse_StopAttribute::~SolutionResponse_StopAttribute() {
  // @@protoc_insertion_point(destructor:IVR8.SolutionResponse.StopAttribute)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SolutionResponse_StopAttribute::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.dimid_.Destroy();
}
void SolutionResponse_StopAttribute::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SolutionResponse_StopAttribute::Clear() {
// @@protoc_insertion_point(message_clear_start:IVR8.SolutionResponse.StopAttribute)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.dimid_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x000000feu) {
    ::memset(&_impl_.startvalue_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.tardycost_) -
        reinterpret_cast<char*>(&_impl_.startvalue_)) + sizeof(_impl_.tardycost_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SolutionResponse_StopAttribute::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 57, 2> SolutionResponse_StopAttribute::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SolutionResponse_StopAttribute, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SolutionResponse_StopAttribute_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required float tardyCost = 8;
    {::_pbi::TcParser::FastF32S1,
     {69, 7, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_StopAttribute, _impl_.tardycost_)}},
    // required string dimId = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_StopAttribute, _impl_.dimid_)}},
    // required float startValue = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_StopAttribute, _impl_.startvalue_)}},
    // required float endValue = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_StopAttribute, _impl_.endvalue_)}},
    // required float cost = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 3, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_StopAttribute, _impl_.cost_)}},
    // required float slackValue = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 4, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_StopAttribute, _impl_.slackvalue_)}},
    // required float slackCost = 6;
    {::_pbi::TcParser::FastF32S1,
     {53, 5, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_StopAttribute, _impl_.slackcost_)}},
    // required float tardyValue = 7;
    {::_pbi::TcParser::FastF32S1,
     {61, 6, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_StopAttribute, _impl_.tardyvalue_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string dimId = 1;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_StopAttribute, _impl_.dimid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required float startValue = 2;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_StopAttribute, _impl_.startvalue_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float endValue = 3;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_StopAttribute, _impl_.endvalue_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float cost = 4;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_StopAttribute, _impl_.cost_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float slackValue = 5;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_StopAttribute, _impl_.slackvalue_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float slackCost = 6;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_StopAttribute, _impl_.slackcost_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float tardyValue = 7;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_StopAttribute, _impl_.tardyvalue_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float tardyCost = 8;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_StopAttribute, _impl_.tardycost_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
    "\43\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "IVR8.SolutionResponse.StopAttribute"
    "dimId"
  }},
};

::uint8_t* SolutionResponse_StopAttribute::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IVR8.SolutionResponse.StopAttribute)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string dimId = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_dimid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.SolutionResponse.StopAttribute.dimId");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required float startValue = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_startvalue(), target);
  }

  // required float endValue = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_endvalue(), target);
  }

  // required float cost = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_cost(), target);
  }

  // required float slackValue = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this->_internal_slackvalue(), target);
  }

  // required float slackCost = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        6, this->_internal_slackcost(), target);
  }

  // required float tardyValue = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        7, this->_internal_tardyvalue(), target);
  }

  // required float tardyCost = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        8, this->_internal_tardycost(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVR8.SolutionResponse.StopAttribute)
  return target;
}

::size_t SolutionResponse_StopAttribute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IVR8.SolutionResponse.StopAttribute)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // required string dimId = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_dimid());
    }

    // required float startValue = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 5;
    }

    // required float endValue = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 5;
    }

    // required float cost = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 5;
    }

    // required float slackValue = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 5;
    }

    // required float slackCost = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 5;
    }

    // required float tardyValue = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 5;
    }

    // required float tardyCost = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 5;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SolutionResponse_StopAttribute::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SolutionResponse_StopAttribute::MergeImpl
};
const ::google::protobuf::Message::ClassData*SolutionResponse_StopAttribute::GetClassData() const { return &_class_data_; }


void SolutionResponse_StopAttribute::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SolutionResponse_StopAttribute*>(&to_msg);
  auto& from = static_cast<const SolutionResponse_StopAttribute&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVR8.SolutionResponse.StopAttribute)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_dimid(from._internal_dimid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.startvalue_ = from._impl_.startvalue_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.endvalue_ = from._impl_.endvalue_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.cost_ = from._impl_.cost_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.slackvalue_ = from._impl_.slackvalue_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.slackcost_ = from._impl_.slackcost_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.tardyvalue_ = from._impl_.tardyvalue_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.tardycost_ = from._impl_.tardycost_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SolutionResponse_StopAttribute::CopyFrom(const SolutionResponse_StopAttribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVR8.SolutionResponse.StopAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SolutionResponse_StopAttribute::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

void SolutionResponse_StopAttribute::InternalSwap(SolutionResponse_StopAttribute* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dimid_, lhs_arena,
                                       &other->_impl_.dimid_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SolutionResponse_StopAttribute, _impl_.tardycost_)
      + sizeof(SolutionResponse_StopAttribute::_impl_.tardycost_)
      - PROTOBUF_FIELD_OFFSET(SolutionResponse_StopAttribute, _impl_.startvalue_)>(
          reinterpret_cast<char*>(&_impl_.startvalue_),
          reinterpret_cast<char*>(&other->_impl_.startvalue_));
}

::google::protobuf::Metadata SolutionResponse_StopAttribute::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter, &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
      file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[34]);
}
// ===================================================================

class SolutionResponse_InterStopAttribute::_Internal {
 public:
  using HasBits = decltype(std::declval<SolutionResponse_InterStopAttribute>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStopAttribute, _impl_._has_bits_);
  static void set_has_dimid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_startvalue(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_endvalue(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_cost(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000000f) ^ 0x0000000f) != 0;
  }
};

SolutionResponse_InterStopAttribute::SolutionResponse_InterStopAttribute(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVR8.SolutionResponse.InterStopAttribute)
}
SolutionResponse_InterStopAttribute::SolutionResponse_InterStopAttribute(const SolutionResponse_InterStopAttribute& from) : ::google::protobuf::Message() {
  SolutionResponse_InterStopAttribute* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.dimid_){},
      decltype(_impl_.startvalue_){},
      decltype(_impl_.endvalue_){},
      decltype(_impl_.cost_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.dimid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dimid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.dimid_.Set(from._internal_dimid(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.startvalue_, &from._impl_.startvalue_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.cost_) -
    reinterpret_cast<char*>(&_impl_.startvalue_)) + sizeof(_impl_.cost_));

  // @@protoc_insertion_point(copy_constructor:IVR8.SolutionResponse.InterStopAttribute)
}
inline void SolutionResponse_InterStopAttribute::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.dimid_){},
      decltype(_impl_.startvalue_){0},
      decltype(_impl_.endvalue_){0},
      decltype(_impl_.cost_){0},
  };
  _impl_.dimid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dimid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
SolutionResponse_InterStopAttribute::~SolutionResponse_InterStopAttribute() {
  // @@protoc_insertion_point(destructor:IVR8.SolutionResponse.InterStopAttribute)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SolutionResponse_InterStopAttribute::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.dimid_.Destroy();
}
void SolutionResponse_InterStopAttribute::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SolutionResponse_InterStopAttribute::Clear() {
// @@protoc_insertion_point(message_clear_start:IVR8.SolutionResponse.InterStopAttribute)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.dimid_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&_impl_.startvalue_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.cost_) -
        reinterpret_cast<char*>(&_impl_.startvalue_)) + sizeof(_impl_.cost_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SolutionResponse_InterStopAttribute::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 54, 2> SolutionResponse_InterStopAttribute::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStopAttribute, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SolutionResponse_InterStopAttribute_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required float cost = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 3, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStopAttribute, _impl_.cost_)}},
    // required string dimId = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStopAttribute, _impl_.dimid_)}},
    // required float startValue = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStopAttribute, _impl_.startvalue_)}},
    // required float endValue = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStopAttribute, _impl_.endvalue_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string dimId = 1;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStopAttribute, _impl_.dimid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required float startValue = 2;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStopAttribute, _impl_.startvalue_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float endValue = 3;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStopAttribute, _impl_.endvalue_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float cost = 4;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStopAttribute, _impl_.cost_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
    "\50\5\0\0\0\0\0\0"
    "IVR8.SolutionResponse.InterStopAttribute"
    "dimId"
  }},
};

::uint8_t* SolutionResponse_InterStopAttribute::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IVR8.SolutionResponse.InterStopAttribute)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string dimId = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_dimid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.SolutionResponse.InterStopAttribute.dimId");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required float startValue = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_startvalue(), target);
  }

  // required float endValue = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_endvalue(), target);
  }

  // required float cost = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_cost(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVR8.SolutionResponse.InterStopAttribute)
  return target;
}

::size_t SolutionResponse_InterStopAttribute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IVR8.SolutionResponse.InterStopAttribute)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // required string dimId = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_dimid());
    }

    // required float startValue = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 5;
    }

    // required float endValue = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 5;
    }

    // required float cost = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 5;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SolutionResponse_InterStopAttribute::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SolutionResponse_InterStopAttribute::MergeImpl
};
const ::google::protobuf::Message::ClassData*SolutionResponse_InterStopAttribute::GetClassData() const { return &_class_data_; }


void SolutionResponse_InterStopAttribute::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SolutionResponse_InterStopAttribute*>(&to_msg);
  auto& from = static_cast<const SolutionResponse_InterStopAttribute&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVR8.SolutionResponse.InterStopAttribute)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_dimid(from._internal_dimid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.startvalue_ = from._impl_.startvalue_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.endvalue_ = from._impl_.endvalue_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.cost_ = from._impl_.cost_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SolutionResponse_InterStopAttribute::CopyFrom(const SolutionResponse_InterStopAttribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVR8.SolutionResponse.InterStopAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SolutionResponse_InterStopAttribute::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

void SolutionResponse_InterStopAttribute::InternalSwap(SolutionResponse_InterStopAttribute* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dimid_, lhs_arena,
                                       &other->_impl_.dimid_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStopAttribute, _impl_.cost_)
      + sizeof(SolutionResponse_InterStopAttribute::_impl_.cost_)
      - PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStopAttribute, _impl_.startvalue_)>(
          reinterpret_cast<char*>(&_impl_.startvalue_),
          reinterpret_cast<char*>(&other->_impl_.startvalue_));
}

::google::protobuf::Metadata SolutionResponse_InterStopAttribute::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter, &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
      file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[35]);
}
// ===================================================================

class SolutionResponse_Stop::_Internal {
 public:
  using HasBits = decltype(std::declval<SolutionResponse_Stop>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SolutionResponse_Stop, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_sequence(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_locationid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_taskid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_jobid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_compartmentid(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000037) ^ 0x00000037) != 0;
  }
};

SolutionResponse_Stop::SolutionResponse_Stop(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVR8.SolutionResponse.Stop)
}
SolutionResponse_Stop::SolutionResponse_Stop(const SolutionResponse_Stop& from) : ::google::protobuf::Message() {
  SolutionResponse_Stop* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.attributes_){from._impl_.attributes_},
      decltype(_impl_.locationid_){},
      decltype(_impl_.taskid_){},
      decltype(_impl_.jobid_){},
      decltype(_impl_.compartmentid_){},
      decltype(_impl_.id_){},
      decltype(_impl_.sequence_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.locationid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.locationid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.locationid_.Set(from._internal_locationid(), _this->GetArenaForAllocation());
  }
  _impl_.taskid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.taskid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.taskid_.Set(from._internal_taskid(), _this->GetArenaForAllocation());
  }
  _impl_.jobid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.jobid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.jobid_.Set(from._internal_jobid(), _this->GetArenaForAllocation());
  }
  _impl_.compartmentid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.compartmentid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000008u) != 0) {
    _this->_impl_.compartmentid_.Set(from._internal_compartmentid(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.id_, &from._impl_.id_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.sequence_) -
    reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.sequence_));

  // @@protoc_insertion_point(copy_constructor:IVR8.SolutionResponse.Stop)
}
inline void SolutionResponse_Stop::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.attributes_){arena},
      decltype(_impl_.locationid_){},
      decltype(_impl_.taskid_){},
      decltype(_impl_.jobid_){},
      decltype(_impl_.compartmentid_){},
      decltype(_impl_.id_){0},
      decltype(_impl_.sequence_){0},
  };
  _impl_.locationid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.locationid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.taskid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.taskid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.jobid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.jobid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.compartmentid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.compartmentid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
SolutionResponse_Stop::~SolutionResponse_Stop() {
  // @@protoc_insertion_point(destructor:IVR8.SolutionResponse.Stop)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SolutionResponse_Stop::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.attributes_.~RepeatedPtrField();
  _impl_.locationid_.Destroy();
  _impl_.taskid_.Destroy();
  _impl_.jobid_.Destroy();
  _impl_.compartmentid_.Destroy();
}
void SolutionResponse_Stop::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SolutionResponse_Stop::Clear() {
// @@protoc_insertion_point(message_clear_start:IVR8.SolutionResponse.Stop)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_attributes()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.locationid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.taskid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.jobid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.compartmentid_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000030u) {
    ::memset(&_impl_.id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.sequence_) -
        reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.sequence_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SolutionResponse_Stop::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 69, 2> SolutionResponse_Stop::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SolutionResponse_Stop, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SolutionResponse_Stop_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required int32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SolutionResponse_Stop, _impl_.id_), 4>(),
     {8, 4, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_Stop, _impl_.id_)}},
    // required int32 sequence = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SolutionResponse_Stop, _impl_.sequence_), 5>(),
     {16, 5, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_Stop, _impl_.sequence_)}},
    // required string locationId = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_Stop, _impl_.locationid_)}},
    // required string taskId = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_Stop, _impl_.taskid_)}},
    // required string jobId = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 2, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_Stop, _impl_.jobid_)}},
    // repeated .IVR8.SolutionResponse.StopAttribute attributes = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_Stop, _impl_.attributes_)}},
    // optional string compartmentId = 7;
    {::_pbi::TcParser::FastSS1,
     {58, 3, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_Stop, _impl_.compartmentid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_Stop, _impl_.id_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required int32 sequence = 2;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_Stop, _impl_.sequence_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required string locationId = 3;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_Stop, _impl_.locationid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string taskId = 4;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_Stop, _impl_.taskid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string jobId = 5;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_Stop, _impl_.jobid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated .IVR8.SolutionResponse.StopAttribute attributes = 6;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_Stop, _impl_.attributes_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string compartmentId = 7;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_Stop, _impl_.compartmentid_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::IVR8::SolutionResponse_StopAttribute>()},
  }}, {{
    "\32\0\0\12\6\5\0\15"
    "IVR8.SolutionResponse.Stop"
    "locationId"
    "taskId"
    "jobId"
    "compartmentId"
  }},
};

::uint8_t* SolutionResponse_Stop::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IVR8.SolutionResponse.Stop)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  // required int32 sequence = 2;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_sequence(), target);
  }

  // required string locationId = 3;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_locationid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.SolutionResponse.Stop.locationId");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // required string taskId = 4;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_taskid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.SolutionResponse.Stop.taskId");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // required string jobId = 5;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_jobid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.SolutionResponse.Stop.jobId");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // repeated .IVR8.SolutionResponse.StopAttribute attributes = 6;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_attributes_size()); i < n; i++) {
    const auto& repfield = this->_internal_attributes().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional string compartmentId = 7;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_compartmentid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.SolutionResponse.Stop.compartmentId");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVR8.SolutionResponse.Stop)
  return target;
}

::size_t SolutionResponse_Stop::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IVR8.SolutionResponse.Stop)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .IVR8.SolutionResponse.StopAttribute attributes = 6;
  total_size += 1UL * this->_internal_attributes_size();
  for (const auto& msg : this->_internal_attributes()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // required string locationId = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_locationid());
    }

    // required string taskId = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_taskid());
    }

    // required string jobId = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_jobid());
    }

  }
  // optional string compartmentId = 7;
  if (cached_has_bits & 0x00000008u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_compartmentid());
  }

  if (cached_has_bits & 0x00000030u) {
    // required int32 id = 1;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_id());
    }

    // required int32 sequence = 2;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_sequence());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SolutionResponse_Stop::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SolutionResponse_Stop::MergeImpl
};
const ::google::protobuf::Message::ClassData*SolutionResponse_Stop::GetClassData() const { return &_class_data_; }


void SolutionResponse_Stop::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SolutionResponse_Stop*>(&to_msg);
  auto& from = static_cast<const SolutionResponse_Stop&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVR8.SolutionResponse.Stop)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_attributes()->MergeFrom(from._internal_attributes());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_locationid(from._internal_locationid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_taskid(from._internal_taskid());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_jobid(from._internal_jobid());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_compartmentid(from._internal_compartmentid());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.id_ = from._impl_.id_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.sequence_ = from._impl_.sequence_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SolutionResponse_Stop::CopyFrom(const SolutionResponse_Stop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVR8.SolutionResponse.Stop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SolutionResponse_Stop::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(_internal_attributes()))
    return false;
  return true;
}

void SolutionResponse_Stop::InternalSwap(SolutionResponse_Stop* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.attributes_.InternalSwap(&other->_impl_.attributes_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.locationid_, lhs_arena,
                                       &other->_impl_.locationid_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.taskid_, lhs_arena,
                                       &other->_impl_.taskid_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.jobid_, lhs_arena,
                                       &other->_impl_.jobid_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.compartmentid_, lhs_arena,
                                       &other->_impl_.compartmentid_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SolutionResponse_Stop, _impl_.sequence_)
      + sizeof(SolutionResponse_Stop::_impl_.sequence_)
      - PROTOBUF_FIELD_OFFSET(SolutionResponse_Stop, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata SolutionResponse_Stop::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter, &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
      file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[36]);
}
// ===================================================================

class SolutionResponse_InterStop::_Internal {
 public:
  using HasBits = decltype(std::declval<SolutionResponse_InterStop>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStop, _impl_._has_bits_);
  static void set_has_fromstopid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_tostopid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

SolutionResponse_InterStop::SolutionResponse_InterStop(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVR8.SolutionResponse.InterStop)
}
SolutionResponse_InterStop::SolutionResponse_InterStop(const SolutionResponse_InterStop& from) : ::google::protobuf::Message() {
  SolutionResponse_InterStop* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.attributes_){from._impl_.attributes_},
      decltype(_impl_.routesegments_){from._impl_.routesegments_},
      decltype(_impl_.fromstopid_){},
      decltype(_impl_.tostopid_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  ::memcpy(&_impl_.fromstopid_, &from._impl_.fromstopid_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.tostopid_) -
    reinterpret_cast<char*>(&_impl_.fromstopid_)) + sizeof(_impl_.tostopid_));

  // @@protoc_insertion_point(copy_constructor:IVR8.SolutionResponse.InterStop)
}
inline void SolutionResponse_InterStop::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.attributes_){arena},
      decltype(_impl_.routesegments_){arena},
      decltype(_impl_.fromstopid_){0},
      decltype(_impl_.tostopid_){0},
  };
}
SolutionResponse_InterStop::~SolutionResponse_InterStop() {
  // @@protoc_insertion_point(destructor:IVR8.SolutionResponse.InterStop)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SolutionResponse_InterStop::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.attributes_.~RepeatedPtrField();
  _impl_.routesegments_.~RepeatedPtrField();
}
void SolutionResponse_InterStop::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SolutionResponse_InterStop::Clear() {
// @@protoc_insertion_point(message_clear_start:IVR8.SolutionResponse.InterStop)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_attributes()->Clear();
  _internal_mutable_routesegments()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.fromstopid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.tostopid_) -
        reinterpret_cast<char*>(&_impl_.fromstopid_)) + sizeof(_impl_.tostopid_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SolutionResponse_InterStop::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 0, 2> SolutionResponse_InterStop::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStop, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SolutionResponse_InterStop_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .IVR8.Geocode routeSegments = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 1, PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStop, _impl_.routesegments_)}},
    // required int32 fromStopId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SolutionResponse_InterStop, _impl_.fromstopid_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStop, _impl_.fromstopid_)}},
    // required int32 toStopId = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SolutionResponse_InterStop, _impl_.tostopid_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStop, _impl_.tostopid_)}},
    // repeated .IVR8.SolutionResponse.InterStopAttribute attributes = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStop, _impl_.attributes_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required int32 fromStopId = 1;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStop, _impl_.fromstopid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required int32 toStopId = 2;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStop, _impl_.tostopid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated .IVR8.SolutionResponse.InterStopAttribute attributes = 3;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStop, _impl_.attributes_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .IVR8.Geocode routeSegments = 4;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStop, _impl_.routesegments_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::IVR8::SolutionResponse_InterStopAttribute>()},
    {::_pbi::TcParser::GetTable<::IVR8::Geocode>()},
  }}, {{
  }},
};

::uint8_t* SolutionResponse_InterStop::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IVR8.SolutionResponse.InterStop)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int32 fromStopId = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_fromstopid(), target);
  }

  // required int32 toStopId = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_tostopid(), target);
  }

  // repeated .IVR8.SolutionResponse.InterStopAttribute attributes = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_attributes_size()); i < n; i++) {
    const auto& repfield = this->_internal_attributes().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .IVR8.Geocode routeSegments = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_routesegments_size()); i < n; i++) {
    const auto& repfield = this->_internal_routesegments().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVR8.SolutionResponse.InterStop)
  return target;
}

::size_t SolutionResponse_InterStop::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IVR8.SolutionResponse.InterStop)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .IVR8.SolutionResponse.InterStopAttribute attributes = 3;
  total_size += 1UL * this->_internal_attributes_size();
  for (const auto& msg : this->_internal_attributes()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .IVR8.Geocode routeSegments = 4;
  total_size += 1UL * this->_internal_routesegments_size();
  for (const auto& msg : this->_internal_routesegments()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required int32 fromStopId = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_fromstopid());
    }

    // required int32 toStopId = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_tostopid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SolutionResponse_InterStop::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SolutionResponse_InterStop::MergeImpl
};
const ::google::protobuf::Message::ClassData*SolutionResponse_InterStop::GetClassData() const { return &_class_data_; }


void SolutionResponse_InterStop::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SolutionResponse_InterStop*>(&to_msg);
  auto& from = static_cast<const SolutionResponse_InterStop&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVR8.SolutionResponse.InterStop)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_attributes()->MergeFrom(from._internal_attributes());
  _this->_internal_mutable_routesegments()->MergeFrom(from._internal_routesegments());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.fromstopid_ = from._impl_.fromstopid_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.tostopid_ = from._impl_.tostopid_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SolutionResponse_InterStop::CopyFrom(const SolutionResponse_InterStop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVR8.SolutionResponse.InterStop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SolutionResponse_InterStop::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(_internal_attributes()))
    return false;
  if (!::google::protobuf::internal::AllAreInitialized(_internal_routesegments()))
    return false;
  return true;
}

void SolutionResponse_InterStop::InternalSwap(SolutionResponse_InterStop* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.attributes_.InternalSwap(&other->_impl_.attributes_);
  _impl_.routesegments_.InternalSwap(&other->_impl_.routesegments_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStop, _impl_.tostopid_)
      + sizeof(SolutionResponse_InterStop::_impl_.tostopid_)
      - PROTOBUF_FIELD_OFFSET(SolutionResponse_InterStop, _impl_.fromstopid_)>(
          reinterpret_cast<char*>(&_impl_.fromstopid_),
          reinterpret_cast<char*>(&other->_impl_.fromstopid_));
}

::google::protobuf::Metadata SolutionResponse_InterStop::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter, &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
      file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[37]);
}
// ===================================================================

class SolutionResponse_TransitRuleAttribute::_Internal {
 public:
  using HasBits = decltype(std::declval<SolutionResponse_TransitRuleAttribute>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SolutionResponse_TransitRuleAttribute, _impl_._has_bits_);
  static void set_has_ruleid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_dimid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_fromstopid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_tostopid(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_startvalue(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_endvalue(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_cost(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000007f) ^ 0x0000007f) != 0;
  }
};

SolutionResponse_TransitRuleAttribute::SolutionResponse_TransitRuleAttribute(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVR8.SolutionResponse.TransitRuleAttribute)
}
SolutionResponse_TransitRuleAttribute::SolutionResponse_TransitRuleAttribute(const SolutionResponse_TransitRuleAttribute& from) : ::google::protobuf::Message() {
  SolutionResponse_TransitRuleAttribute* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.ruleid_){},
      decltype(_impl_.dimid_){},
      decltype(_impl_.fromstopid_){},
      decltype(_impl_.tostopid_){},
      decltype(_impl_.startvalue_){},
      decltype(_impl_.endvalue_){},
      decltype(_impl_.cost_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.ruleid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.ruleid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.ruleid_.Set(from._internal_ruleid(), _this->GetArenaForAllocation());
  }
  _impl_.dimid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dimid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.dimid_.Set(from._internal_dimid(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.fromstopid_, &from._impl_.fromstopid_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.cost_) -
    reinterpret_cast<char*>(&_impl_.fromstopid_)) + sizeof(_impl_.cost_));

  // @@protoc_insertion_point(copy_constructor:IVR8.SolutionResponse.TransitRuleAttribute)
}
inline void SolutionResponse_TransitRuleAttribute::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.ruleid_){},
      decltype(_impl_.dimid_){},
      decltype(_impl_.fromstopid_){0},
      decltype(_impl_.tostopid_){0},
      decltype(_impl_.startvalue_){0},
      decltype(_impl_.endvalue_){0},
      decltype(_impl_.cost_){0},
  };
  _impl_.ruleid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.ruleid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.dimid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dimid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
SolutionResponse_TransitRuleAttribute::~SolutionResponse_TransitRuleAttribute() {
  // @@protoc_insertion_point(destructor:IVR8.SolutionResponse.TransitRuleAttribute)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SolutionResponse_TransitRuleAttribute::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.ruleid_.Destroy();
  _impl_.dimid_.Destroy();
}
void SolutionResponse_TransitRuleAttribute::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SolutionResponse_TransitRuleAttribute::Clear() {
// @@protoc_insertion_point(message_clear_start:IVR8.SolutionResponse.TransitRuleAttribute)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.ruleid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.dimid_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000007cu) {
    ::memset(&_impl_.fromstopid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.cost_) -
        reinterpret_cast<char*>(&_impl_.fromstopid_)) + sizeof(_impl_.cost_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SolutionResponse_TransitRuleAttribute::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 62, 2> SolutionResponse_TransitRuleAttribute::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SolutionResponse_TransitRuleAttribute, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SolutionResponse_TransitRuleAttribute_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string ruleId = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_TransitRuleAttribute, _impl_.ruleid_)}},
    // required string dimId = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_TransitRuleAttribute, _impl_.dimid_)}},
    // required int32 fromStopId = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SolutionResponse_TransitRuleAttribute, _impl_.fromstopid_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_TransitRuleAttribute, _impl_.fromstopid_)}},
    // required int32 toStopId = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SolutionResponse_TransitRuleAttribute, _impl_.tostopid_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_TransitRuleAttribute, _impl_.tostopid_)}},
    // required float startValue = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 4, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_TransitRuleAttribute, _impl_.startvalue_)}},
    // required float endValue = 6;
    {::_pbi::TcParser::FastF32S1,
     {53, 5, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_TransitRuleAttribute, _impl_.endvalue_)}},
    // required float cost = 7;
    {::_pbi::TcParser::FastF32S1,
     {61, 6, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_TransitRuleAttribute, _impl_.cost_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string ruleId = 1;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_TransitRuleAttribute, _impl_.ruleid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string dimId = 2;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_TransitRuleAttribute, _impl_.dimid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required int32 fromStopId = 3;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_TransitRuleAttribute, _impl_.fromstopid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required int32 toStopId = 4;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_TransitRuleAttribute, _impl_.tostopid_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required float startValue = 5;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_TransitRuleAttribute, _impl_.startvalue_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float endValue = 6;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_TransitRuleAttribute, _impl_.endvalue_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float cost = 7;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_TransitRuleAttribute, _impl_.cost_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
    "\52\6\5\0\0\0\0\0"
    "IVR8.SolutionResponse.TransitRuleAttribute"
    "ruleId"
    "dimId"
  }},
};

::uint8_t* SolutionResponse_TransitRuleAttribute::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IVR8.SolutionResponse.TransitRuleAttribute)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string ruleId = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_ruleid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.SolutionResponse.TransitRuleAttribute.ruleId");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required string dimId = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_dimid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.SolutionResponse.TransitRuleAttribute.dimId");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // required int32 fromStopId = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_fromstopid(), target);
  }

  // required int32 toStopId = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_tostopid(), target);
  }

  // required float startValue = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this->_internal_startvalue(), target);
  }

  // required float endValue = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        6, this->_internal_endvalue(), target);
  }

  // required float cost = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        7, this->_internal_cost(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVR8.SolutionResponse.TransitRuleAttribute)
  return target;
}

::size_t SolutionResponse_TransitRuleAttribute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IVR8.SolutionResponse.TransitRuleAttribute)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // required string ruleId = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_ruleid());
    }

    // required string dimId = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_dimid());
    }

    // required int32 fromStopId = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_fromstopid());
    }

    // required int32 toStopId = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_tostopid());
    }

    // required float startValue = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 5;
    }

    // required float endValue = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 5;
    }

    // required float cost = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 5;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SolutionResponse_TransitRuleAttribute::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SolutionResponse_TransitRuleAttribute::MergeImpl
};
const ::google::protobuf::Message::ClassData*SolutionResponse_TransitRuleAttribute::GetClassData() const { return &_class_data_; }


void SolutionResponse_TransitRuleAttribute::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SolutionResponse_TransitRuleAttribute*>(&to_msg);
  auto& from = static_cast<const SolutionResponse_TransitRuleAttribute&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVR8.SolutionResponse.TransitRuleAttribute)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_ruleid(from._internal_ruleid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_dimid(from._internal_dimid());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.fromstopid_ = from._impl_.fromstopid_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.tostopid_ = from._impl_.tostopid_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.startvalue_ = from._impl_.startvalue_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.endvalue_ = from._impl_.endvalue_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.cost_ = from._impl_.cost_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SolutionResponse_TransitRuleAttribute::CopyFrom(const SolutionResponse_TransitRuleAttribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVR8.SolutionResponse.TransitRuleAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SolutionResponse_TransitRuleAttribute::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

void SolutionResponse_TransitRuleAttribute::InternalSwap(SolutionResponse_TransitRuleAttribute* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ruleid_, lhs_arena,
                                       &other->_impl_.ruleid_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dimid_, lhs_arena,
                                       &other->_impl_.dimid_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SolutionResponse_TransitRuleAttribute, _impl_.cost_)
      + sizeof(SolutionResponse_TransitRuleAttribute::_impl_.cost_)
      - PROTOBUF_FIELD_OFFSET(SolutionResponse_TransitRuleAttribute, _impl_.fromstopid_)>(
          reinterpret_cast<char*>(&_impl_.fromstopid_),
          reinterpret_cast<char*>(&other->_impl_.fromstopid_));
}

::google::protobuf::Metadata SolutionResponse_TransitRuleAttribute::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter, &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
      file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[38]);
}
// ===================================================================

class SolutionResponse_Route::_Internal {
 public:
  using HasBits = decltype(std::declval<SolutionResponse_Route>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SolutionResponse_Route, _impl_._has_bits_);
  static void set_has_vehicleid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

SolutionResponse_Route::SolutionResponse_Route(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVR8.SolutionResponse.Route)
}
SolutionResponse_Route::SolutionResponse_Route(const SolutionResponse_Route& from) : ::google::protobuf::Message() {
  SolutionResponse_Route* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.stops_){from._impl_.stops_},
      decltype(_impl_.interstops_){from._impl_.interstops_},
      decltype(_impl_.fixedcost_){from._impl_.fixedcost_},
      decltype(_impl_.transitruleattributes_){from._impl_.transitruleattributes_},
      decltype(_impl_.vehicleid_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.vehicleid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.vehicleid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.vehicleid_.Set(from._internal_vehicleid(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:IVR8.SolutionResponse.Route)
}
inline void SolutionResponse_Route::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.stops_){arena},
      decltype(_impl_.interstops_){arena},
      decltype(_impl_.fixedcost_){arena},
      decltype(_impl_.transitruleattributes_){arena},
      decltype(_impl_.vehicleid_){},
  };
  _impl_.vehicleid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.vehicleid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
SolutionResponse_Route::~SolutionResponse_Route() {
  // @@protoc_insertion_point(destructor:IVR8.SolutionResponse.Route)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SolutionResponse_Route::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.stops_.~RepeatedPtrField();
  _impl_.interstops_.~RepeatedPtrField();
  _impl_.fixedcost_.~RepeatedField();
  _impl_.transitruleattributes_.~RepeatedPtrField();
  _impl_.vehicleid_.Destroy();
}
void SolutionResponse_Route::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SolutionResponse_Route::Clear() {
// @@protoc_insertion_point(message_clear_start:IVR8.SolutionResponse.Route)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_stops()->Clear();
  _internal_mutable_interstops()->Clear();
  _internal_mutable_fixedcost()->Clear();
  _internal_mutable_transitruleattributes()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.vehicleid_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SolutionResponse_Route::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 3, 45, 2> SolutionResponse_Route::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SolutionResponse_Route, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SolutionResponse_Route_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string vehicleId = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_Route, _impl_.vehicleid_)}},
    // repeated .IVR8.SolutionResponse.Stop stops = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_Route, _impl_.stops_)}},
    // repeated .IVR8.SolutionResponse.InterStop interStops = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(SolutionResponse_Route, _impl_.interstops_)}},
    // repeated float fixedCost = 4;
    {::_pbi::TcParser::FastF32R1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_Route, _impl_.fixedcost_)}},
    // repeated .IVR8.SolutionResponse.TransitRuleAttribute transitRuleAttributes = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 2, PROTOBUF_FIELD_OFFSET(SolutionResponse_Route, _impl_.transitruleattributes_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required string vehicleId = 1;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_Route, _impl_.vehicleid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated .IVR8.SolutionResponse.Stop stops = 2;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_Route, _impl_.stops_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .IVR8.SolutionResponse.InterStop interStops = 3;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_Route, _impl_.interstops_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated float fixedCost = 4;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_Route, _impl_.fixedcost_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kFloat)},
    // repeated .IVR8.SolutionResponse.TransitRuleAttribute transitRuleAttributes = 5;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_Route, _impl_.transitruleattributes_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::IVR8::SolutionResponse_Stop>()},
    {::_pbi::TcParser::GetTable<::IVR8::SolutionResponse_InterStop>()},
    {::_pbi::TcParser::GetTable<::IVR8::SolutionResponse_TransitRuleAttribute>()},
  }}, {{
    "\33\11\0\0\0\0\0\0"
    "IVR8.SolutionResponse.Route"
    "vehicleId"
  }},
};

::uint8_t* SolutionResponse_Route::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IVR8.SolutionResponse.Route)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string vehicleId = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_vehicleid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.SolutionResponse.Route.vehicleId");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .IVR8.SolutionResponse.Stop stops = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_stops_size()); i < n; i++) {
    const auto& repfield = this->_internal_stops().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .IVR8.SolutionResponse.InterStop interStops = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_interstops_size()); i < n; i++) {
    const auto& repfield = this->_internal_interstops().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated float fixedCost = 4;
  for (int i = 0, n = this->_internal_fixedcost_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_fixedcost().Get(i), target);
  }

  // repeated .IVR8.SolutionResponse.TransitRuleAttribute transitRuleAttributes = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_transitruleattributes_size()); i < n; i++) {
    const auto& repfield = this->_internal_transitruleattributes().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVR8.SolutionResponse.Route)
  return target;
}

::size_t SolutionResponse_Route::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IVR8.SolutionResponse.Route)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .IVR8.SolutionResponse.Stop stops = 2;
  total_size += 1UL * this->_internal_stops_size();
  for (const auto& msg : this->_internal_stops()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .IVR8.SolutionResponse.InterStop interStops = 3;
  total_size += 1UL * this->_internal_interstops_size();
  for (const auto& msg : this->_internal_interstops()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated float fixedCost = 4;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_fixedcost_size())
    ;
    std::size_t tag_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_fixedcost_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated .IVR8.SolutionResponse.TransitRuleAttribute transitRuleAttributes = 5;
  total_size += 1UL * this->_internal_transitruleattributes_size();
  for (const auto& msg : this->_internal_transitruleattributes()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // required string vehicleId = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_vehicleid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SolutionResponse_Route::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SolutionResponse_Route::MergeImpl
};
const ::google::protobuf::Message::ClassData*SolutionResponse_Route::GetClassData() const { return &_class_data_; }


void SolutionResponse_Route::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SolutionResponse_Route*>(&to_msg);
  auto& from = static_cast<const SolutionResponse_Route&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVR8.SolutionResponse.Route)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_stops()->MergeFrom(from._internal_stops());
  _this->_internal_mutable_interstops()->MergeFrom(from._internal_interstops());
  _this->_internal_mutable_fixedcost()->MergeFrom(from._internal_fixedcost());
  _this->_internal_mutable_transitruleattributes()->MergeFrom(from._internal_transitruleattributes());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_vehicleid(from._internal_vehicleid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SolutionResponse_Route::CopyFrom(const SolutionResponse_Route& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVR8.SolutionResponse.Route)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SolutionResponse_Route::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(_internal_stops()))
    return false;
  if (!::google::protobuf::internal::AllAreInitialized(_internal_interstops()))
    return false;
  if (!::google::protobuf::internal::AllAreInitialized(_internal_transitruleattributes()))
    return false;
  return true;
}

void SolutionResponse_Route::InternalSwap(SolutionResponse_Route* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.stops_.InternalSwap(&other->_impl_.stops_);
  _impl_.interstops_.InternalSwap(&other->_impl_.interstops_);
  _impl_.fixedcost_.InternalSwap(&other->_impl_.fixedcost_);
  _impl_.transitruleattributes_.InternalSwap(&other->_impl_.transitruleattributes_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.vehicleid_, lhs_arena,
                                       &other->_impl_.vehicleid_, rhs_arena);
}

::google::protobuf::Metadata SolutionResponse_Route::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter, &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
      file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[39]);
}
// ===================================================================

class SolutionResponse_Infeasibility_Info::_Internal {
 public:
  using HasBits = decltype(std::declval<SolutionResponse_Infeasibility_Info>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility_Info, _impl_._has_bits_);
  static void set_has_message(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_dimid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_limit(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_count(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

SolutionResponse_Infeasibility_Info::SolutionResponse_Infeasibility_Info(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVR8.SolutionResponse.Infeasibility.Info)
}
SolutionResponse_Infeasibility_Info::SolutionResponse_Infeasibility_Info(const SolutionResponse_Infeasibility_Info& from) : ::google::protobuf::Message() {
  SolutionResponse_Infeasibility_Info* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.constrainingtaskids_){from._impl_.constrainingtaskids_},
      decltype(_impl_.message_){},
      decltype(_impl_.dimid_){},
      decltype(_impl_.limit_){},
      decltype(_impl_.value_){},
      decltype(_impl_.count_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.message_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.message_.Set(from._internal_message(), _this->GetArenaForAllocation());
  }
  _impl_.dimid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dimid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.dimid_.Set(from._internal_dimid(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.limit_, &from._impl_.limit_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.count_) -
    reinterpret_cast<char*>(&_impl_.limit_)) + sizeof(_impl_.count_));

  // @@protoc_insertion_point(copy_constructor:IVR8.SolutionResponse.Infeasibility.Info)
}
inline void SolutionResponse_Infeasibility_Info::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.constrainingtaskids_){arena},
      decltype(_impl_.message_){},
      decltype(_impl_.dimid_){},
      decltype(_impl_.limit_){0},
      decltype(_impl_.value_){0},
      decltype(_impl_.count_){::int64_t{0}},
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.message_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.dimid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dimid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
SolutionResponse_Infeasibility_Info::~SolutionResponse_Infeasibility_Info() {
  // @@protoc_insertion_point(destructor:IVR8.SolutionResponse.Infeasibility.Info)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SolutionResponse_Infeasibility_Info::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_constrainingtaskids()->~RepeatedPtrField();
  _impl_.message_.Destroy();
  _impl_.dimid_.Destroy();
}
void SolutionResponse_Infeasibility_Info::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SolutionResponse_Infeasibility_Info::Clear() {
// @@protoc_insertion_point(message_clear_start:IVR8.SolutionResponse.Infeasibility.Info)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_constrainingtaskids()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.message_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.dimid_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&_impl_.limit_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.count_) -
        reinterpret_cast<char*>(&_impl_.limit_)) + sizeof(_impl_.count_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SolutionResponse_Infeasibility_Info::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 80, 2> SolutionResponse_Infeasibility_Info::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility_Info, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SolutionResponse_Infeasibility_Info_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string message = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility_Info, _impl_.message_)}},
    // optional string dimId = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility_Info, _impl_.dimid_)}},
    // optional float limit = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility_Info, _impl_.limit_)}},
    // optional float value = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 3, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility_Info, _impl_.value_)}},
    // optional int64 count = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SolutionResponse_Infeasibility_Info, _impl_.count_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility_Info, _impl_.count_)}},
    // repeated string constrainingTaskIds = 6;
    {::_pbi::TcParser::FastSR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility_Info, _impl_.constrainingtaskids_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required string message = 1;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility_Info, _impl_.message_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string dimId = 2;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility_Info, _impl_.dimid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional float limit = 3;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility_Info, _impl_.limit_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float value = 4;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility_Info, _impl_.value_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional int64 count = 5;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility_Info, _impl_.count_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // repeated string constrainingTaskIds = 6;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility_Info, _impl_.constrainingtaskids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\50\7\5\0\0\0\23\0"
    "IVR8.SolutionResponse.Infeasibility.Info"
    "message"
    "dimId"
    "constrainingTaskIds"
  }},
};

::uint8_t* SolutionResponse_Infeasibility_Info::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IVR8.SolutionResponse.Infeasibility.Info)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string message = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_message();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.SolutionResponse.Infeasibility.Info.message");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string dimId = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_dimid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.SolutionResponse.Infeasibility.Info.dimId");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional float limit = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_limit(), target);
  }

  // optional float value = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_value(), target);
  }

  // optional int64 count = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<5>(
            stream, this->_internal_count(), target);
  }

  // repeated string constrainingTaskIds = 6;
  for (int i = 0, n = this->_internal_constrainingtaskids_size(); i < n; ++i) {
    const auto& s = this->_internal_constrainingtaskids().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.SolutionResponse.Infeasibility.Info.constrainingTaskIds");
    target = stream->WriteString(6, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVR8.SolutionResponse.Infeasibility.Info)
  return target;
}

::size_t SolutionResponse_Infeasibility_Info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IVR8.SolutionResponse.Infeasibility.Info)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string constrainingTaskIds = 6;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_constrainingtaskids().size());
  for (int i = 0, n = _internal_constrainingtaskids().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_constrainingtaskids().Get(i));
  }
  // required string message = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_message());
  }

  if (cached_has_bits & 0x0000001eu) {
    // optional string dimId = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_dimid());
    }

    // optional float limit = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 5;
    }

    // optional float value = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 5;
    }

    // optional int64 count = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_count());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SolutionResponse_Infeasibility_Info::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SolutionResponse_Infeasibility_Info::MergeImpl
};
const ::google::protobuf::Message::ClassData*SolutionResponse_Infeasibility_Info::GetClassData() const { return &_class_data_; }


void SolutionResponse_Infeasibility_Info::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SolutionResponse_Infeasibility_Info*>(&to_msg);
  auto& from = static_cast<const SolutionResponse_Infeasibility_Info&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVR8.SolutionResponse.Infeasibility.Info)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_constrainingtaskids()->MergeFrom(from._internal_constrainingtaskids());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_message(from._internal_message());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_dimid(from._internal_dimid());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.limit_ = from._impl_.limit_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.value_ = from._impl_.value_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.count_ = from._impl_.count_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SolutionResponse_Infeasibility_Info::CopyFrom(const SolutionResponse_Infeasibility_Info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVR8.SolutionResponse.Infeasibility.Info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SolutionResponse_Infeasibility_Info::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

void SolutionResponse_Infeasibility_Info::InternalSwap(SolutionResponse_Infeasibility_Info* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.constrainingtaskids_.InternalSwap(&other->_impl_.constrainingtaskids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, lhs_arena,
                                       &other->_impl_.message_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dimid_, lhs_arena,
                                       &other->_impl_.dimid_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility_Info, _impl_.count_)
      + sizeof(SolutionResponse_Infeasibility_Info::_impl_.count_)
      - PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility_Info, _impl_.limit_)>(
          reinterpret_cast<char*>(&_impl_.limit_),
          reinterpret_cast<char*>(&other->_impl_.limit_));
}

::google::protobuf::Metadata SolutionResponse_Infeasibility_Info::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter, &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
      file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[40]);
}
// ===================================================================

class SolutionResponse_Infeasibility::_Internal {
 public:
  using HasBits = decltype(std::declval<SolutionResponse_Infeasibility>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility, _impl_._has_bits_);
  static void set_has_taskid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

SolutionResponse_Infeasibility::SolutionResponse_Infeasibility(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVR8.SolutionResponse.Infeasibility)
}
SolutionResponse_Infeasibility::SolutionResponse_Infeasibility(const SolutionResponse_Infeasibility& from) : ::google::protobuf::Message() {
  SolutionResponse_Infeasibility* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.infeasibilityinfo_){from._impl_.infeasibilityinfo_},
      decltype(_impl_.taskid_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.taskid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.taskid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.taskid_.Set(from._internal_taskid(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:IVR8.SolutionResponse.Infeasibility)
}
inline void SolutionResponse_Infeasibility::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.infeasibilityinfo_){arena},
      decltype(_impl_.taskid_){},
  };
  _impl_.taskid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.taskid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
SolutionResponse_Infeasibility::~SolutionResponse_Infeasibility() {
  // @@protoc_insertion_point(destructor:IVR8.SolutionResponse.Infeasibility)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SolutionResponse_Infeasibility::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.infeasibilityinfo_.~RepeatedPtrField();
  _impl_.taskid_.Destroy();
}
void SolutionResponse_Infeasibility::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SolutionResponse_Infeasibility::Clear() {
// @@protoc_insertion_point(message_clear_start:IVR8.SolutionResponse.Infeasibility)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_infeasibilityinfo()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.taskid_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SolutionResponse_Infeasibility::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 50, 2> SolutionResponse_Infeasibility::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SolutionResponse_Infeasibility_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .IVR8.SolutionResponse.Infeasibility.Info infeasibilityInfo = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility, _impl_.infeasibilityinfo_)}},
    // required string taskId = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility, _impl_.taskid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string taskId = 1;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility, _impl_.taskid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated .IVR8.SolutionResponse.Infeasibility.Info infeasibilityInfo = 2;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse_Infeasibility, _impl_.infeasibilityinfo_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::IVR8::SolutionResponse_Infeasibility_Info>()},
  }}, {{
    "\43\6\0\0\0\0\0\0"
    "IVR8.SolutionResponse.Infeasibility"
    "taskId"
  }},
};

::uint8_t* SolutionResponse_Infeasibility::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IVR8.SolutionResponse.Infeasibility)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string taskId = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_taskid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "IVR8.SolutionResponse.Infeasibility.taskId");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .IVR8.SolutionResponse.Infeasibility.Info infeasibilityInfo = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_infeasibilityinfo_size()); i < n; i++) {
    const auto& repfield = this->_internal_infeasibilityinfo().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVR8.SolutionResponse.Infeasibility)
  return target;
}

::size_t SolutionResponse_Infeasibility::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IVR8.SolutionResponse.Infeasibility)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .IVR8.SolutionResponse.Infeasibility.Info infeasibilityInfo = 2;
  total_size += 1UL * this->_internal_infeasibilityinfo_size();
  for (const auto& msg : this->_internal_infeasibilityinfo()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // required string taskId = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_taskid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SolutionResponse_Infeasibility::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SolutionResponse_Infeasibility::MergeImpl
};
const ::google::protobuf::Message::ClassData*SolutionResponse_Infeasibility::GetClassData() const { return &_class_data_; }


void SolutionResponse_Infeasibility::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SolutionResponse_Infeasibility*>(&to_msg);
  auto& from = static_cast<const SolutionResponse_Infeasibility&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVR8.SolutionResponse.Infeasibility)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_infeasibilityinfo()->MergeFrom(from._internal_infeasibilityinfo());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_taskid(from._internal_taskid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SolutionResponse_Infeasibility::CopyFrom(const SolutionResponse_Infeasibility& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVR8.SolutionResponse.Infeasibility)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SolutionResponse_Infeasibility::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(_internal_infeasibilityinfo()))
    return false;
  return true;
}

void SolutionResponse_Infeasibility::InternalSwap(SolutionResponse_Infeasibility* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.infeasibilityinfo_.InternalSwap(&other->_impl_.infeasibilityinfo_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.taskid_, lhs_arena,
                                       &other->_impl_.taskid_, rhs_arena);
}

::google::protobuf::Metadata SolutionResponse_Infeasibility::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter, &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
      file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[41]);
}
// ===================================================================

class SolutionResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<SolutionResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SolutionResponse, _impl_._has_bits_);
  static void set_has_objective(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

SolutionResponse::SolutionResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVR8.SolutionResponse)
}
SolutionResponse::SolutionResponse(const SolutionResponse& from) : ::google::protobuf::Message() {
  SolutionResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.routes_){from._impl_.routes_},
      decltype(_impl_.infeasibilities_){from._impl_.infeasibilities_},
      decltype(_impl_.objective_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _this->_impl_.objective_ = from._impl_.objective_;

  // @@protoc_insertion_point(copy_constructor:IVR8.SolutionResponse)
}
inline void SolutionResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.routes_){arena},
      decltype(_impl_.infeasibilities_){arena},
      decltype(_impl_.objective_){0},
  };
}
SolutionResponse::~SolutionResponse() {
  // @@protoc_insertion_point(destructor:IVR8.SolutionResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SolutionResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.routes_.~RepeatedPtrField();
  _impl_.infeasibilities_.~RepeatedPtrField();
}
void SolutionResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SolutionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:IVR8.SolutionResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_routes()->Clear();
  _internal_mutable_infeasibilities()->Clear();
  _impl_.objective_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SolutionResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> SolutionResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SolutionResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SolutionResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required float objective = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse, _impl_.objective_)}},
    // repeated .IVR8.SolutionResponse.Route routes = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SolutionResponse, _impl_.routes_)}},
    // repeated .IVR8.SolutionResponse.Infeasibility infeasibilities = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(SolutionResponse, _impl_.infeasibilities_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required float objective = 1;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse, _impl_.objective_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // repeated .IVR8.SolutionResponse.Route routes = 2;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse, _impl_.routes_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .IVR8.SolutionResponse.Infeasibility infeasibilities = 3;
    {PROTOBUF_FIELD_OFFSET(SolutionResponse, _impl_.infeasibilities_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::IVR8::SolutionResponse_Route>()},
    {::_pbi::TcParser::GetTable<::IVR8::SolutionResponse_Infeasibility>()},
  }}, {{
  }},
};

::uint8_t* SolutionResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IVR8.SolutionResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required float objective = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_objective(), target);
  }

  // repeated .IVR8.SolutionResponse.Route routes = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_routes_size()); i < n; i++) {
    const auto& repfield = this->_internal_routes().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .IVR8.SolutionResponse.Infeasibility infeasibilities = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_infeasibilities_size()); i < n; i++) {
    const auto& repfield = this->_internal_infeasibilities().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVR8.SolutionResponse)
  return target;
}

::size_t SolutionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IVR8.SolutionResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .IVR8.SolutionResponse.Route routes = 2;
  total_size += 1UL * this->_internal_routes_size();
  for (const auto& msg : this->_internal_routes()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .IVR8.SolutionResponse.Infeasibility infeasibilities = 3;
  total_size += 1UL * this->_internal_infeasibilities_size();
  for (const auto& msg : this->_internal_infeasibilities()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // required float objective = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SolutionResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SolutionResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*SolutionResponse::GetClassData() const { return &_class_data_; }


void SolutionResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SolutionResponse*>(&to_msg);
  auto& from = static_cast<const SolutionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVR8.SolutionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_routes()->MergeFrom(from._internal_routes());
  _this->_internal_mutable_infeasibilities()->MergeFrom(from._internal_infeasibilities());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_objective(from._internal_objective());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SolutionResponse::CopyFrom(const SolutionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVR8.SolutionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SolutionResponse::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(_internal_routes()))
    return false;
  if (!::google::protobuf::internal::AllAreInitialized(_internal_infeasibilities()))
    return false;
  return true;
}

void SolutionResponse::InternalSwap(SolutionResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.routes_.InternalSwap(&other->_impl_.routes_);
  _impl_.infeasibilities_.InternalSwap(&other->_impl_.infeasibilities_);
        swap(_impl_.objective_, other->_impl_.objective_);
}

::google::protobuf::Metadata SolutionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_getter, &descriptor_table_ivr8_2dyni1c9k2swof_2eproto_once,
      file_level_metadata_ivr8_2dyni1c9k2swof_2eproto[42]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace IVR8
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
